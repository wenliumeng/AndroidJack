Index: app/src/main/java/com/cn/seymour/androidjack/demos/LEditTextWithBtn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/LEditTextWithBtn.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/LEditTextWithBtn.java	(revision )
@@ -0,0 +1,234 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.content.Context;
+import android.graphics.Color;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.View;
+
+public class LEditTextWithBtn extends LLinearLayoutView implements View.OnClickListener {
+
+	private LEditTextWithClear editView;
+	private LButtonBg queryBtn;
+	//接口
+	private LEditTextWithBtnQueryLintener editTextWithBtnQueryLintener;
+	
+	public LEditTextWithBtn(Context context)
+	{
+		super(context);
+		initView(context);
+	}
+	public LEditTextWithBtn(Context context, AttributeSet attrs)
+	{
+		super(context, attrs);
+		initView(context);
+	}
+	
+	public void setEditTextWithBtnQueryLintener(
+			LEditTextWithBtnQueryLintener editTextWithBtnQueryLintener) 
+	{
+		this.editTextWithBtnQueryLintener = editTextWithBtnQueryLintener;
+	}
+	
+	/**
+	 * 初始化UI
+	 */
+	private void initView(Context context)
+	{
+		int pad = 5;
+		this.setPadding(pad, 0, 0, 0);
+		this.setGravity(Gravity.CENTER_VERTICAL);
+		
+		//输入
+		editView = new LEditTextWithClear(context);
+		editView.setTextSize(16);
+		editView.setGravity(Gravity.CENTER_VERTICAL);
+		editView.setHint("请输入关键字");
+		editView.setBackgroundColor(Color.parseColor("#00000000"));
+		LayoutParams editViewLP = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
+		editViewLP.weight = 1;
+		editViewLP.setMargins(0, 2, 0, 0);
+		this.addView(editView,editViewLP);
+		editViewLP = null;		
+		
+		queryBtn = new LButtonBg(context);
+		queryBtn.setOnClickListener(this);
+		queryBtn.setText("搜索");
+		queryBtn.setTextSize(13);
+		LayoutParams queryBtnLP = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
+		queryBtnLP.setMargins(0, 1, 1, 1);
+		this.addView(queryBtn,queryBtnLP);
+		queryBtnLP = null;
+	}
+
+	/**
+	 * 设置输入类型
+	 */
+	public void setInPutType(int type)
+	{
+		if(null != editView)
+		{
+			editView.setInputType(type);
+		}
+	}
+	
+	/**
+	 * 设置提示内容
+	 */
+	public void setHintString(String str)
+	{
+		if(null != editView)
+		{
+			editView.setHint(str);
+		}
+	}
+	/**
+	 * 设置提示内容颜色
+	 */
+	public void setHintStringColor(int color)
+	{
+		if(null != editView)
+		{
+			editView.setHintTextColor(color);
+		}
+	}
+	
+	/**
+	 * 设置是否显示插叙按钮
+	 */
+	public void setShowQuerybtn(boolean b)
+	{
+		if(null != queryBtn)
+		{
+			queryBtn.setVisibility(b ? View.VISIBLE : View.GONE);
+		}
+	}
+	
+	/**
+	 * 设置查询按钮的背景颜�?
+	 */
+	public void setQueryBtnBackColor(int normalColor, int pressedColor,
+			int foucesdColor, int enabledColor, int selectedColor,
+			float roundRadius, int stokeWidth, int stokeColor)
+	{
+		if(null == queryBtn)
+		{
+			return;
+		}
+		queryBtn.setBackgroundColor(normalColor, 
+				pressedColor, 
+				foucesdColor, 
+				enabledColor, 
+				selectedColor, 
+				roundRadius, 
+				stokeWidth, 
+				stokeColor);
+	}
+	
+	/**
+	 * 设置查询按钮的背景颜�?
+	 */
+	public void setQueryBtnBackColor2(int normalColor, int pressedColor,
+			int foucesdColor, int enabledColor, int selectedColor,
+			float[] roundRadius, int stokeWidth, int stokeColor)
+	{
+		if(null == queryBtn)
+		{
+			return;
+		}
+		queryBtn.setBackgroundColor2(normalColor, 
+				pressedColor, 
+				foucesdColor, 
+				enabledColor, 
+				selectedColor, 
+				roundRadius, 
+				stokeWidth, 
+				stokeColor);
+	}
+	
+	/**
+	 * 设置查询按钮的图片背�?
+	 */
+	public void setQueryBtnBackImg(int normalImgId,
+			int pressedImgId,
+			int foucesdImgId,
+			int selectedImgId,
+			int enabledImgId)
+	{
+		if(null == queryBtn)
+		{
+			return;
+		}
+		queryBtn.setBackgroundImg(normalImgId, 
+				pressedImgId, 
+				foucesdImgId, 
+				selectedImgId, 
+				enabledImgId);
+	}
+	@Override
+	public void onClick(View view) 
+	{
+		if(view == queryBtn)
+		{
+			if(null != editView.getText().toString() && !"".equals(editView.getText().toString()))
+			{
+				
+			}
+			else
+			{
+				editView.startAnimation(LEditTextWithClear.shakeAnimation(5));
+			}
+			
+			if(null != this.editTextWithBtnQueryLintener)
+			{
+				this.editTextWithBtnQueryLintener.onClickQuery(this, editView.getText().toString());
+			}
+		}
+	}
+
+	public interface  LEditTextWithBtnQueryLintener
+	{
+		public void onClickQuery(LEditTextWithBtn editTextWithBtn, String keyString);
+	}
+	
+	/**
+	 * 设置输入框的默认内容
+	 */
+	public void setText(String string)
+	{
+		if(null != editView)
+		{
+			editView.setText(string);
+		}
+	}
+	
+	public String getText()
+	{
+		if(null != editView)
+		{
+			return editView.getText().toString();
+		}
+		return null;
+	}
+	/**
+	 * 左右晃动提醒
+	 */
+	public void startAnimal()
+	{
+		if(null != editView)
+		{
+			editView.startAnimation(LEditTextWithClear.shakeAnimation(5));
+		}
+	}
+	
+	/**
+	 * 设置输入框内容的位置
+	 */
+	public void setEditViewGravity(int gravity)
+	{
+		if(null != editView)
+		{
+			editView.setGravity(gravity);
+		}
+	}
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10.java	(revision )
@@ -0,0 +1,205 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.util.Calendar;
+import java.util.TimeZone;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.drawable.BitmapDrawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Looper;
+import android.util.DisplayMetrics;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.LinearLayout;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * 时钟�
+ * @author Administrator
+ *
+ */
+public class MainActivity10 extends Activity {
+
+	private final int FP = ViewGroup.LayoutParams.MATCH_PARENT;
+	private final int WC = ViewGroup.LayoutParams.WRAP_CONTENT;
+
+	private QAnalogClock clock1;
+
+	public void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		LinearLayout lLayout = new LinearLayout(this);
+		lLayout.setLayoutParams(new LinearLayout.LayoutParams(FP, FP));
+		lLayout.setOrientation(LinearLayout.VERTICAL);
+
+		clock1 = new QAnalogClock(this, "GMT+8:00");
+		lLayout.addView(clock1, new LinearLayout.LayoutParams(WC, WC));
+
+		setContentView(lLayout);
+	}
+
+	class QAnalogClock extends View {
+		BitmapDrawable bmdHour;
+		BitmapDrawable bmdMinute;
+		BitmapDrawable bmdSecond;
+		BitmapDrawable bmdDial;
+
+		Paint mPaint;
+
+		Handler tickHandler;
+
+		/**
+		 * 表盘宽度
+		 */
+		int mWidth;
+		/**
+		 * 表盘宽度
+		 */
+		int mHeigh;
+		int mTempWidth;
+		int mTempHeigh;
+		/**
+		 * 50
+		 */
+		int centerX;
+		/**
+		 * 50
+		 */
+		int centerY;
+
+		int availableWidth = 100;
+		int availableHeight = 100;
+
+		private String sTimeZoneString;
+
+		public QAnalogClock(Context context, String sTime_Zone) {
+			super(context);
+			sTimeZoneString = sTime_Zone;
+
+			bmdHour = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_hour);
+			bmdMinute = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_minute);
+			bmdSecond = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_minute);
+			bmdDial = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_dial);
+
+			mWidth = bmdDial.getBitmap().getWidth();
+			mHeigh = bmdDial.getBitmap().getHeight();
+			centerX = availableWidth / 2;
+			centerY = availableHeight / 2;
+
+			mPaint = new Paint();
+			mPaint.setColor(Color.BLUE);
+			run();
+		}
+
+		public void run() {
+			tickHandler = new Handler();
+			tickHandler.post(tickRunnable);
+		}
+
+		private Runnable tickRunnable = new Runnable() {
+			public void run() {
+				postInvalidate();
+				tickHandler.postDelayed(tickRunnable, 1000);
+			}
+		};
+
+		protected void onDraw(Canvas canvas) {
+			super.onDraw(canvas);
+			DisplayMetrics dm = this.getResources().getDisplayMetrics();
+			Paint mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+			mPaint.setColor(Color.BLACK);
+			mPaint.setStrokeWidth(1);
+			canvas.drawLine(dm.widthPixels/2, 0,dm.widthPixels/2, dm.heightPixels, mPaint);
+			canvas.drawLine(0, dm.heightPixels/2,dm.widthPixels, dm.heightPixels/2, mPaint);
+
+
+			Calendar cal = Calendar.getInstance(TimeZone
+					.getTimeZone(sTimeZoneString));
+			int hour = cal.get(Calendar.HOUR);
+			int minute = cal.get(Calendar.MINUTE);
+			int second = cal.get(Calendar.SECOND);
+			float hourRotate = hour * 30.0f + minute / 60.0f * 30.0f +180;
+			System.out.println(hourRotate);
+			float minuteRotate = minute * 6.0f +180;
+			float secondRotate = second * 6.0f + 180;
+
+			boolean scaled = false;
+
+			/*if (availableWidth < mWidth || availableHeight < mHeigh) {
+				scaled = true;
+				float scale = Math.min((float) availableWidth / (float) mWidth,
+						(float) availableHeight / (float) mHeigh);
+				canvas.save();
+				canvas.scale(scale, scale, centerX, centerY);
+			}*/
+
+			bmdDial.setBounds(
+					dm.widthPixels/2 - (mWidth/2),
+					dm.heightPixels/2 - (mHeigh/2),
+					dm.widthPixels/2 + (mWidth/2),
+					dm.heightPixels/2 + (mHeigh/2));
+
+			bmdDial.draw(canvas);
+
+			mTempWidth = bmdHour.getIntrinsicWidth();
+			mTempHeigh = bmdHour.getIntrinsicHeight();
+			canvas.save();
+			canvas.rotate(hourRotate, dm.widthPixels/2, dm.heightPixels/2);
+			bmdHour.setBounds(
+					dm.widthPixels/2 - (mTempWidth / 2),
+					dm.heightPixels/2,
+					dm.widthPixels/2 + (mTempWidth / 2),
+					dm.heightPixels/2 + (mTempHeigh));
+			bmdHour.draw(canvas);
+
+			canvas.restore();
+
+			mTempWidth = bmdMinute.getIntrinsicWidth();
+			mTempHeigh = bmdMinute.getIntrinsicHeight();
+			canvas.save();
+			canvas.rotate(minuteRotate, dm.widthPixels/2, dm.heightPixels/2);
+			bmdMinute.setBounds(
+					dm.widthPixels/2 - (mTempWidth / 2),
+					dm.heightPixels/2,
+					dm.widthPixels/2 + (mTempWidth / 2),
+					dm.heightPixels/2 + (mTempHeigh));
+			bmdMinute.draw(canvas);
+
+			canvas.restore();
+
+			mTempWidth = bmdSecond.getIntrinsicWidth();
+			mTempHeigh = bmdSecond.getIntrinsicHeight();
+			canvas.rotate(secondRotate, dm.widthPixels/2, dm.heightPixels/2);
+//			System.out.println("secondRotate : " + secondRotate);
+//			System.out.println("mTempWidth : " + mTempWidth);
+//			System.out.println("mTempHeigh : " + mTempHeigh);
+
+			bmdSecond.setBounds(
+					dm.widthPixels/2 - (mTempWidth / 2),
+					dm.heightPixels/2	,
+					dm.widthPixels/2 + (mTempWidth / 2),
+					+100+dm.heightPixels/2	+ (mTempHeigh));
+
+//			System.out.println("centerX - (mTempWidth / 2) " + (centerX - (mTempWidth / 2)));
+//			System.out.println("centerY	- (mTempHeigh / 2) " + (centerY	- (mTempHeigh / 2)));
+//			System.out.println("centerX + (mTempWidth / 2) " + (centerX + (mTempWidth / 2)));
+//			System.out.println("centerY	+ (mTempHeigh / 2) " + (centerY	+ (mTempHeigh / 2)));
+
+			bmdSecond.draw(canvas);
+
+			if (scaled) {
+				canvas.restore();
+			}
+		}
+	}
+
+
+
+}
+
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity101_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity101_1.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity101_1.java	(revision )
@@ -0,0 +1,121 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.util.Calendar;
+import java.util.TimeZone;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Paint.Style;
+import android.graphics.drawable.BitmapDrawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.util.DisplayMetrics;
+import android.view.View;
+import android.view.WindowManager;
+
+public class MainActivity101_1 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		Mclock view = new Mclock(this, "GMT+8:00");
+		
+		setContentView(view);
+	}
+	
+	class Mclock extends View{
+
+//		BitmapDrawable bitmapBottom = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_dial);
+//		BitmapDrawable bitmapHour = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_hour);
+//		BitmapDrawable bitmapMintue = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_minute);
+//		BitmapDrawable bitmapSecond = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_minute);
+		
+		int Hour;
+		int Minute;
+		int Second;
+		float HourRotate;
+		float MinuteRotate;
+		float SecondRotate;
+		
+		int mWidth;
+		int mHeigh;
+		
+		String timeZone;
+		
+		Handler handler;
+		
+		public Mclock(Context context,String timezone) {
+			super(context);
+			this.timeZone = timezone;
+			DisplayMetrics dm = context.getResources().getDisplayMetrics();
+			mWidth = dm.widthPixels/2;
+			mHeigh = dm.heightPixels/2;
+			handler = new Handler();
+			handler.post(run);
+		}
+
+		Runnable run = new Runnable() {
+			@Override
+			public void run() {
+				postInvalidate();
+				handler.postDelayed(run, 1000);
+			}
+		};
+		
+		@Override
+		protected void onDraw(Canvas canvas) {
+			super.onDraw(canvas);
+			Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(timeZone));
+			Hour = cal.get(Calendar.HOUR);
+			Minute = cal.get(Calendar.MINUTE);
+			Second = cal.get(Calendar.SECOND);
+			HourRotate = Hour*30f+Minute*0.5f+180;
+			MinuteRotate = Minute*6f +180;
+			SecondRotate = Second*6f +180;
+			
+//			canvas.save();
+//			bitmapBottom.setBounds(0, 0, bitmapBottom.getIntrinsicWidth(), bitmapBottom.getIntrinsicHeight());
+//			bitmapBottom.draw(canvas);
+//			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(HourRotate, mWidth, mHeigh);
+//			bitmapHour.setBounds(bitmapBottom.getIntrinsicWidth()/2-bitmapHour.getIntrinsicWidth()/2,bitmapBottom.getIntrinsicHeight()/2, bitmapBottom.getIntrinsicWidth()/2+bitmapHour.getIntrinsicWidth()/2, bitmapBottom.getIntrinsicHeight()/2+bitmapHour.getIntrinsicHeight());
+//			bitmapHour.draw(canvas);
+			Paint paint = new Paint();
+			paint.setColor(Color.GREEN);
+			paint.setStyle(Style.FILL);
+			canvas.drawRect(mWidth-10, mHeigh, mWidth+10, mHeigh+100, paint);
+			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(MinuteRotate, mWidth, mHeigh);
+			paint.setColor(Color.YELLOW);
+			canvas.drawRect(mWidth-5, mHeigh, mWidth+5, mHeigh+150, paint);
+			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(SecondRotate, mWidth, mHeigh);
+			paint.setColor(Color.BLUE);
+			canvas.drawRect(mWidth-2, mHeigh, mWidth+2, mHeigh+200, paint);
+			canvas.restore();
+			
+			/*canvas.save();
+			canvas.rotate(MinuteRotate, bitmapBottom.getIntrinsicWidth()/2, bitmapBottom.getIntrinsicHeight()/2);
+			bitmapMintue.setBounds(bitmapBottom.getIntrinsicWidth()/2-bitmapMintue.getIntrinsicWidth()/2,bitmapBottom.getIntrinsicHeight()/2, bitmapBottom.getIntrinsicWidth()/2+bitmapMintue.getIntrinsicWidth()/2, bitmapBottom.getIntrinsicHeight()/2+bitmapMintue.getIntrinsicHeight());
+			bitmapMintue.draw(canvas);
+			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(SecondRotate, bitmapBottom.getIntrinsicWidth()/2, bitmapBottom.getIntrinsicHeight()/2);
+			bitmapSecond.setBounds(bitmapBottom.getIntrinsicWidth()/2-bitmapSecond.getIntrinsicWidth()/2,bitmapBottom.getIntrinsicHeight()/2, bitmapBottom.getIntrinsicWidth()/2+bitmapSecond.getIntrinsicWidth()/2, bitmapBottom.getIntrinsicHeight()/2+bitmapSecond.getIntrinsicHeight()+100);
+			bitmapSecond.draw(canvas);
+			canvas.restore();*/
+		}
+		
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/Clock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/Clock.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/Clock.java	(revision )
@@ -0,0 +1,34 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.content.Context;
+import android.os.Bundle;
+import android.view.View;
+
+public class Clock extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		MClock m = new MClock(this, "GMT+8:00");
+		setContentView(m);
+	}
+
+	class MClock extends View{
+
+		String sTimeZone = "";
+		
+		int Hour;
+		int Minute;
+		int Second;
+		float HourRoate;
+		
+		public MClock(Context context,String STime_zone) {
+			super(context);
+			sTimeZone = STime_zone;
+		}
+		
+	}
+	
+}
Index: app/src/main/res/layout/activity_main4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main4.xml	(revision )
+++ app/src/main/res/layout/activity_main4.xml	(revision )
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:namespace="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:src="@drawable/icon"/>
+
+    <com.cn.seymour.androidjack.demos.widget.CustomImageView
+        android:layout_width="100dp"
+        android:layout_height="100dp"
+        namespace:type="circle"
+        namespace:src="@drawable/icon"/>
+
+    <com.cn.seymour.androidjack.demos.widget.CustomImageView
+        android:layout_width="90dp"
+        android:layout_height="200dp"
+        namespace:type="round"
+        namespace:boderRadius="20dp"
+        namespace:src="@drawable/icon"/>
+
+    <com.cn.seymour.androidjack.demos.widget.CustomImageViewt
+        android:layout_width="200dp"
+        android:layout_height="200dp"
+        namespace:type="circle"
+        namespace:src="@drawable/scenery"/>
+
+    <com.cn.seymour.androidjack.demos.widget.CustomImageViewt1
+        android:layout_width="100dp"
+        android:layout_height="100dp"
+        namespace:type="round"
+        namespace:boderRadius="20dp"
+        namespace:src="@drawable/scenery"/>
+
+    <com.cn.seymour.androidjack.demos.widget.CustomImageViewt2
+        android:layout_width="200dp"
+        android:layout_height="200dp"
+        namespace:type="circle"
+        namespace:src="@drawable/icon"/>
+
+</LinearLayout>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision b452216fd07afa07507c5d603d2f2e46bcca336c)
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -9,15 +9,40 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme" >
         <activity
-            android:name=".MainActivity"
+            android:name="com.cn.seymour.androidjack.demos.activity"
             android:label="@string/app_name"
             android:theme="@style/AppTheme.NoActionBar" >
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity10_1"
+            android:theme="@android:style/Theme.Translucent"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity1"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity2"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity3"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity4"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity5"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity6"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity7"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity8"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity9"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity10"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity11"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity12"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity13"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity14"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity15"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity16"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity17"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity18"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity19"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity20"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity13_1"></activity>
+        <activity android:name="com.cn.seymour.androidjack.demos.MainActivity22"></activity>
     </application>
 
 </manifest>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity9.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity9.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity9.java	(revision )
@@ -0,0 +1,26 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.util.DisplayMetrics;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * 垂直排列居中对齐
+ * @author Administrator
+ *
+ */
+public class MainActivity9 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main9);
+		
+	}
+
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/GuaGuaKa.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/GuaGuaKa.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/GuaGuaKa.java	(revision )
@@ -0,0 +1,173 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Paint.Cap;
+import android.graphics.Paint.Join;
+import android.graphics.Paint.Style;
+import android.graphics.Rect;
+import android.graphics.Path;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+
+public class GuaGuaKa extends View {
+
+	/**
+	 * ��绘制线条的Paint，
+	 */
+	private Paint mOutterPaint  = new Paint();
+	
+	/**
+	 * ��记录用户绘制的Paint
+	 */
+	private Path mPath = new Path();
+	
+	private Paint mBackPaint = new Paint();
+	
+	private String mText = "asdfasdkjflsadjflksjafdks";
+	
+	private Rect mTextBound = new Rect();
+	
+	private Bitmap mbitmap;
+	
+	private Canvas mCanvas;
+	
+	private int mLastX;
+	
+	private int mLastY;
+	
+	private boolean isComplate = false;
+	
+	public GuaGuaKa(Context context, AttributeSet attrs, int defStyleAttr) {
+		super(context, attrs, defStyleAttr);
+	}
+
+	public GuaGuaKa(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public GuaGuaKa(Context context) {
+		this(context, null);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		//����
+		//canvas.drawBitmap(((BitmapDrawable)getResources().getDrawable(R.drawable.scenery)).getBitmap(), 0, 0, null);
+		canvas.drawText(mText,0, mText.length(), mBackPaint);
+		if(!isComplate){
+			mOutterPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));
+			mCanvas.drawPath(mPath, mOutterPaint);
+			canvas.drawBitmap(mbitmap, 0, 0, null);
+		}
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+		
+		int width = getMeasuredWidth();
+		int height = getMeasuredHeight();
+		
+		mbitmap = Bitmap.createBitmap(width, height, Config.ARGB_8888);
+		
+		mCanvas = new Canvas(mbitmap);
+		mCanvas.drawColor(Color.DKGRAY);
+		
+		mOutterPaint.setColor(Color.RED);
+		mOutterPaint.setAntiAlias(true);
+		mOutterPaint.setDither(true);
+		mOutterPaint.setStyle(Style.STROKE);
+		mOutterPaint.setStrokeJoin(Join.ROUND);
+		mOutterPaint.setStrokeCap(Cap.ROUND);
+		mOutterPaint.setStrokeWidth(20);
+		
+		mBackPaint.setColor(Color.YELLOW);
+		mBackPaint.setStyle(Style.FILL);
+		mBackPaint.setTextScaleX(2f);
+		mBackPaint.setTextSize(22);
+		mBackPaint.getTextBounds(mText, 0,mText.length(), mTextBound);
+	}
+
+	@Override
+	public boolean onTouchEvent(MotionEvent event) {
+		int action = event.getAction();
+		int x = (int)event.getX();
+		int y = (int)event.getY();
+		switch (action) {
+		case MotionEvent.ACTION_DOWN:
+			mLastX = x;
+			mLastY = y;
+			mPath.moveTo(mLastX,mLastY);
+			break;
+		case MotionEvent.ACTION_MOVE:
+			int dx = Math.abs(x-mLastX);
+			int dy = Math.abs(y-mLastY);
+			
+			if(dx > 3 || dy > 3)
+			{
+				mPath.lineTo(x, y);
+			}
+//			mLastX = x;
+//			mLastY = y;
+			break;
+		case MotionEvent.ACTION_UP:
+			new Thread(run).start();
+			break;
+		default:
+			break;
+		}
+		invalidate();
+		return true;
+	}
+
+	private Runnable run = new Runnable() {
+		
+		private int[] mPixels;
+		@Override
+		public void run() {
+			int w = getWidth();
+			int h = getHeight();
+			
+			float wipeArea = 0;
+			float totalArea = w * h;
+			
+			Bitmap bitmap = mbitmap;
+			
+			mPixels = new int[w * h];
+			
+			bitmap.getPixels(mPixels, 0,w, 0, 0, w, h);
+			
+			for(int i = 0; i < w; i++)
+			{
+				for(int j = 0; j < h; j++)
+				{
+					int index = i+w*j;
+					if(mPixels[index] == 0 )
+					{
+						wipeArea++;
+					}
+				}
+			}
+			
+			if(wipeArea > 0 && totalArea > 0)
+			{
+				int percent = (int)(wipeArea*100/totalArea);
+				if(percent > 10)
+				{
+					isComplate = true;
+					postInvalidate();
+				}
+			}
+		}
+	};
+	
+}
Index: app/src/main/res/layout/activity_main2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main2.xml	(revision )
+++ app/src/main/res/layout/activity_main2.xml	(revision )
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:background="#00ff00">
+        
+		<TextView 
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="2222"/>
+        
+        <TextView 
+            android:id="@+id/tv1"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="sdfsdfffffffffffffffffffffffffffffffff"/>
+        
+    </LinearLayout>
+    
+    <RelativeLayout 
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="#ff0000">
+        <TextView 
+            android:id="@+id/tv2"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerVertical="true"
+			android:textSize="33sp"
+            android:text="2222"/>
+        
+        <TextView 
+            android:id="@+id/tv11"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_centerVertical="true"
+            android:layout_toRightOf="@id/tv2"
+            android:text="sdfsdfffffffffffffffffffffffffffffffff"/>
+        <TextView 
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_alignLeft="@id/tv1"
+            android:layout_below="@id/tv2"
+            android:textSize="53sp"
+            android:text="111111111111111111111111111"/>
+    </RelativeLayout>
+    
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="#0000ff">
+        <TextView 
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="sdfsdf"/>
+    </LinearLayout>
+    
+    <Button 
+        android:id="@+id/btn"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+    
+</LinearLayout>
Index: app/src/main/res/drawable/bbuton_info_rounded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bbuton_info_rounded.xml	(revision )
+++ app/src/main/res/drawable/bbuton_info_rounded.xml	(revision )
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_pressed="true"><shape>
+            <solid android:color="@color/bbutton_info_pressed" />
+
+            <stroke android:width="1dp" android:color="@color/bbutton_info_edge" />
+
+            <corners android:radius="10dp" />
+        </shape></item>
+    <item android:state_enabled="false"><shape>
+            <solid android:color="@color/bbutton_info_disabled" />
+
+            <stroke android:width="1dp" android:color="@color/bbutton_info_disabled_edge" />
+
+            <corners android:radius="10dp" />
+        </shape></item>
+    <item><shape>
+            <solid android:color="@color/bbutton_info" />
+
+            <stroke android:width="1dp" android:color="@color/bbutton_info_edge" />
+
+            <corners android:radius="10dp" />
+        </shape></item>
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/drawable/bg_title_custom_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_title_custom_dialog.xml	(revision )
+++ app/src/main/res/drawable/bg_title_custom_dialog.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item><shape>
+            <gradient android:angle="270" android:endColor="#e1e1e1" android:startColor="#e1e1e1" />
+            <corners android:topLeftRadius="15dp" android:topRightRadius="15dp" />
+    </shape></item>
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main13.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main13.xml	(revision )
+++ app/src/main/res/layout/activity_main13.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+	<com.cn.seymour.androidjack.demos.widget.ShaderView1
+	    android:layout_width="wrap_content"
+	    android:layout_height="wrap_content"/>
+    
+</LinearLayout>
+
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision )
+++ .idea/inspectionProfiles/Project_Default.xml	(revision )
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="AndroidLintDrawAllocation" enabled="false" level="WARNING" enabled_by_default="false" />
+  </profile>
+</component>
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity11.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity11.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity11.java	(revision )
@@ -0,0 +1,47 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+import android.app.Activity;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.widget.LinearLayout;
+import android.widget.LinearLayout.LayoutParams;
+import android.widget.ListView;
+
+import com.cn.seymour.androidjack.R;
+
+public class MainActivity11 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		final LinearLayout view = new LinearLayout(this);
+		view.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT,
+				LayoutParams.MATCH_PARENT));
+		view.setBackgroundColor(Color.YELLOW);
+
+		ListView listView = new ListView(this);
+
+
+
+		view.addView(listView);
+		// 生成动态数组，加入数据
+		ArrayList<HashMap<String, Object>> listItem = new ArrayList<HashMap<String, Object>>();
+		for (int i = 0; i < 10; i++) {
+			HashMap<String, Object> map = new HashMap<String, Object>();
+			map.put("ItemTitle", "Level " + i);
+			listItem.add(map);
+		}
+		Adapter11 adapter = new Adapter11(this, listItem, R.layout.list_items,
+				new String[] {"ItemTitle"},
+				new int[] {R.id.ItemTitle});
+		listView.setAdapter(adapter);
+
+		setContentView(view);
+	}
+
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/ProvinceLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/ProvinceLayout.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/ProvinceLayout.java	(revision )
@@ -0,0 +1,552 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.HashMap;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Handler;
+import android.view.Gravity;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.cn.seymour.androidjack.demos.LButtonBg;
+import com.cn.seymour.androidjack.demos.widget.WheelView.OnSelectListener;
+
+public class ProvinceLayout extends LRelativeLayoutView implements
+		OnClickListener, OnSelectListener {
+	private static int[] DAYS = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,
+			31 };
+	private final int tv_demo_title = 1001;
+	private final int ll_demo_content = 1002;
+	private final int ll_demo_line = 1003;
+	private List[] lists;
+	private Context context;
+	/**
+	 * 有时间
+	 */
+	public static final int DATE_TYPE_STATE_TIME = 0;
+	/**
+	 * 没有时间
+	 */
+	public static final int DATE_TYPE_STATE_TIME_NOT = 1;
+	private int dateType = DATE_TYPE_STATE_TIME_NOT;
+	private Handler handler;
+	private OnSelectListeners onSelectListeners;
+
+	/**
+	 *
+	 * @param mFutureAge
+	 *            更改显示未来多少年
+	 * @param mAgelength
+	 *            更改显示年限长度 及时刷新
+	 */
+	public void changeFutureAgeAndAgelength(int mFutureAge, int mAgelength) {
+		List list = lists[0];
+		list.clear();
+		int k = getDate()[0] + mFutureAge;
+		if (k - mAgelength > 0) {
+			for (int j = mAgelength; j >= 0; j--) {
+				list.add(k - j + "dd");
+			}
+		}
+		WheelView view = (WheelView) findViewById(100);
+		view.resetData((ArrayList<String>) list);
+	}
+
+	public ProvinceLayout(Context context, int state) {
+
+		this(context);
+		handler = new Handler();
+		this.context = context;
+		dateType = state;
+		initData();
+		initView(lists.length);
+	}
+
+	private void initData() {
+		if (lists == null) {
+			lists = new ArrayList[3];
+			if (dateType == DATE_TYPE_STATE_TIME) {
+				lists = new ArrayList[5];
+			}
+			for (int i = 0; i < lists.length; i++) {
+				lists[i] = new ArrayList<String>();
+				// int[] date = getDate();
+				String[] data = getData();
+
+				Map<String, String> tree = getTree();
+				switch (i) {
+					// year
+					case 0:
+
+//					for (int j = 0; j < data.length; j++) {
+//						List<String> arrlist = lists[i];
+//						arrlist.add(data[j]);
+//					}
+
+						for (int k = 0 ;k < tree.size();k++){
+							System.out.println(k);
+						}
+
+
+						break;
+					// month
+					case 1:
+						for (int j = 1; j <= 3; j++) {
+							List<String> arrlist = lists[i];
+							arrlist.add(j + "month");
+						}
+						break;
+					// day
+					case 2:
+						for (int j = 1; j <= 31; j++) {
+							List<String> arrlist = lists[i];
+							arrlist.add(j + "day");
+						}
+						break;
+					case 3:
+						for (int j = 0; j < 24; j++) {
+							List<String> arrlist = lists[i];
+							arrlist.add(j + "");
+						}
+						break;
+					case 4:
+						for (int j = 0; j < 60; j++) {
+							List<String> arrlist = lists[i];
+							arrlist.add(j + "");
+						}
+						break;
+
+				}
+			}
+		}
+	}
+
+	private static int[] getDate() {
+		int[] dates = new int[5];
+		Calendar c = Calendar.getInstance();// 可以对每个时间域单独修改
+		dates[0] = c.get(Calendar.YEAR);
+		dates[1] = (c.get(Calendar.MONTH) + 1);
+		dates[2] = c.get(Calendar.DATE);
+		dates[3] = c.get(Calendar.HOUR_OF_DAY) + 1;
+		dates[4] = c.get(Calendar.MINUTE) + 1;
+		return dates;
+	}
+
+	private static String[] getData() {
+		String datas[] = new String[] { "北京市", "天津市", "河北省", "山西省", "内蒙古自治区" };
+
+		Map<String, String> treeMap = new HashMap<String, String>();
+		treeMap.put("0", "北京市");
+		treeMap.put("0", "天津市");
+		treeMap.put("0", "河北市");
+
+		return datas;
+	}
+
+	private static Map<String, String> getTree(){
+		Map<String, String> treeMap = new LinkedHashMap<String, String>();
+		treeMap.put("0", "北京市");
+		treeMap.put("0", "天津市");
+		treeMap.put("0", "河北市");
+		treeMap.put("1", "朝阳区");
+
+		return treeMap;
+	}
+
+	public ProvinceLayout(Context context) {
+		super(context);
+	}
+
+	private void initView(int length) {
+		setBackgroundColor(Color.parseColor("#287AC4"),
+				Color.parseColor("#287AC4"), Color.parseColor("#287AC4"),
+				Color.parseColor("#287AC4"), Color.parseColor("#287AC4"),
+				dip2px(10), 0, Color.parseColor("#287AC4"));
+		setTitle();
+		setContent(length);
+		setResBtn();
+	}
+
+	private void setResBtn() {
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT,
+				LayoutParams.WRAP_CONTENT);
+		LinearLayout layoutContent = new LinearLayout(context);
+		params.addRule(RelativeLayout.BELOW, ll_demo_line);
+		layoutContent.setOrientation(LinearLayout.HORIZONTAL);
+		addView(layoutContent, params);
+		LinearLayout.LayoutParams linParams = new LinearLayout.LayoutParams(0,
+				LayoutParams.WRAP_CONTENT);
+		linParams.weight = 1;
+		LButtonBg setBtn = setBtn("取消");
+		layoutContent.addView(setBtn, linParams);
+		int w = View.MeasureSpec.makeMeasureSpec(0,
+				View.MeasureSpec.UNSPECIFIED);
+		int h = View.MeasureSpec.makeMeasureSpec(0,
+				View.MeasureSpec.UNSPECIFIED);
+		setBtn.measure(w, h);
+		int measuredHeight = setBtn.getMeasuredHeight();
+		View view = new View(context);
+		view.setBackgroundColor(Color.parseColor("#dddddd"));
+		LinearLayout.LayoutParams lineParams = new LinearLayout.LayoutParams(
+				dip2px(1), measuredHeight);
+		layoutContent.addView(view, lineParams);
+		layoutContent.addView(setBtn("确认"), linParams);
+	}
+
+	private LButtonBg setBtn(String str) {
+		float[] round = new float[8];
+		round[4] = dip2px(10);
+		round[5] = dip2px(10);
+		round[6] = dip2px(10);
+		round[7] = dip2px(10);
+		LButtonBg btn = new LButtonBg(context);
+		btn.setText(str);
+		btn.setOnClickListener(this);
+		if (str.equals("取消")) {
+			round[4] = 0;
+			round[5] = 0;
+		} else {
+			round[6] = 0;
+			round[7] = 0;
+		}
+		btn.setBackgroundColor2(Color.parseColor("#ffffff"),
+				Color.parseColor("#eeeeee"), Color.parseColor("#ffffff"),
+				Color.parseColor("#ffffff"), Color.parseColor("#ffffff"),
+				round, 1, Color.parseColor("#ffffff"));
+		btn.setTextSize(18);
+		return btn;
+	}
+
+	/**
+	 * 如果更改了默认样式 ，需要更新View();
+	 */
+	public void refresh() {
+		removeAllViews();
+		initView(lists.length);
+	}
+
+	private void setContent(int length) {
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT,
+				LayoutParams.WRAP_CONTENT);
+		LinearLayout layoutContent = new LinearLayout(context);
+		params.addRule(RelativeLayout.BELOW, tv_demo_title);
+		layoutContent.setOrientation(LinearLayout.HORIZONTAL);
+		layoutContent.setId(ll_demo_content);
+		addView(layoutContent, params);
+		View view = new View(context);
+		view.setId(ll_demo_line);
+		view.setBackgroundColor(Color.parseColor("#dddddd"));
+		LayoutParams paramsline = new LayoutParams(LayoutParams.MATCH_PARENT,
+				dip2px(1));
+		paramsline.addRule(RelativeLayout.BELOW, ll_demo_content);
+		addView(view, paramsline);
+		LinearLayout.LayoutParams linParams = new LinearLayout.LayoutParams(0,
+				LayoutParams.MATCH_PARENT);
+		linParams.weight = 6;
+		String[] Strs = new String[] { "省级行政区", "地级市，自治州", "县级行政区" };
+		for (int i = 0; i < length; i++) {
+			if (i == 0) {
+				linParams.weight = 6;
+			} else {
+				linParams.weight = 5;
+			}
+			layoutContent.addView(setContentData(Strs[i], i), linParams);
+		}
+	}
+
+	public void setOnSelectListeners(OnSelectListeners onSelectListeners) {
+		this.onSelectListeners = onSelectListeners;
+	}
+
+	private LinearLayout setContentData(String strs, int i) {
+		LinearLayout layout = new LinearLayout(context);
+		layout.setOrientation(LinearLayout.VERTICAL);
+		layout.setBackgroundColor(Color.WHITE);
+		layout.addView(setContentTitle(strs));
+		layout.addView(setWheelViewData(i));
+		return layout;
+	}
+
+	/**
+	 * 设置默认字体大小
+	 *
+	 * @param normalFont
+	 */
+	public void setNormalFont(int normalFont) {
+		this.normalFont = normalFont;
+	}
+
+	/**
+	 * 设置默认选中时字体大小
+	 *
+	 * @param selectedFont
+	 */
+	public void setSelectedFont(int selectedFont) {
+		this.selectedFont = selectedFont;
+	}
+
+	/**
+	 * 设置默认字体颜色
+	 *
+	 * @param normalColor
+	 */
+	public void setNormalColor(int normalColor) {
+		this.normalColor = normalColor;
+	}
+
+	/**
+	 * 设置选中时字体颜色
+	 *
+	 * @param selectedColor
+	 */
+	public void setSelectedColor(int selectedColor) {
+		this.selectedColor = selectedColor;
+	}
+
+	/**
+	 * 设置单元格高度 注：为了保证自定义控件错乱 同时也是设置控件的高度 控件高度=单元格*显示内容个数
+	 *
+	 * @param unitHeight
+	 */
+	public void setUnitHeight(int unitHeight) {
+		this.unitHeight = unitHeight;
+	}
+
+	/**
+	 * 设置显示内容个数 建议2*n+1 个
+	 *
+	 * @param itemNumber
+	 */
+	public void setItemNumber(int itemNumber) {
+		this.itemNumber = itemNumber;
+	}
+
+	/**
+	 * 设置线条粗细
+	 *
+	 * @param lineWidth
+	 */
+	public void setLineWidth(int lineWidth) {
+		this.lineWidth = lineWidth;
+	}
+
+	/**
+	 * 设置线条的颜色
+	 *
+	 * @param lineColor
+	 */
+
+	public void setLineColor(int lineColor) {
+		this.lineColor = lineColor;
+	}
+
+	/**
+	 * 设置两线条之间的距离
+	 *
+	 * @param lineColor
+	 */
+	public void setLineHeight(int lineHeight) {
+		this.lineHeight = lineHeight;
+	}
+
+	private int normalFont = 18;
+	private int selectedFont = 20;
+	private int normalColor = Color.parseColor("#AEAEAE");
+	private int selectedColor = Color.parseColor("#088ACE");
+	private int unitHeight = 35;
+	private int lineWidth = 1;
+	private int lineColor = Color.parseColor("#CDE6EF");
+	private int lineHeight = 4;
+	private int itemNumber = 5;
+
+	private WheelView setWheelViewData(int i) {
+		WheelView wva = new WheelView(context);
+		wva.setId(100 + i);
+		wva.setLineWidth(dip2px(lineWidth));
+		wva.setLineColor(lineColor);
+		wva.setControlHeight(dip2px(unitHeight * itemNumber));
+		wva.setNormalFont(dip2px(normalFont));
+		wva.setNormalColor(normalColor);
+		wva.setSelectedFont(dip2px(selectedFont));
+		wva.setSelectedColor(selectedColor);
+		wva.setUnitHeight(dip2px(unitHeight));
+		wva.setLineHeight(lineHeight);
+		wva.setItemNumber(itemNumber);
+		int[] date = getDate();
+		List<String> list = lists[i];
+		wva.setData((ArrayList<String>) list);
+		if (i == 0) {
+			wva.setDefault(130);
+		} else {
+			wva.setDefault(date[i] - 1);
+		}
+		wva.setOnSelectListener(this);
+		return wva;
+	}
+
+	private TextView setContentTitle(String strs) {
+		LinearLayout.LayoutParams linParams = new LinearLayout.LayoutParams(
+				LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		TextView view = new TextView(context);
+		view.setLayoutParams(linParams);
+		view.setPadding(dip2px(3), dip2px(5), dip2px(0), dip2px(5));
+		view.setText(strs);
+		view.setTextColor(Color.BLACK);
+		view.setTextSize(18);
+		view.setGravity(Gravity.CENTER_HORIZONTAL);
+		return view;
+	}
+
+	private void setTitle() {
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT,
+				LayoutParams.WRAP_CONTENT);
+		TextView textView = new TextView(context);
+		textView.setId(tv_demo_title);
+		textView.setPadding(0, dip2px(10), 0, dip2px(10));
+		textView.setGravity(Gravity.CENTER_HORIZONTAL);
+		textView.setText("日期");
+		textView.setTextSize(24);
+		textView.setTextColor(Color.parseColor("#ffffff"));
+		textView.setLayoutParams(params);
+		addView(textView);
+	}
+
+	private int dip2px(float dipValue) {
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int) (dipValue * scale + 0.5f);
+	}
+
+	@Override
+	public void onClick(View v) {
+
+		if (onSelectListeners != null) {
+			if ("确认".equals(((Button) v).getText())) {
+				if (dateType == DATE_TYPE_STATE_TIME_NOT) {
+					String[] str = new String[3];
+
+					for (int i = 0; i < str.length; i++) {
+						WheelView view = (WheelView) findViewById(100 + i);
+						str[i] = view.getSelectedText();
+					}
+					onSelectListeners.setPositiveButton(str[0] + "-" + str[1]
+							+ "-" + str[2]);
+				} else {
+					String[] str = new String[5];
+					for (int i = 0; i < str.length; i++) {
+						WheelView view = (WheelView) findViewById(100 + i);
+						str[i] = view.getSelectedText();
+					}
+					onSelectListeners.setPositiveButton(str[0] + "-" + str[1]
+							+ "-" + str[2] + "  " + str[3] + ":" + str[4]
+							+ ":00");
+				}
+
+			} else {
+				onSelectListeners.setNegativeButton();
+			}
+
+		}
+	}
+
+	private int yearDate = getDate()[0] - 20;
+	private int monthDate = getDate()[1];
+	private int dayDate = getDate()[2];
+
+	private String province = "";
+
+	@Override
+	public void endSelect(View v, int id, String text) {
+		switch (v.getId()) {
+			case 100:
+				province = text;
+//			setWheelDay();
+				setWheelCity();
+				break;
+			case 101:
+				// monthDate = Integer.parseInt(text);
+				// setWheelDay();
+				break;
+			case 102:
+				// dayDate = Integer.parseInt(text);
+				break;
+
+		}
+
+	}
+
+	private void setWheelCity() {
+//		handler.post(new resetDateRunnable(setDateWheelData(lists[2], i)));
+	}
+
+
+	private void setWheelDay() {
+		int i;
+		if (yearDate % 400 == 0 || (yearDate % 4 == 0 && yearDate % 100 != 0)
+				&& monthDate == 2) {
+			i = 29;
+		} else {
+			i = DAYS[monthDate - 1];
+		}
+		handler.post(new resetDateRunnable(setDateWheelData(lists[2], i)));
+	}
+
+	private List<String> setDateWheelData(List<String> arrlist, int i) {
+		if (arrlist.size() == i) {
+			return arrlist;
+		}
+		if (arrlist.size() > i) {
+			for (int j = arrlist.size() - 1; j >= i; j--) {
+				arrlist.remove(j);
+			}
+			return arrlist;
+		} else {
+			for (int j = arrlist.size() - 1; j <= i; j++) {
+				arrlist.add(""
+						+ (Integer.parseInt(arrlist.get(arrlist.size() - 1)) + 1));
+			}
+			return arrlist;
+		}
+	}
+
+	private class resetDateRunnable implements Runnable {
+		private List<String> list;
+
+		public resetDateRunnable(List<String> list) {
+			this.list = list;
+		}
+
+		@Override
+		public void run() {
+			System.out.println("ss");
+			WheelView view = (WheelView) findViewById(102);
+			view.resetData((ArrayList<String>) list);
+			if (dayDate > list.size() - 1) {
+				view.setDefault(list.size() - 1);
+			} else {
+				view.setDefault(dayDate - 1);
+			}
+
+		}
+	}
+
+	@Override
+	public void selecting(View v, int id, String text) {
+	}
+
+	public interface OnSelectListeners {
+		public void setPositiveButton(String date);
+
+		public void setNegativeButton();
+	}
+
+}
Index: app/src/main/res/layout/activity_main21.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main21.xml	(revision )
+++ app/src/main/res/layout/activity_main21.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+    
+    <com.example.demoss.widget.GuaGuaKa
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        />
+
+    
+</RelativeLayout>
Index: app/src/main/res/layout/activity_main6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main6.xml	(revision )
+++ app/src/main/res/layout/activity_main6.xml	(revision )
@@ -0,0 +1,125 @@
+<?xml version="1.0" encoding="utf-8"?>
+<HorizontalScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent" >
+
+    <ScrollView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" >
+
+        <LinearLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical" >
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/hello"
+                android:textSize="90sp" />
+        </LinearLayout>
+    </ScrollView>
+
+</HorizontalScrollView>
Index: app/src/main/res/layout/activity_main15.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main15.xml	(revision )
+++ app/src/main/res/layout/activity_main15.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/ll"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <com.cn.seymour.androidjack.demos.widget.saveSaveLayerRestore
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity8.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity8.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity8.java	(revision )
@@ -0,0 +1,84 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.view.Gravity;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.LinearLayout.LayoutParams;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ *转菊花
+ * 
+ * @author Administrator
+ * 
+ */
+public class MainActivity8 extends Activity implements OnClickListener {
+
+	Button btn;
+	Dialog loginDialog;
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main8);
+
+		btn = (Button) findViewById(R.id.btn);
+		btn.setOnClickListener(this);
+
+		initView();
+	}
+
+	@Override
+	public void onClick(View arg0) {
+		if (arg0.getId() == R.id.btn) {
+			this.loginDialog.show();
+		}
+	}
+
+	private void initView() {
+		// ======================登录对话框初始化========================
+		if (null == this.loginDialog) {
+			LLinearLayoutView dialogView = new LLinearLayoutView(this);
+			dialogView.setBackgroundColor(Color.parseColor("#55000000"), -10,
+					-10, -10, -10, Util.dip2px(this, 5), 0,
+					Color.parseColor("#55000000"));
+			dialogView.setGravity(Gravity.CENTER);
+			dialogView.setOrientation(LinearLayout.VERTICAL);
+
+			// 进度条
+			ProgressBar bar = new ProgressBar(this);
+			bar.setIndeterminate(true);
+			bar.setIndeterminateDrawable(this.getResources().getDrawable(
+					R.drawable.lcontainerview_anim_loading));
+			int w = Util.dip2px(this, 30);
+			dialogView.addView(bar, w, w);
+
+			TextView textView = new TextView(this);
+			textView.setText("正在登录...");
+			textView.setGravity(Gravity.CENTER);
+			textView.setTextSize(14);
+			textView.setTextColor(Color.parseColor("#FFFFFF"));
+			textView.setPadding(0, Util.dip2px(this, 10), 0, 0);
+			dialogView.addView(textView);
+
+			this.loginDialog = new Dialog(this, R.style.dialog_style);
+			this.loginDialog.setCanceledOnTouchOutside(false);
+			int widthDialog = Util.dip2px(this, 150);
+			LayoutParams dialogLP = new LayoutParams(widthDialog, widthDialog);
+			this.loginDialog.setContentView(dialogView, dialogLP);
+			dialogLP = null;
+		}
+
+	}
+
+
+}
Index: app/src/main/res/layout/activity_main1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main1_1.xml	(revision )
+++ app/src/main/res/layout/activity_main1_1.xml	(revision )
@@ -0,0 +1,19 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/hello_world"/>
+
+    <com.cn.seymour.androidjack.demos.LButtonBg
+        android:id="@+id/btn"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="点击"/>
+</RelativeLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity19.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity19.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity19.java	(revision )
@@ -0,0 +1,108 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.GestureDetector;
+import android.view.GestureDetector.OnGestureListener;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.View.OnTouchListener;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * ��������
+ * @author Administrator
+ *
+ */
+public class MainActivity19 extends Activity implements OnTouchListener,OnGestureListener{
+
+	private GestureDetector mGestureDetector;
+	
+	public MainActivity19()
+	{
+		mGestureDetector = new GestureDetector(this);
+	}
+	
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main19);
+		
+		TextView tv = (TextView)findViewById(R.id.tv);
+		
+		tv.setOnTouchListener(this);  
+		  
+        tv.setFocusable(true);  
+  
+        tv.setClickable(true);  
+  
+        tv.setLongClickable(true);  
+  
+        mGestureDetector.setIsLongpressEnabled(true); 
+	}
+
+	@Override
+	public boolean onTouch(View arg0, MotionEvent arg1) {
+		return mGestureDetector.onTouchEvent(arg1);  
+	}
+
+	@Override
+	public boolean onDown(MotionEvent arg0) {
+		Log.i("MyGesture", "onDown");  
+		  
+        Toast.makeText(this, "onDown", Toast.LENGTH_SHORT).show();  
+  
+        return true; 
+	}
+
+	@Override
+	public boolean onFling(MotionEvent arg0, MotionEvent arg1, float arg2,
+			float arg3) {
+		 Log.i("MyGesture", "onSingleTapUp");  
+		  
+	        Toast.makeText(this, "onSingleTapUp", Toast.LENGTH_SHORT).show();  
+	  
+	        return true;  
+	}
+
+	@Override
+	public void onLongPress(MotionEvent arg0) {
+		Log.i("MyGesture", "onLongPress");  
+		  
+        Toast.makeText(this, "onLongPress", Toast.LENGTH_LONG).show();  
+		
+	}
+
+	@Override
+	public boolean onScroll(MotionEvent arg0, MotionEvent arg1, float arg2,
+			float arg3) {
+		 Log.i("MyGesture", "onScroll");  
+		  
+	        Toast.makeText(this, "onScroll", Toast.LENGTH_LONG).show();  
+	  
+	        return true;  
+	}
+
+	@Override
+	public void onShowPress(MotionEvent arg0) {
+		Log.i("MyGesture", "onShowPress");  
+		  
+        Toast.makeText(this, "onShowPress", Toast.LENGTH_SHORT).show();  
+	}
+
+	@Override
+	public boolean onSingleTapUp(MotionEvent arg0) {
+		 Log.i("MyGesture", "onSingleTapUp");  
+		  
+	        Toast.makeText(this, "onSingleTapUp", Toast.LENGTH_SHORT).show();  
+	  
+	        return true;  
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/Util.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/Util.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/Util.java	(revision )
@@ -0,0 +1,1512 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.RandomAccessFile;
+import java.nio.channels.FileChannel;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.Paint.Style;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.Rect;
+import android.graphics.RectF;
+import android.os.Environment;
+import android.os.StatFs;
+import android.util.DisplayMetrics;
+import android.view.inputmethod.InputMethodManager;
+import android.graphics.PorterDuff.Mode;
+
+public class Util
+{
+	private static int FREE_SD_SPACE_NEEDED_TO_CACHE = 1;
+	private static int MB = 1024 * 1024;
+
+	/**
+	 * 
+	 * 去除空格回车符换行符等字符方�?
+	 * 
+	 * @param txt
+	 * @return
+	 */
+	public static String trimAll(String txt)
+	{
+		try 
+		{
+			if (null == txt || "".equals(txt))
+			{
+				return txt;
+			}
+			String dest = "";
+			Pattern p = Pattern.compile("\\s*|\t|\r|\n");
+			Matcher m = p.matcher(txt);
+			dest = m.replaceAll("");
+			return dest;
+		}
+		catch (Exception ex) 
+		{
+			ex.printStackTrace();
+		}
+		return null;
+	}
+	
+	
+	/**
+	 * 旋转图片
+	 * @param bitmap
+	 * @param angle : 角度�?0�?80,...)
+	 * @return
+	 */
+	public static Bitmap rotaingBitmap(Bitmap bitmap,int angle) 
+	{
+		Matrix matrix = null;
+		try
+		{
+			if(null==bitmap)return null;
+			matrix = new Matrix();
+			if(null!=matrix)
+			{
+				matrix.postRotate(angle); 
+				return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
+			}
+		}
+		catch(Exception ex){}
+		finally
+		{
+			matrix = null;
+		} 
+		return null;
+    }
+	
+		
+	/**
+     * 伸缩bitmap(lilw)
+     * @param bitmap
+     * @param sx�?-1
+     * @param sy�?-1
+     * @return
+     */
+    public static Bitmap zoomBitmap(Bitmap bitmap,float sx,float sy) 
+    {
+		Matrix matrix = new Matrix();
+		matrix.postScale(sx,sy); //长和宽放大缩小的比例
+		Bitmap resizeBmp = Bitmap.createBitmap(bitmap,0,0,bitmap.getWidth(),bitmap.getHeight(),matrix,true);
+		return resizeBmp;
+    }
+    
+	/**
+	 * 
+	 * 放大缩小图片（重载方法）
+	 * 
+	 * @param bitmap
+	 * @param w
+	 * @param h
+	 * @return
+	 */
+	public static Bitmap zoomBitmap(Bitmap bitmap, int w, int h) 
+	{
+		if(bitmap == null)
+		{
+			return null;
+		}
+		int width = bitmap.getWidth();
+		int height = bitmap.getHeight();
+		Matrix matrix = new Matrix();
+		float scaleWidht = ((float) w / width);
+		float scaleHeight = ((float) h / height);
+		matrix.postScale(scaleWidht, scaleHeight);
+		Bitmap newbmp = Bitmap.createBitmap(bitmap, 0, 0, width, height,matrix, true);
+		return newbmp;
+	}
+    
+    /**
+	 * 按新的宽高缩放图�?
+	 * 
+	 * @param bm
+	 * @param newWidth
+	 * @param newHeight
+	 * @return
+	 */
+	public static Bitmap scaleImage(Bitmap bm, int newWidth, int newHeight)
+	{
+		if (bm == null)
+		{
+			return null;
+		}
+
+		int width = bm.getWidth();
+		int height = bm.getHeight();
+		float scaleWidth = ((float) newWidth) / width;
+		float scaleHeight = ((float) newHeight) / height;
+		Matrix matrix = new Matrix();
+		matrix.postScale(scaleWidth, scaleHeight);
+		Bitmap newbm = Bitmap.createBitmap(bm, 0, 0, width, height, matrix,
+				true);
+		if (bm != null & !bm.isRecycled())
+		{
+			bm.recycle();
+			bm = null;
+		}
+		return newbm;
+	}
+	
+    
+	/**  
+     * 将彩色图转换为灰度图  
+     * @param img 位图  
+     * @return  返回转换好的位图  
+     */    
+    public static Bitmap convertGreyImg(Bitmap img) 
+    {    
+    	if(null == img)
+    	{
+    		return null;
+    	}
+        int width = img.getWidth();         //获取位图的宽    
+        int height = img.getHeight();       //获取位图的高    
+            
+        int []pixels = new int[width * height]; //通过位图的大小创建像素点数组    
+            
+        img.getPixels(pixels, 0, width, 0, 0, width, height);    
+        int alpha = 0xFF << 24;     
+        for(int i = 0; i < height; i++)  
+        {    
+            for(int j = 0; j < width; j++) 
+            {    
+                int grey = pixels[width * i + j];    
+                    
+                int red = ((grey  & 0x00FF0000 ) >> 16);    
+                int green = ((grey & 0x0000FF00) >> 8);    
+                int blue = (grey & 0x000000FF);    
+                    
+                grey = (int)((float) red * 0.3 + (float)green * 0.59 + (float)blue * 0.11);    
+                grey = alpha | (grey << 16) | (grey << 8) | grey;    
+                pixels[width * i + j] = grey;    
+            }    
+        }    
+        Bitmap result = Bitmap.createBitmap(width, height, Config.RGB_565);    
+        result.setPixels(pixels, 0, width, 0, 0, width, height);    
+        return result;    
+    }    
+    
+    /**
+     * 
+     * 获取屏幕�?
+     * 
+     * @param context
+     * @return
+     */
+    public static int getScreenWidth(Context context)
+    {
+    	if(null == context)
+    	{
+    		return -1;
+    	}
+    	DisplayMetrics dm = context.getApplicationContext().getResources()
+				.getDisplayMetrics();
+        return dm.widthPixels;
+    }
+    
+    /**
+     * 
+     * 获取屏幕的高
+     * 
+     * @param context
+     * @return
+     */
+    public static int getScreenHeight(Context context)
+    {
+    	if(null == context)
+    	{
+    		return -1;
+    	}
+    	DisplayMetrics dm = context.getApplicationContext().getResources()
+    			.getDisplayMetrics();
+    	return dm.heightPixels;
+    }
+    
+    /**
+	 * fuction: 设置固定的宽度，高度随之变化，使图片不会变形
+	 * 
+	 * @param target
+	 *            �?��转化bitmap参数
+	 * @param newWidth
+	 *            设置新的宽度
+	 * @return
+	 */
+	public static Bitmap fitBitmap(Bitmap target, int newWidth)
+	{
+
+		int width = target.getWidth();
+		int height = target.getHeight();
+		Matrix matrix = new Matrix();
+
+		float scaleWidth = ((float) newWidth) / width;
+		// float scaleHeight = ((float)newHeight) / height;
+		int newHeight = (int) (scaleWidth * height);
+		matrix.postScale(scaleWidth, scaleWidth);
+		// Bitmap result = Bitmap.createBitmap(target,0,0,width,height,
+		// matrix,true);
+		Bitmap bmp = Bitmap.createBitmap(target, 0, 0, width, height, matrix,
+				true);
+		if (target != null && !target.equals(bmp) && !target.isRecycled())
+		{
+			target.recycle();
+			target = null;
+		}
+		return bmp;
+	}
+	
+	/**
+	 * 保存Bitmap到sdcard
+	 * 
+	 * @param dir
+	 * @param bm
+	 * @param filename
+	 * @param quantity
+	 * 				压缩�?
+	 */
+	public static boolean saveBmpToSd(Bitmap bitmap,String filepath, int quantity) 
+	{
+		File f = null;
+		try
+		{
+			if(null==bitmap)return false;
+			if(null==filepath || "".equals(filepath))return false;
+			f = new File(filepath);
+			if(null!=f)
+			{
+				return saveBitmapToFile(bitmap, f, quantity);
+			}
+		}
+		catch(Exception ex)
+		{
+		}
+		finally
+		{
+			f = null;
+			bitmap = null;
+			filepath = null;
+		}
+		return false;
+		
+		
+	}
+	
+	
+	public static boolean saveBitmapToFile(Bitmap bitmap,File file, int quantity)
+	{
+		OutputStream os = null;
+		try
+		{
+			if(null==bitmap)return false;
+			if(null!=file)
+			{
+				if(file.exists())
+				{
+					file.delete();
+				}
+				file.createNewFile();
+				os = new FileOutputStream(file);
+				if(null!=os)
+				{
+					bitmap.compress(Bitmap.CompressFormat.JPEG,quantity > 0 ? quantity : 100,os);
+					os.flush();
+					os.close();
+					return true;
+				}
+			}
+		}
+		catch(Exception ex)
+		{
+			if(null!=os)
+			{
+				try 
+				{
+					os.close();
+				}
+				catch (IOException e) 
+				{	
+				}
+			}
+		}
+		finally
+		{
+			file = null;
+			bitmap = null;
+			os = null;
+		}
+		return false;
+	}
+	
+	/**
+	 * �?��sdcard可用空间
+	 * 
+	 * @return
+	 */
+	public static int getFreeSpaceOnSd() {
+		StatFs stat = new StatFs(Environment.getExternalStorageDirectory()
+				.getPath());
+
+		double sdFreeMB = ((double) stat.getAvailableBlocks() * (double) stat
+				.getBlockSize()) / MB;
+
+		return (int) sdFreeMB;
+	}
+	
+	/**
+	 * 
+	 * 删除�?��目录（包括删除该目录下的文件夹和文件�?
+	 * 
+	 * @param file
+	 * @return
+	 */
+	public static boolean delDir(File file)
+	{
+		if(null == file)
+		{
+			return false;
+		}
+		
+		if (file.isFile()) 
+		{
+			file.delete();
+			return true;
+		}
+
+		if (file.isDirectory()) 
+		{
+			File[] childFiles = file.listFiles();
+			if (childFiles == null || childFiles.length == 0)
+			{
+				file.delete();
+				return true;
+			}
+
+			for (int i = 0; i < childFiles.length; i++) 
+			{
+				delDir(childFiles[i]);
+			}
+			file.delete();
+			
+			return true;
+		}
+		return false;
+	}
+	
+	/**
+	 * 
+	 * 删除指定的一个文�?
+	 * 
+	 * @param file
+	 * @return
+	 */
+	public static boolean delFile(File file)
+	{
+		if(null == file)
+		{
+			return false;
+		}
+		
+		if (file.exists() && file.isFile())
+		{
+			file.delete();
+			return true;
+		}
+		return false;
+	}
+	public static boolean delFile(String filePath)
+	{
+		File f = null;
+		try
+		{
+			if(null==filePath || "".equals(filePath))return false;
+			f = new  File(filePath);
+			if(null!=f)
+			{
+				return delFile(f);
+			}
+		}
+		catch(Exception ex){}
+		finally
+		{
+			f = null;
+			filePath = null;
+		}
+		return false;
+	}
+
+	
+	
+	/**
+	 * 将内容写到一个指定的文件�?
+	 * 
+	 * @param path
+	 * 				路径
+	 * @param filename
+	 * 				文件�?
+	 * @param context
+	 * 				上下�?
+	 */
+	public static boolean writeFileToSD(String path,String filename,String context) 
+	{
+		if(path == null || filename == null || context == null)
+		{
+			return false;
+		}
+		String sdStatus = Environment.getExternalStorageState();
+		if (!sdStatus.equals(Environment.MEDIA_MOUNTED))
+		{
+			return false;
+		}
+		try 
+		{
+			File filePath = new File(path);
+			File fileName = new File(path + "/" + filename);
+			//判断目录是否存在
+			if (!filePath.exists()) 
+			{
+				filePath.mkdirs();
+			}
+			//判断文件是否存在
+			if (!fileName.exists()) {
+				fileName.createNewFile();
+			}
+			else
+			{
+				fileName.delete();
+				fileName.createNewFile();
+			}
+			RandomAccessFile raf = new RandomAccessFile(fileName, "rw");
+			raf.seek(fileName.length());
+			raf.write(context.getBytes());
+			raf.close();
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace();
+			return false;
+		}
+		return true;
+	}
+	
+	/**
+	 * 将内容写到一个指定的文件�?
+	 * 
+	 * @param path
+	 * 				路径
+	 * @param filename
+	 * 				文件�?
+	 * @param context
+	 * 				上下�?
+	 * 返回值：1写入成功 /0：写入失�?/-1：没有SDCard
+	 */
+	public static int writeFileToSD2(String path,String filename,String context) 
+	{
+		if(path == null || filename == null || context == null)
+		{
+			return 0;
+		}
+		
+		/*
+		 * Environment.getExternalStorageState()
+			//获得扩展存储设备状�?
+			-1 MEDIA_MOUNTED//已挂�?  
+			-2 MEDIA_CHECKING//正在扫描
+			-3 MEDIA_BAD_REMOVAL//安全卸载前强制拔�?
+			-4 MEDIA_MOUNTED_READ_ONLY//只读
+			-5 MEDIA_NOFS//sdcar是空的，或文件系统不支持
+			-6 MEDIA_REMOVED//已移�?
+			-7 MEDIA_SHARED//未挂载，并以USB模式和计算机连接
+			-8 MEDIA_UNMOUNTABLE//有sdcard，但无法挂载
+			-9 MEDIA_UNMOUNTED//有sdcard，但未挂�?
+		 */
+		
+		//判断SDCard是否可用
+		String sdStatus = Environment.getExternalStorageState();
+		if (!(sdStatus.equals(Environment.MEDIA_MOUNTED)))
+		{
+			return -1;
+		}
+		try 
+		{
+			File filePath = new File(path);
+			File fileName = new File(path + "/" + filename);
+			//判断目录是否存在
+			if (!filePath.exists()) 
+			{
+				filePath.mkdirs();
+			}
+			//判断文件是否存在
+			if (!fileName.exists()) {
+				fileName.createNewFile();
+			}
+			else
+			{
+				fileName.delete();
+				fileName.createNewFile();
+			}
+			RandomAccessFile raf = new RandomAccessFile(fileName, "rw");
+			raf.seek(fileName.length());
+			raf.write(context.getBytes());
+			raf.close();
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace();
+			return 0;
+		}
+		return 1;
+	}
+	
+	
+    /**
+    * 使用文件通道的方式复制文�?
+    * 
+    * @param s
+    *            源文�?
+    * @param t
+    *            复制到的新文�?
+    */
+    public static void copyFile(File s, File t) 
+    {
+        FileInputStream fi = null;
+        FileOutputStream fo = null;
+        FileChannel in = null;
+        FileChannel out = null;
+        try {
+            fi = new FileInputStream(s);
+            fo = new FileOutputStream(t);
+            in = fi.getChannel();
+            out = fo.getChannel();
+            in.transferTo(0, in.size(), out);
+        } catch (IOException e) {
+            //e.printStackTrace();
+        } finally {
+            try {
+                fi.close();
+                in.close();
+                fo.close();
+                out.close();
+            } catch (IOException e) {
+               // e.printStackTrace();
+            }
+        }
+    }
+	
+	/**
+	 * 
+	 * 文字水印(lilw)
+	 * @param aligntype:水印位置类型 	0：全居中�?：全居下�?、全居上
+	 * @param bitmap：图片对�?
+	 * @param gText：文字信�?
+	 * @param textSize：文字大�?
+	 * @param textColor：文字颜�?
+	 * @param textShadowColor：阴影颜�?
+	 * @param bgColor：背景颜�?
+	 * @param alpha：�?明度�?-255数�?越小越�?明）
+	 * @return
+   */
+    public static Bitmap waterMarkByString(int aligntype, Bitmap bitmap, String gText, float textSize, int textColor, int textShadowColor,int bgColor,int alpha) 
+    {
+    	Config bitmapConfig = null;
+    	Canvas canvas = null;
+    	Paint paint = null;
+    	Rect bounds = null;
+    	int x = 0;
+    	int y = 0;
+    	Paint paintbg = null;
+    	try
+    	{
+    		if(null==bitmap)return null;
+    		if(null==gText || "".equals(gText))return bitmap;
+    		
+	        bitmapConfig = bitmap.getConfig();
+	        if(null==bitmapConfig)
+	        { 
+	            bitmapConfig = Config.ARGB_8888;
+	        } 
+	        bitmap = bitmap.copy(bitmapConfig, true); 
+	   
+	        canvas = new Canvas(bitmap); 
+	        if(null!=canvas)
+	        {
+		        paint = new Paint(Paint.ANTI_ALIAS_FLAG); 
+		        if(null!=paint)
+		        {
+			        paint.setColor(textColor); 
+			        paint.setTextSize(textSize); 
+			        if(0<textShadowColor)
+			        {
+			        	paint.setShadowLayer(1f, 0f, 1f, textShadowColor); 
+			        }
+			        bounds = new Rect(); 
+			        if(null!=bounds)
+			        {
+				        paint.getTextBounds(gText, 0, gText.length(), bounds); 				        
+				       
+				      	if(1==aligntype)//全居�?
+					    {
+				      		x = (bitmap.getWidth() - bounds.width()) / 2; 
+					    	y = bitmap.getHeight() - bounds.height()-2;
+					    }
+					    else if(2==aligntype)//全居�?
+					    {
+					    	x = (bitmap.getWidth() - bounds.width()) / 2; 
+					    	y = 2;
+					    }
+					    else//居中
+					    {
+					    	x = (bitmap.getWidth() - bounds.width()) / 2; 
+					    	y = bitmap.getHeight()/2 - bounds.height()/2;
+					    }
+				      	paintbg = new Paint();
+				      	if(null!=paintbg)
+				      	{
+				      		paintbg.setStyle(Style.FILL);
+				      		paintbg.setColor(bgColor);
+				      		paintbg.setAlpha(alpha);
+				      		canvas.drawRect(new RectF(x,y,x+bounds.width(),y+bounds.height()+2), paintbg);
+				      	}
+				        canvas.drawText(gText, x , y+bounds.height(), paint); 
+				   
+				        return bitmap; 
+			        }
+		        }
+	        }
+    	}
+    	catch(Exception ex){}
+    	finally
+    	{
+    		bounds = null;
+    		paint = null;
+    		paintbg = null;
+    		bitmapConfig = null;
+    		canvas = null;
+    	}
+    	return null;
+    }
+    
+  
+    /**
+     * 图片水印(lilw)
+     * @param aligntype:水印位置类型 	0：全居中�?：全居下�?、全居上
+     * @param src：源图片
+     * @param watermark：水印图�?
+     * @param zbx：水印图片缩放度�?-1�?
+     * @param zby：水印图片缩放度�?-1�?
+     * @return
+     */
+    public static Bitmap waterMarkByBitmap(int aligntype, Bitmap src, Bitmap watermark, float zbx, float zby)
+    {
+    	int w ,h,ww,wh;
+    	Bitmap newb = null;
+    	Canvas cv = null;
+    	int left,top;
+    	try
+    	{
+		    if(null!=src && null!=watermark)
+		    {
+		    	watermark = zoomBitmap(watermark,zbx,zby);
+			    w = src.getWidth();
+			    h = src.getHeight();
+			    ww = watermark.getWidth();
+			    wh = watermark.getHeight();
+			    
+			    if(1==aligntype)//全居�?
+			    {
+			    	left = (w - ww)/2;
+			    	top = h - wh;
+			    }
+			    else if(2==aligntype)
+			    {
+			    	left = (w - ww)/2;
+			    	top = 0;
+			    }
+			    else//居中
+			    {
+			    	left = (w - ww)/2;
+			    	top = h/2 - wh/2;
+			    }
+			    newb = Bitmap.createBitmap( w, h, Config.ARGB_8888 );//创建�?��新的和SRC长度宽度�?��的位�?
+			    if(null!=newb)
+			    {
+				    cv = new Canvas( newb );
+				    if(null!=cv)
+				    {
+					    cv.drawBitmap( src, 0, 0, null );//�?0�?坐标�?��画入src
+					    //cv.drawBitmap( watermark, w - ww + 5, h - wh + 5, null );//在src的右下角画入水印
+					    cv.drawBitmap( watermark, left,top, null );//在src的中部画入水�?				    
+					    cv.save( Canvas.ALL_SAVE_FLAG );//保存
+					    cv.restore();//存储					    
+					    //return this.waterMarkByString(2, newb, "时间:2014-11-26 16:39:50  车牌/VIN:H78235  保险公司:平安保险", 13f, Color.rgb(61, 61, 61), 0, Color.parseColor("#bebdb9"), 100);
+					    return newb;
+				    }
+			    }
+	    	}
+    	}
+    	catch(Exception ex){}
+    	finally
+    	{
+    		newb = null;
+    		cv = null;
+    	}
+    	return null;
+    }
+    
+    /**
+     * 文件加密(lilw)
+     * @param src：原文件
+     * @param dest：目标文�?
+     */
+    public static boolean encryFile(String srcFilePath, String desFilePath)
+    {
+    	File src = null;
+    	try
+    	{
+    		if(null==srcFilePath || "".equals(srcFilePath))return false;
+    		if(null==desFilePath || "".equals(desFilePath))return false;
+    		src = new File(srcFilePath);
+    		if(null!=src)
+    		{
+    			if(src.exists() && src.isFile())
+    			{
+    				return encryFile(src,new File(desFilePath));    				
+    			}
+    		}
+    	}
+    	catch(Exception ex){}
+    	finally
+    	{
+    		src = null;
+    		srcFilePath = null;
+    		desFilePath = null;
+    	}
+    	return false;
+    }
+    /**
+     * 文件加密(lilw)
+     * @param src：原文件
+     * @param dest：目标文�?
+     */
+    public static boolean encryFile(File srcFile,File file)
+    {
+    	InputStream is = null;
+    	byte []buff = null;
+    	FileOutputStream fos = null;
+    	try
+    	{
+    		if(null==srcFile)return false;		
+    		if(!srcFile.exists())return false;
+    		if(!srcFile.isFile())return false;
+    		if(null==file)return false;
+    		
+    		is = new BufferedInputStream(new FileInputStream(srcFile));
+			if(null!=is)
+			{
+				buff = new byte[is.available()]; 
+				if(null!=buff)
+				{
+					is.read(buff);
+					is.close();		
+		    		for(int i=0;i<buff.length;i++)
+    				{
+						buff[i] = (byte) (buff[i]^ 0x94);
+    				}
+		    		if(file.exists())
+		    		{
+		    			file.delete();
+		    		}
+		    		file.createNewFile();
+					fos = new FileOutputStream(file);
+    				if(null!=fos)
+    				{
+    					fos.write(buff);
+	    				fos.flush();
+	    	    		fos.close();
+	    	    		return true;
+    				}
+				}
+			}
+    		
+    	}
+    	catch(Exception ex){}
+    	finally
+    	{
+    		buff = null;
+    		is = null;
+    		fos = null;
+    		file = null;
+    		srcFile = null;
+    	}
+    	return false;
+	}
+    
+    /**
+     * 加密Bitmap到文件（适用于几百K以内的小文件�?lilw)
+     * @param bitmap
+     * @param filepath
+     */
+    public static boolean encryBitmapToFile(Bitmap bitmap,String filepath,int quantity)
+    {
+    	try
+    	{
+    		if(null==bitmap)return false;
+    		if(null==filepath || "".equals(filepath))return false;
+    		return encryBitmapToFile(bitmap, new File(filepath),quantity);
+    	}
+    	catch(Exception ex)
+    	{
+    	}
+    	finally
+    	{
+    		bitmap = null;
+    	}
+    	return false;
+    }
+    /**
+     * 加密文件（�?用于几百K以内的小文件�?lilw)
+     * @param bitmap
+     * @param file
+     */
+    public static boolean encryBitmapToFile(Bitmap bitmap,File file,int quantity)
+    {
+    	ByteArrayOutputStream baos = null;
+    	FileOutputStream fos = null;
+    	byte [] bt = null;
+    	try
+    	{
+    		if(null==bitmap)return false;
+    		if(null==file)return false;
+    		
+    		if(file.exists())
+    		{
+    			file.delete();    			
+    		}
+    		file.createNewFile();
+    		baos = new ByteArrayOutputStream();
+    		if(null!=baos)
+    		{
+    			bitmap.compress(Bitmap.CompressFormat.JPEG, quantity, baos);    			
+    			bt = baos.toByteArray();
+    			if(null!=bt)
+    			{
+    				fos = new FileOutputStream(file);
+    				if(null!=fos)
+    				{
+	    				for(int i=0;i<bt.length;i++)
+	    				{
+	    					bt[i] = (byte) (bt[i]^ 0x94);
+	    				} 
+	    				fos.write(bt);
+	    				fos.flush();
+	    	    		fos.close(); 
+	    	    		return true;
+	    			}
+    			}
+    		}    		
+    	}
+    	catch(Exception ex)
+    	{
+    	}
+    	finally
+    	{
+    		baos = null;
+    		bitmap = null;
+    		file = null;
+    		fos = null;
+    		bt = null;
+    	}
+    	return false;
+    }
+    
+    /**
+     * 解密文件（�?用于几百K以内的小文件�?lilw)
+     * @param filepath
+     * @return
+     */
+    public static boolean decryFile(String srcfilepath, String desfilepath)
+    {
+    	File srcfile = null;
+    	
+    	try
+    	{
+    		if(null==srcfilepath || "".equals(srcfilepath))return false;
+    		srcfile = new File(srcfilepath);
+    		if(null!=srcfile && srcfile.exists() && srcfile.isFile())
+    		{
+    			return decryFile(srcfile,new File(desfilepath));
+    		}
+    		
+    	}
+    	catch(Exception ex){}
+    	finally
+    	{
+    		srcfilepath = null;
+    		desfilepath = null;
+    		srcfile = null;
+    	}
+    	return false;
+    }
+    /**
+     * 解密文件（�?用于几百K以内的小文件�?
+     * @param file
+     */
+    public static boolean decryFile(File srcfile, File desfile)
+    {
+    	InputStream is = null;
+    	byte[] buff = null;
+    	FileOutputStream fos = null;
+    	try
+    	{
+    		if(null==srcfile)return false;
+    		if(null==desfile)return false;
+    		if(srcfile.exists() && srcfile.isFile())
+    		{
+    			is = new BufferedInputStream(new FileInputStream(srcfile));
+    			if(null!=is)
+    			{
+    				buff = new byte[is.available()]; 
+    				if(null!=buff)
+    				{
+    					is.read(buff);
+    					is.close();
+    					for(int i=0;i<buff.length;i++)
+	    				{
+    						buff[i] = (byte) (buff[i]^ 0x94);
+	    				}
+    					if(desfile.exists())
+    					{
+    						desfile.delete();
+    					}
+    					desfile.createNewFile();
+    					fos = new FileOutputStream(desfile);
+	    				if(null!=fos)
+	    				{
+	    					fos.write(buff);
+		    				fos.flush();
+		    	    		fos.close();
+		    	    		return true;
+	    				}
+    				}
+    			}
+    		}
+    	}
+    	catch(Exception ex){}
+    	finally
+    	{
+    		fos = null;
+    		srcfile = null;
+    		is = null;
+    		desfile = null;
+    	}
+    	return false;
+    }
+    
+    
+    
+    /**
+     * 
+     * 读取文件为字节数�?
+     */
+    public static byte[] getStringByPath(String path)
+    {
+    	if (null == path || "".equals(path))
+    	{
+			return null;
+		}
+		File file = new File(path);
+		if (!file.exists()) 
+		{
+			return null;
+		}
+
+		InputStream fis = null;
+		ByteArrayOutputStream baos = null;
+		InputStream is = null;
+		try
+		{
+			baos = new ByteArrayOutputStream();
+			fis = new FileInputStream(file);
+			is = new BufferedInputStream(fis);
+			// 长度
+			int count = 0;
+			// �?��性读取的字节
+			byte[] buf = new byte[1024];
+			// 循环读取，以-1为结束标�?
+			while ((count = is.read(buf)) != -1)
+			{
+				if (count > 0) 
+				{
+					baos.write(buf, 0, count);
+				}
+			}
+		} 
+		catch (Exception e) 
+		{
+			e.printStackTrace();
+		} 
+		finally 
+		{
+			try 
+			{
+				if (null != fis) 
+				{
+					fis.close();
+				}
+				if (null != is)
+				{
+					is.close();
+				}
+				if (null != baos) 
+				{
+					baos.close();
+				}
+			} 
+			catch (Exception e2) 
+			{
+			}
+		}
+		return baos.toByteArray();
+    }
+    
+    /**
+	 * PX转成dip
+	 * 
+	 * @param context
+	 * @param dipValue
+	 * @return
+	 */
+	public int px2dip(Context context, float pxValue) 
+	{
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int) (pxValue / scale + 0.5f);
+	}
+	/**
+	 * dip转化成px
+	 * 
+	 * @param context
+	 * @param dipValue
+	 * @return
+	 */
+	public static int dip2px(Context context, float dipValue)
+	{
+		float scale = context.getResources().getDisplayMetrics().density;
+		return (int) (dipValue * scale + 0.5f);
+	}
+	
+	/**
+	 * �?��是否有对应的权限
+	 * @param permName
+	 * 				权限的名�?
+	 * @param pkgName
+	 * 				程序的包�?
+	 * @param context
+	 * 				上下�?
+	 * @return
+	 */
+	public static boolean checkpermission(String permName,String pkgName,Context context)
+	{
+	    if(null == permName || "".equals(permName) || 
+	    		pkgName == null || "".equals(pkgName) || 
+	    		null == context)
+	    {
+	    	return false;
+	    }
+	    
+	    PackageManager pm = context.getPackageManager();
+	    return (PackageManager.PERMISSION_GRANTED == pm.checkPermission(permName, pkgName));
+	}
+	
+	//------------------------------对手机内存的读取删除操作方法----------------------------------
+	/**
+	 * 写入到手机内存中
+	 * @param fileName
+	 * 			文件�?
+	 * @param content
+	 * 			写入的内�?
+	 * @param context
+	 * 			上下文对�?
+	 * @return
+	 * 			返回是否写入成功
+	 */
+	public static boolean write(String fileName,String content,Context context) 
+	{  
+		if(null == fileName || "".equals(fileName) || null == content || "".equals(content) || null == context)
+		{
+			return false;
+		}
+		boolean b = true;
+		FileOutputStream fileOut = null;
+        try
+        {  
+            // 以追加的方式打开文件输出�? 
+            fileOut = context.openFileOutput(fileName,Activity.MODE_APPEND);  
+            // 写入数据  
+            fileOut.write(content.getBytes());  
+        }
+        catch (Exception e)
+        {  
+            e.printStackTrace();  
+        }  
+        finally
+        {
+        	 // 关闭文件输出�? 
+            try 
+            {
+            	if(null != fileOut)
+            	{
+            		fileOut.close();
+            	}
+            	fileOut = null;
+			} 
+            catch (Exception e) 
+			{
+				e.printStackTrace();
+				b = false;
+			}  
+        }
+        return b;
+    }  
+  
+	/**
+	 * 读取手机内存的文�?
+	 * @param fileName
+	 * 			文件�?
+	 * @param context
+	 * 			上下文对�?
+	 * @return
+	 * 			返回读取的内�?
+	 */
+    public static String read(String fileName,Context context) 
+    {  
+    	String txt = null;
+    	FileInputStream fileInput = null;
+    	BufferedReader br = null;
+    	if(null == fileName || "".equals(fileName) || null == context)
+    	{
+    		return txt;
+    	}
+        try 
+        {  
+            // 打开文件输入�? 
+            fileInput = context.openFileInput(fileName);  
+            br = new BufferedReader(new InputStreamReader(fileInput));  
+            String str = null;  
+            StringBuilder stb = new StringBuilder();  
+            while ((str = br.readLine()) !=null ) 
+            {  
+                stb.append(str);  
+            }  
+            str = null;
+            txt = stb.toString();
+            stb = null;
+            
+        } 
+        catch (Exception e) 
+        {  
+            e.printStackTrace(); 
+            txt = null;
+        } 
+        finally
+        {
+        	try 
+        	{
+				if(null != fileInput)
+				{
+					fileInput.close();
+				}
+				fileInput = null;
+				
+				if(null != br)
+				{
+					br.close();
+				}
+				br = null;
+			}
+        	catch (Exception e2)
+			{
+			}
+        }
+  
+        return txt;
+    }  
+      
+    //删除指定的文�? 
+    public static boolean deleteFiles(String fileName,Context context) 
+    {  
+    	boolean b = false;
+    	if(null == fileName || "".equals(fileName) || null == context)
+    	{
+    		return b;
+    	}
+        try 
+        {  
+            /*// 获取data文件中的�?��文件列表  
+            List<String> name = Arrays.asList(context.fileList());  
+            if (name.contains(fileName)) {  
+            	context.deleteFile(fileName);  
+            }*/
+        	b = context.deleteFile(fileName);
+        } 
+        catch (Exception e) 
+        {  
+            e.printStackTrace();
+            b = false;
+        }  
+        
+        return b;
+    }  
+    
+  //----------------------------------------------------------------
+   
+    /**
+     * 获得圆角图片的方�? 
+     * @param bitmap
+     * @param roundPx
+     * @return
+     */
+    public static Bitmap getRoundedCornerBitmap(Bitmap bitmap,float roundPx){  
+          
+        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap  
+                .getHeight(), Config.ARGB_8888);  
+        Canvas canvas = new Canvas(output);  
+   
+        final int color = 0xff424242;  
+        final Paint paint = new Paint();  
+        final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());  
+        final RectF rectF = new RectF(rect);  
+   
+        paint.setAntiAlias(true);  
+        canvas.drawARGB(0, 0, 0, 0);  
+        paint.setColor(color);  
+        canvas.drawRoundRect(rectF, roundPx, roundPx, paint);  
+   
+        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));  
+        canvas.drawBitmap(bitmap, rect, rect, paint);  
+   
+        return output;  
+    }  
+    
+    /**
+     * 邮箱验证
+     * @param address
+     * @return
+     */
+    public static boolean isEMail(String address)
+	{
+		String check = null;
+		Pattern regex = null;
+		Matcher matcher = null;
+		try
+		{
+			if(null==address || "".equals(address))return false;
+			check = "^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$";
+			regex = Pattern.compile(check);
+			if(null!=regex)
+			{
+				matcher = regex.matcher(address);
+				if(null!=matcher)
+				{
+					return matcher.matches();
+				}
+			}
+		}
+		catch(Exception ex){}
+		finally
+		{
+			regex = null;
+			check = null;
+			matcher = null;
+		}
+		return false;
+	}
+    
+    
+    public String getMIME(String end)
+    {
+        for(int i=0;i<MIME_MapTable.length;i++)
+        {
+
+            if(end.equals(MIME_MapTable[i][0]))
+
+               return MIME_MapTable[i][1];
+
+        }
+        return "";
+    }
+    private final String[][] MIME_MapTable = 
+    {
+
+	    //{后缀名，    MIME类型}
+
+	    {".3gp",    "video/3gpp"},
+
+	    {".apk",    "application/vnd.android.package-archive"},
+
+	    {".asf",    "video/x-ms-asf"},
+
+	    {".avi",    "video/x-msvideo"},
+
+	    {".bin",    "application/octet-stream"},
+
+	    {".bmp",      "image/bmp"},
+
+	    {".c",        "text/plain"},
+
+	    {".class",    "application/octet-stream"},
+
+	    {".conf",    "text/plain"},
+
+	    {".cpp",    "text/plain"},
+
+	    {".doc",    "application/msword"},
+
+	    {".exe",    "application/octet-stream"},
+
+	    {".gif",    "image/gif"},
+
+	    {".gtar",    "application/x-gtar"},
+
+	    {".gz",        "application/x-gzip"},
+
+	    {".h",        "text/plain"},
+
+	    {".htm",    "text/html"},
+
+	    {".html",    "text/html"},
+
+	    {".jar",    "application/java-archive"},
+
+	    {".java",    "text/plain"},
+
+	    {".jpeg",    "image/jpeg"},
+
+	    {".jpg",    "image/jpeg"},
+
+	    {".js",        "application/x-javascript"},
+
+	    {".log",    "text/plain"},
+
+	    {".m3u",    "audio/x-mpegurl"},
+
+	    {".m4a",    "audio/mp4a-latm"},
+
+	    {".m4b",    "audio/mp4a-latm"},
+
+	    {".m4p",    "audio/mp4a-latm"},
+
+	    {".m4u",    "video/vnd.mpegurl"},
+
+	    {".m4v",    "video/x-m4v"},    
+
+	    {".mov",    "video/quicktime"},
+
+	    {".mp2",    "audio/x-mpeg"},
+
+	    {".mp3",    "audio/x-mpeg"},
+
+	    {".mp4",    "video/mp4"},
+
+	    {".mpc",    "application/vnd.mpohun.certificate"},        
+
+	    {".mpe",    "video/mpeg"},    
+
+	    {".mpeg",    "video/mpeg"},    
+
+	    {".mpg",    "video/mpeg"},    
+
+	    {".mpg4",    "video/mp4"},    
+
+	    {".mpga",    "audio/mpeg"},
+
+	    {".msg",    "application/vnd.ms-outlook"},
+
+	    {".ogg",    "audio/ogg"},
+
+	    {".pdf",    "application/pdf"},
+
+	    {".png",    "image/png"},
+
+	    {".pps",    "application/vnd.ms-powerpoint"},
+
+	    {".ppt",    "application/vnd.ms-powerpoint"},
+
+	    {".prop",    "text/plain"},
+
+	    {".rar",    "application/x-rar-compressed"},
+
+	    {".rc",        "text/plain"},
+
+	    {".rmvb",    "audio/x-pn-realaudio"},
+
+	    {".rtf",    "application/rtf"},
+
+	    {".sh",        "text/plain"},
+
+	    {".tar",    "application/x-tar"},    
+
+	    {".tgz",    "application/x-compressed"}, 
+
+	    {".txt",    "text/plain"},
+
+	    {".wav",    "audio/x-wav"},
+
+	    {".wma",    "audio/x-ms-wma"},
+
+	    {".wmv",    "audio/x-ms-wmv"},
+
+	    {".wps",    "application/vnd.ms-works"},
+
+	    //{".xml",    "text/xml"},
+
+	    {".xml",    "text/plain"},
+
+	    {".z",        "application/x-compress"},
+
+	    {".zip",    "application/zip"},
+
+	    {"",        "*/*"}    
+
+	};
+    
+    /**
+     * 隐藏键盘
+     */
+    public static void hideSoftInput(Context context)
+    {
+    	InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);  
+        if(inputMethodManager.isActive())
+        {  
+            inputMethodManager.hideSoftInputFromWindow(((Activity) context).getCurrentFocus().getWindowToken(), 0);  
+        }  
+    }
+    
+    /**
+     * 显示键盘
+     */
+    public static void showSoftInput(Context context)
+    {
+    	//获取输入法的状�?
+    	InputMethodManager imm = (InputMethodManager)context.getSystemService(Context.INPUT_METHOD_SERVICE);  
+    	imm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);	
+    }
+}
Index: app/src/main/res/layout/textbutton.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/textbutton.xml	(revision )
+++ app/src/main/res/layout/textbutton.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center_vertical">
+    
+    
+   <TextView
+       android:id="@+id/text1" 
+       android:layout_width="wrap_content"
+       android:layout_height="wrap_content"
+       android:text="button"
+       />
+    
+   <ImageButton 
+       android:id="@+id/btn1"
+       android:layout_width="wrap_content"
+       android:layout_height="wrap_content"
+       android:src="@drawable/ic_launcher"/>
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/ImageBtnWithText.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/ImageBtnWithText.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/ImageBtnWithText.java	(revision )
@@ -0,0 +1,41 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.ImageButton;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.cn.seymour.androidjack.R;
+
+public class ImageBtnWithText extends LinearLayout {
+
+	public TextView textView;
+	public ImageButton btn;
+	public ImageBtnWithText(Context context) {
+		this(context,null);
+	}
+
+	public ImageBtnWithText(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		View view = LayoutInflater.from(context).inflate(R.layout.textbutton, this, true);
+		textView = (TextView)findViewById(R.id.text1);
+		btn = (ImageButton)view.findViewById(R.id.btn1);
+		
+		TypedArray tArray = this.getContext().obtainStyledAttributes(attrs, R.styleable.ImageBtnWithText);
+		int i = tArray.getInt(R.styleable.ImageBtnWithText_age,100);
+		System.out.println("========================== " + i);
+		
+		CharSequence c = tArray.getText(R.styleable.ImageBtnWithText_android_text);
+		if(c!=null){textView.setText(c);}else{System.out.println("kong");};
+		tArray.recycle();
+	}
+
+	
+	public void setTextViewValue(String str){
+		textView.setText(str);
+	}
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView.java	(revision )
@@ -0,0 +1,84 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.Shader;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.view.View;
+
+/**
+ * Shader渐变图像�
+ * @author Administrator
+ *
+ */
+public class ShaderView extends View {
+
+	static final int RECT_SIZE = 235;
+
+	Context _context = this.getContext();
+
+	int left ,top,right,bottom;
+
+	int screenX,screenY;
+
+	Paint mPaint;
+
+	public ShaderView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+
+		DisplayMetrics dm = _context.getResources().getDisplayMetrics();
+		int[] screenSize = new int[]{dm.widthPixels,dm.heightPixels};
+
+		screenX = screenSize[0]/2;//400  800
+		screenY = screenSize[1]/2;//616  1232
+
+		left = screenX-RECT_SIZE;//165
+		top = screenY-RECT_SIZE;//380
+		right = screenX+RECT_SIZE;//635
+		bottom = screenY+RECT_SIZE;//851
+
+		mPaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);
+
+		Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.qiqiu1);
+
+		//图片
+//		mPaint.setShader(new BitmapShader(bitmap, Shader.TileMode.REPEAT, Shader.TileMode.CLAMP));
+
+		//线性渐变
+//		mPaint.setShader(new LinearGradient(left, top, right-RECT_SIZE, bottom-RECT_SIZE, 0xFFFF0000, Color.YELLOW, Shader.TileMode.REPEAT));
+//		mPaint.setShader(new LinearGradient(left, top+RECT_SIZE, right, bottom-RECT_SIZE, 0xFFFF0000, Color.YELLOW, Shader.TileMode.REPEAT));
+
+		//多种颜色线性渐变
+//		mPaint.setShader(new LinearGradient(left, top+RECT_SIZE, right, bottom-RECT_SIZE, new int[]{0xFFFF0000 ,0xFF00FF00,0xFF0000FF}, new float[]{0f,0.5f,0.7f}, Shader.TileMode.REPEAT));
+
+//		mPaint.setShader(new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP));
+
+		Matrix matrix = new Matrix();
+
+		matrix.setTranslate(left+30, top+50);
+		matrix.preRotate(5);
+
+		BitmapShader bitmapShader = new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);
+
+		bitmapShader.setLocalMatrix(matrix);
+
+		mPaint.setShader(bitmapShader);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		super.onDraw(canvas);
+
+//		canvas.drawRect(left, top, right, bottom, mPaint);
+		canvas.drawRect(left, top, right, bottom, mPaint);
+
+	}
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity21.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity21.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity21.java	(revision )
@@ -0,0 +1,22 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * 刮刮卡
+ * @author Administrator
+ *
+ */
+public class MainActivity21 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main21);
+	}
+
+}
Index: app/src/main/res/layout/activity_main19.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main19.xml	(revision )
+++ app/src/main/res/layout/activity_main19.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    
+    <TextView 
+        android:id="@+id/tv"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="qweasdzxc"/>
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView1.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView1.java	(revision )
@@ -0,0 +1,71 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.LinearGradient;
+import android.graphics.Paint;
+import android.graphics.Shader;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+
+/**
+ * shader������׼��
+ * @author Administrator
+ *
+ */
+public class ShaderView1 extends View {
+
+	Paint mFillPaint,mStokePaint;
+	
+	BitmapShader mBitmapShader;
+	
+	float posX,posY;
+	
+	public ShaderView1(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		initPaint();
+	}
+
+	private void initPaint() {
+		
+		mStokePaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);
+		mStokePaint.setColor(0xFF000000);
+		mStokePaint.setStyle(Paint.Style.STROKE);
+		mStokePaint.setStrokeWidth(4);
+		
+		mFillPaint = new Paint();
+		
+		Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.qiqiu1);
+		mBitmapShader = new BitmapShader(bitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR);
+//		mFillPaint.setShader(mBitmapShader);
+		mFillPaint.setShader(new LinearGradient(0, 0, 300, 330, new int[] { Color.RED, Color.YELLOW, Color.GREEN, Color.CYAN, Color.BLUE }, new float[] { 0, 0.1F, 0.5F, 0.7F, 0.8F }, Shader.TileMode.MIRROR));
+	}
+
+	@Override
+	public boolean onTouchEvent(MotionEvent event) {
+		if(event.getAction() == MotionEvent.ACTION_MOVE){
+			posX = event.getX();
+			posY = event.getY();
+			
+			invalidate();
+		}
+		
+		return true;
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		canvas.drawColor(Color.DKGRAY);
+		
+		canvas.drawCircle(posX, posY, 100, mFillPaint);
+		canvas.drawCircle(posX, posY, 100, mStokePaint);
+	}
+
+}
Index: app/src/main/res/drawable/bbuton_danger_rounded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bbuton_danger_rounded.xml	(revision )
+++ app/src/main/res/drawable/bbuton_danger_rounded.xml	(revision )
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_pressed="true"><shape>
+            <solid android:color="@color/bbutton_danger_pressed" />
+            <stroke android:width="1dp" android:color="@color/bbutton_danger_edge" />
+            <corners android:radius="10dp"/>
+        </shape></item>
+        
+    
+    <item android:state_enabled="false"><shape>
+        <solid android:color="@color/bbutton_danger_disabled" />
+            <stroke android:width="1dp" android:color="@color/bbutton_danger_disabled_edge" />
+            <corners android:radius="10dp"/>
+        </shape></item>
+        
+
+    <item><shape>
+            <solid android:color="@color/bbutton_danger" />
+            <stroke android:width="1dp" android:color="@color/bbutton_danger_edge" />
+            <corners android:radius="10dp"/>
+        </shape></item>
+    
+        
+</selector>
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/RoundImageView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/RoundImageView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/RoundImageView.java	(revision )
@@ -0,0 +1,198 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.Shader.TileMode;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.widget.ImageView;
+
+public class RoundImageView extends ImageView {
+
+	/**
+	 * 图片类型圆形或圆角 <br>
+	 * <u><b><font color="red">seymour</font></b></u>
+	 */
+	private int type;
+	public static final int TYPE_CIRCLE = 0;
+	public static final int TYPE_ROUND = 1;
+
+	/**
+	 * 默认圆角大小
+	 */
+	private static final int BODER_RADIUS_DEFAULT = 10;
+
+	/**
+	 * 圆角大小
+	 */
+	private int mBoderRadius;
+
+	/**
+	 * 绘图Paint
+	 */
+	private Paint mBitmapPaint;
+
+	/**
+	 * 圆角半径
+	 */
+	private int mRadius;
+
+	/**
+	 * 3*3矩阵，用于缩放大小
+	 */
+	private Matrix mMatrix;
+
+	/**
+	 * 渲染图像 用图像为绘制图形着色
+	 */
+	private BitmapShader mBitmapShader;
+
+	/**
+	 * view的宽度
+	 */
+	private int mWidth;
+	private RectF mRoundRect;
+
+	public RoundImageView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		mMatrix = new Matrix();
+		mBitmapPaint = new Paint();
+		mBitmapPaint.setAntiAlias(true);
+
+		TypedArray a = context.obtainStyledAttributes(attrs,
+				R.styleable.RoundImageView);
+		mBoderRadius = a.getDimensionPixelSize(
+				R.styleable.RoundImageView_boderRadius, (int) TypedValue
+						.applyDimension(TypedValue.COMPLEX_UNIT_DIP, BODER_RADIUS_DEFAULT,
+								getResources().getDisplayMetrics()));
+
+		type = a.getInt(R.styleable.RoundImageView_type, TYPE_CIRCLE);
+
+		a.recycle();
+	}
+
+	public RoundImageView(Context context) {
+		this(context,null);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		if(getDrawable() == null){
+			return ;
+		}
+		setUpShader();
+
+		if(type == TYPE_ROUND){
+			//mRoundRect = new RectF(0, 0, 133, 133);
+			canvas.drawRoundRect(mRoundRect, mBoderRadius, mBoderRadius, mBitmapPaint);
+		}else{
+			canvas.drawCircle(mRadius,mRadius, mRadius, mBitmapPaint);
+		}
+	}
+
+	@Override
+	protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+		super.onSizeChanged(w, h, oldw, oldh);
+		if(type == TYPE_ROUND)
+			mRoundRect = new RectF(0, 0, w, h);
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		// TODO Auto-generated method stub
+		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+		if(type == TYPE_CIRCLE){
+			mWidth = Math.min(getMeasuredWidth(),getMeasuredHeight());
+			mRadius = mWidth/2;
+			setMeasuredDimension(mWidth,mWidth);
+		}
+	}
+
+	private void setUpShader(){
+		Drawable drawable = getDrawable();
+		if(drawable == null){
+			return;
+		}
+
+		Bitmap bitmap = drawableToBitamp(drawable);
+
+		mBitmapShader = new BitmapShader(bitmap, TileMode.MIRROR, TileMode.MIRROR);
+
+		float scale =1.0f;
+
+		if(type == TYPE_CIRCLE){
+			int bSize = Math.min(bitmap.getWidth(), bitmap.getHeight());
+			scale = mWidth * 1.0f / bSize;
+		}else if (type == TYPE_ROUND){
+
+			if (!(bitmap.getWidth() == getWidth() && bitmap.getHeight() == getHeight()))
+			{
+				// 如果图片的宽或者高与view的宽高不匹配，计算出需要缩放的比例；缩放后的图片的宽高，一定要大于我们view的宽高；所以我们这里取大值；
+				scale = Math.max(getWidth() * 1.0f / bitmap.getWidth(),
+						getHeight() * 1.0f / bitmap.getHeight());
+			}
+
+		}
+		// shader的变换矩阵，用于放大或者缩小
+		mMatrix.setScale(scale, scale);
+		mBitmapShader.setLocalMatrix(mMatrix);
+		mBitmapPaint.setShader(mBitmapShader);
+	}
+
+	private Bitmap drawableToBitamp(Drawable drawable) {
+		if (drawable instanceof Drawable){
+			BitmapDrawable bd = (BitmapDrawable)drawable;
+			return bd.getBitmap();
+		}
+		int w = drawable.getIntrinsicWidth();
+		int h = drawable.getIntrinsicHeight();
+		Bitmap bitmap = Bitmap.createBitmap(w, h, Config.ARGB_8888);
+		Canvas canvas = new Canvas(bitmap);
+		drawable.setBounds(0, 0, w, h);
+		drawable.draw(canvas);
+
+		return bitmap;
+	}
+
+	public void setBorderRadius(int borderRadius)
+	{
+		int pxVal = dp2px(borderRadius);
+		if (this.mBoderRadius != pxVal)
+		{
+			this.mBoderRadius = pxVal;
+			invalidate();
+		}
+	}
+
+	public void setType(int type)
+	{
+		if (this.type != type)
+		{
+			this.type = type;
+			if (this.type != TYPE_ROUND && this.type != TYPE_CIRCLE)
+			{
+				this.type = TYPE_CIRCLE;
+			}
+			requestLayout();
+		}
+
+	}
+	public int dp2px(int dpVal)
+	{
+		return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,
+				dpVal, getResources().getDisplayMetrics());
+	}
+
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10test.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10test.java	(revision )
@@ -0,0 +1,144 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.util.Calendar;
+import java.util.TimeZone;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.drawable.BitmapDrawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * 时钟自己写的
+ * @author Administrator
+ *
+ */
+public class MainActivity10test extends Activity {
+
+	Context _context = this;
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		LinearLayout ll = new LinearLayout(_context);
+		MyClock myClock = new MyClock(_context, "GMT+8:00");
+		ll.addView(myClock);
+		// Button b = new Button(_context);
+		// ll.addView(b);
+
+		setContentView(ll);
+		
+	}
+
+	class MyClock extends View {
+
+		BitmapDrawable bmpBottom;
+		BitmapDrawable bmpHour;
+		BitmapDrawable bmpMintue;
+		BitmapDrawable bmpSecond;
+		
+		Handler handler;
+		
+		String strTimeZone;
+
+		public MyClock(Context context, String timeZone) {
+			super(context);
+
+			bmpBottom = (BitmapDrawable) getResources().getDrawable(
+					R.drawable.android_clock_dial);
+			bmpHour = (BitmapDrawable) getResources().getDrawable(
+					R.drawable.android_clock_hour);
+			bmpMintue = (BitmapDrawable) getResources().getDrawable(
+					R.drawable.android_clock_minute);
+			bmpSecond = (BitmapDrawable) getResources().getDrawable(
+					R.drawable.android_clock_minute);
+
+			strTimeZone  = timeZone;
+			
+			handler = new Handler();
+			
+			handler.post(run);
+			
+		}
+
+		Runnable run = new Runnable() {
+			
+			@Override
+			public void run() {
+				// TODO Auto-generated method stub
+				postInvalidate();
+				handler.postDelayed(run, 1000);
+			}
+		};
+		
+		@Override
+		protected void onDraw(Canvas canvas) {
+			// TODO Auto-generated method stub
+			super.onDraw(canvas);
+
+			Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(strTimeZone));
+//			cal.add(Calendar.HOUR, 5);
+			int hour = cal.get(Calendar.HOUR);
+			int minute = cal.get(Calendar.MINUTE);
+			int second = cal.get(Calendar.SECOND);
+			float hourRotate = hour * 30f + minute*0.5f-180;
+			float minuteRotate = minute*6f-180;
+			float secondRotate = second*6-180;
+			
+			System.out.println(hour + "  "  + minute + " " + second);
+			
+			bmpBottom.setBounds(0, 0, bmpBottom.getIntrinsicWidth(),
+					bmpBottom.getIntrinsicHeight());
+			bmpBottom.draw(canvas);
+
+			canvas.save();
+			bmpHour.setBounds(
+					bmpBottom.getIntrinsicWidth() / 2
+							- bmpHour.getIntrinsicWidth() / 2,
+					bmpBottom.getIntrinsicHeight() / 2,
+					bmpBottom.getIntrinsicWidth() / 2
+							+ bmpHour.getIntrinsicWidth() / 2,
+					bmpBottom.getIntrinsicHeight() / 2
+							+ bmpHour.getIntrinsicHeight());
+			canvas.rotate(hourRotate, bmpBottom.getIntrinsicWidth() / 2, bmpBottom.getIntrinsicHeight() / 2);
+			bmpHour.draw(canvas);
+			canvas.restore();
+
+			canvas.save();
+			bmpMintue.setBounds(
+					bmpBottom.getIntrinsicWidth() / 2
+							- bmpMintue.getIntrinsicWidth() / 2,
+					bmpBottom.getIntrinsicHeight() / 2,
+					bmpBottom.getIntrinsicWidth() / 2
+							+ bmpMintue.getIntrinsicWidth() / 2,
+					bmpBottom.getIntrinsicHeight() / 2
+							+ bmpMintue.getIntrinsicHeight());
+			canvas.rotate(minuteRotate, bmpBottom.getIntrinsicWidth() / 2, bmpBottom.getIntrinsicHeight() / 2);
+			bmpMintue.draw(canvas);
+			canvas.restore();
+			
+			canvas.save();
+			bmpSecond.setBounds(
+					bmpBottom.getIntrinsicWidth() / 2
+							- bmpMintue.getIntrinsicWidth() / 2,
+					bmpBottom.getIntrinsicHeight() / 2,
+					bmpBottom.getIntrinsicWidth() / 2
+							+ bmpMintue.getIntrinsicWidth() / 2,
+					bmpBottom.getIntrinsicHeight() / 2
+							+ bmpMintue.getIntrinsicHeight()+100);
+			canvas.rotate(secondRotate, bmpBottom.getIntrinsicWidth() / 2, bmpBottom.getIntrinsicHeight() / 2);
+			bmpSecond.draw(canvas);
+			canvas.restore();
+
+		}
+
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/reflect/hello.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/reflect/hello.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/reflect/hello.java	(revision )
@@ -0,0 +1,364 @@
+package com.cn.seymour.androidjack.reflect;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.lang.reflect.*;
+
+import java.lang.reflect.Method;
+import java.util.Properties;
+/**
+ * 反射
+ * <br>Created by seyMour on 2016/4/22.</br>
+ * <br>☞120465271@qq.com☜</br>
+ */
+public class hello {
+
+
+
+    /**
+     * @param args
+     */
+    public static void main(String[] args) {
+        Class<?> demo = null;
+        try {
+            demo = Class.forName("Reflect.Person");
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        }
+
+        //通过Class调用其他类中的构造函数 （也可以通过这种方式通过Class创建其他类的对象）
+		/*Person pre = null;
+		try {
+			pre = (Person)demo.newInstance();
+		} catch (InstantiationException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (IllegalAccessException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+		pre.setName("symour");
+		pre.setAge(3);
+		System.out.println(pre);*/
+
+		/*Person pre1=null;
+		Person pre2=null;
+		Person pre3=null;
+		Person pre4=null;
+
+		Constructor<?> cons[] = demo.getConstructors();
+
+		for(int i  =0 ; i < cons.length;i++)
+		{
+			System.out.println(i + "  " + cons[i]);
+		}
+
+
+		System.out.println(cons.length);
+		try {
+			pre1 = (Person)cons[3].newInstance();
+			pre2 = (Person)cons[0].newInstance("seymour");
+			pre3 = (Person)cons[1].newInstance(20);
+			pre4 = (Person)cons[2].newInstance("seymour",20);
+		} catch (IllegalArgumentException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (InstantiationException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (IllegalAccessException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (InvocationTargetException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+
+		System.out.println(pre1);
+		System.out.println(pre2);
+		System.out.println(pre3);
+		System.out.println(pre4);*/
+
+        //接下来让我们取得其他类的全部属性吧，最后我讲这些整理在一起，也就是通过class取得一个类的全部框架
+		/*Field[] field = demo.getDeclaredFields();
+		for(int i = 0 ;i < field.length;i++)
+		{
+			int mo = field[i].getModifiers();
+			String str = Modifier.toString(mo);
+
+			Class<?> type = field[i].getType();
+			System.out.println(str + " " + type.getName()+" " + field[i].getName());
+		}*/
+
+        //调用其他类的set和get方法
+		/*Class<?>[] inter = demo.getInterfaces();
+		System.out.println(inter[0].getName());
+
+		Class<?> supe = demo.getSuperclass();
+
+		System.out.println(demo.getSuperclass().getName());*/
+
+		/*try {
+			Method method = demo.getMethod("sayChina");
+			method.invoke(demo.newInstance());
+
+			method = demo.getMethod("sayHello",String.class,int.class);
+			method.invoke(demo.newInstance(), "symout",10);
+		} catch (Exception e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}*/
+
+		/*Object obj = demo.getClass();
+		setter(obj, "Name", "男", String.class);
+		getter(obj, "Name");*/
+
+        //通过反射操作属性
+		/*try {
+			Object obj =demo.newInstance();
+			Field field = demo.getDeclaredField("name");
+			field.setAccessible(true);
+			field.set(obj, "xxx");
+			System.out.println(field.get(obj));
+		} catch (Exception e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}*/
+
+        //通过反射取得并修改数组的信息：
+		/*int[] temp = {1,2,3,4,5};
+		Class<?> demo1 = temp.getClass().getComponentType();
+//		System.out.println(Array.get(temp, 1));
+		Array.set(temp, 1, 10);
+		System.out.println(Array.get(temp, 1));*/
+
+        //通过反射修改数组大小
+		/*int[] temp = {1,2,3,4,5};
+		int[] newTemp = (int[])arrayInc(temp,15);
+		print(newTemp);
+		String[] atr = {"a","b","c"};
+		String[] str1 = (String[])arrayInc(atr, 8);
+		print(str1);*/
+
+        //类加载器，动态加载类
+		/*Person p = new Person();
+		System.out.println(p.getClass().getClassLoader().getClass().getName());*/
+
+        //反射 代理
+		/*MyInvocationHandler m = new MyInvocationHandler();
+		Subject sub = (Subject)m.bind(new RealSubject());
+		String info = sub.say("Rollen", 20);
+		System.out.println(info);*/
+
+        //★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
+        //工厂模式
+		/*fruit f = Factory.getInstance("Apple");
+		f.eat();*/
+
+        //反射工厂模式
+		/*fruit f1 = Factory1.getInstance("Reflect.Orange");
+		f1.eat();*/
+
+        //propertise反射工厂模式
+        Properties p = init.getpro();
+        fruit f2 = Factory1.getInstance(p.getProperty("orange"));
+        f2.eat();
+        //★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
+    }
+
+    private static void print(Object obj) {
+        Class<?> c = obj.getClass();
+        if(!c.isArray())
+        {
+            return;
+        }
+
+        System.out.println("数组的长度为   " + Array.getLength(obj));
+        for(int i = 0 ; i < Array.getLength(obj); i++)
+        {
+            System.out.print(Array.get(obj, i));
+        }
+
+    }
+
+
+    private static Object arrayInc(Object obj, int i) {
+        Class<?> target = obj.getClass().getComponentType();
+        Object newArray = Array.newInstance(target, i);
+        System.arraycopy(obj, 0, newArray, 0, Array.getLength(obj));
+        return newArray;
+    }
+
+
+    public static void getter(Object obj, String att) {
+        try {
+            Method method = obj.getClass().getMethod("get" + att);
+            System.out.println(method.invoke(obj));
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public static void setter(Object obj,String att,Object value,Class<?> type){
+        Method method;
+        try {
+            method = obj.getClass().getMethod("set"+att, type);
+            method.invoke(method, value);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
+
+interface fruit{
+    public abstract void eat();
+}
+
+class Apple implements fruit{
+    @Override
+    public void eat() {
+        System.out.println("Apple");
+    }
+}
+
+class Orange implements fruit{
+    @Override
+    public void eat() {
+        System.out.println("Orange");
+    }
+}
+
+class Factory{
+    public static fruit getInstance(String fruitName){
+        fruit f = null;
+        if(fruitName.equals("Apple"))
+        {
+            f =new Apple();
+        }
+        if(fruitName.equals("Orange"))
+        {
+            f = new  Orange();
+        }
+        return f;
+    }
+}
+
+class Factory1{
+    public static fruit getInstance(String fruitName){
+        fruit f = null;
+        try {
+            f = (fruit)Class.forName(fruitName).newInstance();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return f;
+    }
+}
+
+class init {
+    public static Properties getpro() {
+        Properties pro = new Properties();
+        File file = new File("fruit.properties");
+        try {
+            if (file.exists()) {
+
+                pro.load(new FileInputStream(file));
+
+            } else {
+                pro.setProperty("apple", "Reflect.Apple");
+                pro.setProperty("orange", "Reflect.Orange");
+                pro.store(new FileOutputStream(file), "Frult class");
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return pro;
+    }
+}
+
+interface Subject{
+    public String say(String name,int age);
+}
+
+class RealSubject implements Subject{
+
+    @Override
+    public String say(String name, int age) {
+        return name + "  " + age;
+    }
+}
+
+class MyInvocationHandler implements InvocationHandler{
+    private Object obj = null;
+
+    public Object bind(Object obj){
+        this.obj = obj;
+        return Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(), this);
+    }
+
+    @Override
+    public Object invoke(Object proxy, Method method, Object[] args)
+            throws Throwable {
+        Object temp = method.invoke(this.obj, args);
+        return temp;
+    }
+
+}
+
+
+interface China{
+    public static final String name = "seymour";
+    public static int age =20;
+    public void sayChina();
+    public void sayHello(String name,int age);
+}
+
+class Person implements China{
+
+    public Person(){
+    }
+
+    public Person(String name) {
+        super();
+        this.name = name;
+    }
+
+    public Person(int age) {
+        super();
+        this.age = age;
+    }
+
+    public Person(String name, int age) {
+        super();
+        this.name = name;
+        this.age = age;
+    }
+
+    private String name;
+    private int age;
+    public String getName() {
+        return name;
+    }
+    public void setName(String name) {
+        this.name = name;
+    }
+    public int getAge() {
+        return age;
+    }
+    public void setAge(int age) {
+        this.age = age;
+    }
+    public String toString(){
+        return "["+this.name+" " + this.age + "]";
+    }
+
+    @Override
+    public void sayChina() {
+        System.out.println("hello ,china");
+    }
+
+    @Override
+    public void sayHello(String name, int age) {
+        System.out.println(name+"  "+age);
+    }
+}
Index: app/src/main/res/layout/activity_textbutton.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_textbutton.xml	(revision )
+++ app/src/main/res/layout/activity_textbutton.xml	(revision )
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:myspace="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <com.cn.seymour.androidjack.demos.widget.ImageBtnWithText
+        android:id="@+id/widget"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        myspace:age="young">
+        
+    </com.cn.seymour.androidjack.demos.widget.ImageBtnWithText>
+    
+    <com.cn.seymour.androidjack.demos.widget.ImageBtnWithText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="#ff6532">
+        
+    </com.cn.seymour.androidjack.demos.widget.ImageBtnWithText>
+
+    
+</LinearLayout>
Index: app/src/main/res/layout/activity_main8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main8.xml	(revision )
+++ app/src/main/res/layout/activity_main8.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+	<Button 
+	    android:id="@+id/btn"
+	    android:layout_width="wrap_content"
+	    android:layout_height="wrap_content"
+	    android:text="button"/>
+    
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/LLinearLayoutView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/LLinearLayoutView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/LLinearLayoutView.java	(revision )
@@ -0,0 +1,243 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
+import android.graphics.drawable.StateListDrawable;
+import android.util.AttributeSet;
+import android.widget.LinearLayout;
+
+public class LLinearLayoutView
+  extends LinearLayout
+{
+  private Context mContext = null;
+  private Drawable mBackground = null;
+  private StateListDrawable statelistDrawable = null;
+  
+  public LLinearLayoutView(Context context)
+  {
+    super(context);
+    this.mContext = context;
+  }
+  
+  public LLinearLayoutView(Context context, AttributeSet attrs)
+  {
+    super(context, attrs);
+    this.mContext = context;
+  }
+  
+  public void setBackgroundImg(int normalImgId, int pressedImgId, int foucesdImgId, int selectedImgId, int enabledImgId)
+  {
+    if (this.statelistDrawable == null)
+    {
+      this.statelistDrawable = new StateListDrawable();
+      setBackgroundDrawable(null);
+      this.mBackground = this.statelistDrawable;
+      
+      this.mBackground.setCallback(this);
+    }
+    Drawable normal = normalImgId > 0 ? this.mContext.getResources().getDrawable(normalImgId) : null;
+    Drawable pressed = pressedImgId > 0 ? this.mContext.getResources().getDrawable(pressedImgId) : null;
+    Drawable focus = foucesdImgId > 0 ? this.mContext.getResources().getDrawable(foucesdImgId) : null;
+    Drawable enabled = enabledImgId > 0 ? this.mContext.getResources().getDrawable(enabledImgId) : null;
+    Drawable selected = selectedImgId > 0 ? this.mContext.getResources().getDrawable(selectedImgId) : null;
+    if (focus != null) {
+      this.statelistDrawable.addState(new int[] { 16842910, 16842908 }, focus);
+    }
+    if (pressed != null) {
+      this.statelistDrawable.addState(new int[] { 16842919, 16842910 }, pressed);
+    }
+    if (focus != null) {
+      this.statelistDrawable.addState(new int[] { 16842908 }, focus);
+    }
+    if (pressed != null) {
+      this.statelistDrawable.addState(new int[] { 16842919 }, pressed);
+    }
+    if (selected != null) {
+      this.statelistDrawable.addState(new int[] { 16842919 }, selected);
+    }
+    if (enabled != null) {
+      this.statelistDrawable.addState(new int[] { -16842910 }, enabled);
+    }
+    if (normal != null) {
+      this.statelistDrawable.addState(new int[0], normal);
+    }
+  }
+  
+  public void setBackgroundColor(int normalColor, int pressedColor, int foucesdColor, int enabledColor, int selectedColor, float roundRadius, int stokeWidth, int stokeColor)
+  {
+    if (this.statelistDrawable == null)
+    {
+      this.statelistDrawable = new StateListDrawable();
+      setBackgroundDrawable(null);
+      this.mBackground = this.statelistDrawable;
+      
+      this.mBackground.setCallback(this);
+    }
+    GradientDrawable gdNormal = null;
+    if (normalColor != -10)
+    {
+      gdNormal = new GradientDrawable();
+      gdNormal.setColor(normalColor);
+      gdNormal.setCornerRadius(roundRadius);
+      gdNormal.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdPressed = null;
+    if (pressedColor != -10)
+    {
+      gdPressed = new GradientDrawable();
+      gdPressed.setColor(pressedColor);
+      gdPressed.setCornerRadius(roundRadius);
+      gdPressed.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdFocus = null;
+    if (foucesdColor != -10)
+    {
+      gdFocus = new GradientDrawable();
+      gdFocus.setColor(foucesdColor);
+      gdFocus.setCornerRadius(roundRadius);
+      gdFocus.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdEnabled = null;
+    if (enabledColor != -10)
+    {
+      gdEnabled = new GradientDrawable();
+      gdEnabled.setColor(enabledColor);
+      gdEnabled.setCornerRadius(roundRadius);
+      gdEnabled.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdSelected = null;
+    if (selectedColor != -10)
+    {
+      gdSelected = new GradientDrawable();
+      gdSelected.setColor(selectedColor);
+      gdSelected.setCornerRadius(roundRadius);
+      gdSelected.setStroke(stokeWidth, stokeColor);
+    }
+    Drawable normal = gdNormal;
+    Drawable pressed = gdPressed;
+    Drawable focus = gdFocus;
+    Drawable enabled = gdEnabled;
+    Drawable selected = gdSelected;
+    if (focus != null) {
+      this.statelistDrawable.addState(new int[] { 16842910, 16842908 }, focus);
+    }
+    if (pressed != null) {
+      this.statelistDrawable.addState(new int[] { 16842919, 16842910 }, pressed);
+    }
+    if (focus != null) {
+      this.statelistDrawable.addState(new int[] { 16842908 }, focus);
+    }
+    if (pressed != null) {
+      this.statelistDrawable.addState(new int[] { 16842919 }, pressed);
+    }
+    if (selected != null) {
+      this.statelistDrawable.addState(new int[] { 16842919 }, selected);
+    }
+    if (enabled != null) {
+      this.statelistDrawable.addState(new int[] { -16842910 }, enabled);
+    }
+    if (normal != null) {
+      this.statelistDrawable.addState(new int[0], normal);
+    }
+  }
+  
+  public void setBackgroundColor2(int normalColor, int pressedColor, int foucesdColor, int enabledColor, int selectedColor, float[] roundRadius, int stokeWidth, int stokeColor)
+  {
+    if (this.statelistDrawable == null)
+    {
+      this.statelistDrawable = new StateListDrawable();
+      setBackgroundDrawable(null);
+      this.mBackground = this.statelistDrawable;
+      
+      this.mBackground.setCallback(this);
+    }
+    GradientDrawable gdNormal = null;
+    if (normalColor != -10)
+    {
+      gdNormal = new GradientDrawable();
+      gdNormal.setColor(normalColor);
+      gdNormal.setCornerRadii(roundRadius);
+      gdNormal.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdPressed = null;
+    if (pressedColor != -10)
+    {
+      gdPressed = new GradientDrawable();
+      gdPressed.setColor(pressedColor);
+      gdPressed.setCornerRadii(roundRadius);
+      gdPressed.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdFocus = null;
+    if (foucesdColor != -10)
+    {
+      gdFocus = new GradientDrawable();
+      gdFocus.setColor(foucesdColor);
+      gdFocus.setCornerRadii(roundRadius);
+      gdFocus.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdEnabled = null;
+    if (enabledColor != -10)
+    {
+      gdEnabled = new GradientDrawable();
+      gdEnabled.setColor(enabledColor);
+      gdEnabled.setCornerRadii(roundRadius);
+      gdEnabled.setStroke(stokeWidth, stokeColor);
+    }
+    GradientDrawable gdSelected = null;
+    if (selectedColor != -10)
+    {
+      gdSelected = new GradientDrawable();
+      gdSelected.setColor(selectedColor);
+      gdSelected.setCornerRadii(roundRadius);
+      gdSelected.setStroke(stokeWidth, stokeColor);
+    }
+    Drawable normal = gdNormal;
+    Drawable pressed = gdPressed;
+    Drawable focus = gdFocus;
+    Drawable enabled = gdEnabled;
+    Drawable selected = gdSelected;
+    if (focus != null) {
+      this.statelistDrawable.addState(new int[] { 16842910, 16842908 }, focus);
+    }
+    if (pressed != null) {
+      this.statelistDrawable.addState(new int[] { 16842919, 16842910 }, pressed);
+    }
+    if (focus != null) {
+      this.statelistDrawable.addState(new int[] { 16842908 }, focus);
+    }
+    if (pressed != null) {
+      this.statelistDrawable.addState(new int[] { 16842919 }, pressed);
+    }
+    if (selected != null) {
+      this.statelistDrawable.addState(new int[] { 16842919 }, selected);
+    }
+    if (enabled != null) {
+      this.statelistDrawable.addState(new int[] { -16842910 }, enabled);
+    }
+    if (normal != null) {
+      this.statelistDrawable.addState(new int[0], normal);
+    }
+  }
+  
+  protected void drawableStateChanged()
+  {
+    Drawable d = this.mBackground;
+    if ((d != null) && (d.isStateful())) {
+      d.setState(getDrawableState());
+    }
+    super.drawableStateChanged();
+    setBackground(d);
+  }
+  
+  protected boolean verifyDrawable(Drawable who)
+  {
+    return (who == this.mBackground) || (super.verifyDrawable(who));
+  }
+  
+  public void refreshDrawableState()
+  {
+    super.refreshDrawableState();
+    drawableStateChanged();
+  }
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/Adapter11.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/Adapter11.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/Adapter11.java	(revision )
@@ -0,0 +1,19 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.util.List;
+import java.util.Map;
+
+import android.content.Context;
+import android.widget.SimpleAdapter;
+
+public class Adapter11 extends SimpleAdapter {
+
+	public Adapter11(Context context, List<? extends Map<String, ?>> data,
+			int resource, String[] from, int[] to) {
+		super(context, data, resource, from, to);
+		System.out.println("111d");
+		
+		
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/LRelativeLayoutView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/LRelativeLayoutView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/LRelativeLayoutView.java	(revision )
@@ -0,0 +1,368 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
+import android.graphics.drawable.StateListDrawable;
+import android.util.AttributeSet;
+import android.widget.RelativeLayout;
+/**
+ * 可以设置点击背景效果的线性布�?
+ */
+public class LRelativeLayoutView extends RelativeLayout
+{
+	private Context mContext = null;
+	private Drawable mBackground = null;
+    private StateListDrawable statelistDrawable = null;
+    
+	public LRelativeLayoutView(Context context) 
+	{
+		super(context);
+		mContext = context;
+	}
+	public LRelativeLayoutView(Context context, AttributeSet attrs) 
+	{
+		super(context, attrs);
+		mContext = context;
+	}
+	
+	/**
+     * 设置点击效果,图片ID为负值时表示不设置该
+     * 
+     * @param normalImgId
+     * 					正常情况下的ID
+     * @param pressedImgId
+     * 					点击时的ID
+     * @param foucesdImgId
+     * 					获取焦点时的ID
+     * @param selectedImgId
+     * 					选中时的ID
+     * @param enabledImgId
+     * 					不可用时的ID
+     */
+	@SuppressWarnings("deprecation")
+	public void setBackgroundImg(int normalImgId,
+			int pressedImgId,
+			int foucesdImgId,
+			int selectedImgId,
+			int enabledImgId)
+	{
+		if(null == statelistDrawable)
+		{
+			statelistDrawable = new StateListDrawable();
+			this.setBackgroundDrawable(null);
+			 mBackground = statelistDrawable;
+		     //必须设置回调，当改变状�?时，会回掉该View进行invalidate()刷新操作.
+		     mBackground.setCallback(this);  
+		}
+		
+		Drawable normal = normalImgId > 0 ? mContext.getResources().getDrawable(normalImgId) : null;
+	    Drawable pressed = pressedImgId > 0 ? mContext.getResources().getDrawable(pressedImgId) : null;
+	    Drawable focus = foucesdImgId > 0 ? mContext.getResources().getDrawable(foucesdImgId) : null;
+	    Drawable enabled = enabledImgId > 0 ? mContext.getResources().getDrawable(enabledImgId) : null;
+	    Drawable selected = selectedImgId > 0 ? mContext.getResources().getDrawable(selectedImgId) : null;
+
+	    //注意该处的顺序，只要有一个状态与之相配，背景就会被换�?
+	    //�?��不要把大范围放在前面了，如果sd.addState(new[]{},normal)放在第一个的话，就没有什么效果了
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+		    statelistDrawable.addState(new int[]{android.R.attr.state_pressed, android.R.attr.state_enabled}, pressed);
+	    }
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, pressed);
+	    }
+	    if(null != selected)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, selected);
+	    }
+	    if(null != enabled)
+	    {
+	    	statelistDrawable.addState(new int[]{-android.R.attr.state_enabled}, enabled);
+	    }
+	    if(null != normal)
+	    {
+	    	statelistDrawable.addState(new int[]{}, normal);
+	    }
+	}
+	
+	/**
+	 * 设置按钮背景颜色，传入10时表示不设置
+	 * 
+	 * @param normalColor
+	 * 					正常的颜
+	 * @param pressedColor
+	 * 					点击的颜
+	 * @param foucesdColor
+	 * 					获取焦点时的颜色
+	 * @param enabledColor
+	 * 					不可选时的颜
+	 * @param roundRadius
+	 * 					圆角的半
+	 * @param stokeWidth
+	 * 					边框的宽
+	 * @param stokeColor
+	 * 					边框的颜
+	 */
+	@SuppressWarnings("deprecation")
+	public void setBackgroundColor(int normalColor,
+			int pressedColor,
+			int foucesdColor,
+			int enabledColor,
+			int selectedColor,
+			float roundRadius,
+			int stokeWidth,
+			int stokeColor)
+	{
+		if(null == statelistDrawable)
+		{
+			statelistDrawable = new StateListDrawable();
+			this.setBackgroundDrawable(null);
+			 mBackground = statelistDrawable;
+		     //必须设置回调，当改变状时，会回掉该View进行invalidate()刷新操作.
+		     mBackground.setCallback(this);  
+		}
+		
+		GradientDrawable gdNormal = null;
+		if(normalColor != -10)
+		{
+			gdNormal = new GradientDrawable();
+			gdNormal.setColor(normalColor);
+			gdNormal.setCornerRadius(roundRadius);
+			gdNormal.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdPressed = null;
+		if(pressedColor != -10)
+		{
+			gdPressed = new GradientDrawable();
+		    gdPressed.setColor(pressedColor);
+		    gdPressed.setCornerRadius(roundRadius);
+		    gdPressed.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdFocus = null;
+		if(foucesdColor != -10)
+		{
+			gdFocus = new GradientDrawable();
+		    gdFocus.setColor(foucesdColor);
+		    gdFocus.setCornerRadius(roundRadius);
+		    gdFocus.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdEnabled = null;
+		if(enabledColor != -10)
+		{
+			gdEnabled = new GradientDrawable();
+		    gdEnabled.setColor(enabledColor);
+		    gdEnabled.setCornerRadius(roundRadius);
+		    gdEnabled.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdSelected = null;
+		if(selectedColor != -10)
+		{
+			gdSelected = new GradientDrawable();
+		    gdSelected.setColor(selectedColor);
+		    gdSelected.setCornerRadius(roundRadius);
+		    gdSelected.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		Drawable normal = gdNormal;
+	    Drawable pressed = gdPressed;
+	    Drawable focus = gdFocus;
+	    Drawable enabled = gdEnabled;
+	    Drawable selected = gdSelected;
+
+	    //注意该处的顺序，只要有一个状态与之相配，背景就会被换
+	    //不要把大范围放在前面了，如果sd.addState(new[]{},normal)放在第一个的话，就没有什么效果了
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+		    statelistDrawable.addState(new int[]{android.R.attr.state_pressed, android.R.attr.state_enabled}, pressed);
+	    }
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, pressed);
+	    }
+	    if(null != selected)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, selected);
+	    }
+	    if(null != enabled)
+	    {
+	    	statelistDrawable.addState(new int[]{-android.R.attr.state_enabled}, enabled);
+	    }
+	    if(null != normal)
+	    {
+	    	statelistDrawable.addState(new int[]{}, normal);
+	    }
+	}
+	
+	/**
+	 * 设置按钮背景颜色，传入时表示不设置
+	 * 
+	 * @param normalColor
+	 * 					正常的颜
+	 * @param pressedColor
+	 * 					点击的颜
+	 * @param foucesdColor
+	 * 					获取焦点时的颜色
+	 * @param enabledColor
+	 * 					不可选时的颜
+	 * @param roundRadius
+	 * 					四个角的圆角的半
+	 * @param stokeWidth
+	 * 					边框的宽
+	 * @param stokeColor
+	 * 					边框的颜
+	 */
+	@SuppressWarnings("deprecation")
+	public void setBackgroundColor2(int normalColor,
+			int pressedColor,
+			int foucesdColor,
+			int enabledColor,
+			int selectedColor,
+			float[] roundRadius,
+			int stokeWidth,
+			int stokeColor)
+	{
+		if(null == statelistDrawable)
+		{
+			statelistDrawable = new StateListDrawable();
+			this.setBackgroundDrawable(null);
+			 mBackground = statelistDrawable;
+		     //必须设置回调，当改变状时，会回掉该View进行invalidate()刷新操作.
+		     mBackground.setCallback(this);  
+		}
+		
+		GradientDrawable gdNormal = null;
+		if(normalColor != -10)
+		{
+			gdNormal = new GradientDrawable();
+			gdNormal.setColor(normalColor);
+			gdNormal.setCornerRadii(roundRadius);
+			gdNormal.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdPressed = null;
+		if(pressedColor != -10)
+		{
+			gdPressed = new GradientDrawable();
+		    gdPressed.setColor(pressedColor);
+		    gdPressed.setCornerRadii(roundRadius);
+		    gdPressed.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdFocus = null;
+		if(foucesdColor != -10)
+		{
+			gdFocus = new GradientDrawable();
+		    gdFocus.setColor(foucesdColor);
+		    gdFocus.setCornerRadii(roundRadius);
+		    gdFocus.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdEnabled = null;
+		if(enabledColor != -10)
+		{
+			gdEnabled = new GradientDrawable();
+		    gdEnabled.setColor(enabledColor);
+		    gdEnabled.setCornerRadii(roundRadius);
+		    gdEnabled.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdSelected = null;
+		if(selectedColor != -10)
+		{
+			gdSelected = new GradientDrawable();
+		    gdSelected.setColor(selectedColor);
+		    gdSelected.setCornerRadii(roundRadius);
+		    gdSelected.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		Drawable normal = gdNormal;
+	    Drawable pressed = gdPressed;
+	    Drawable focus = gdFocus;
+	    Drawable enabled = gdEnabled;
+	    Drawable selected = gdSelected;
+
+	    //注意该处的顺序，只要有一个状态与之相配，背景就会被换
+	    //不要把大范围放在前面了，如果sd.addState(new[]{},normal)放在第一个的话，就没有什么效果了
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+		    statelistDrawable.addState(new int[]{android.R.attr.state_pressed, android.R.attr.state_enabled}, pressed);
+	    }
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, pressed);
+	    }
+	    if(null != selected)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, selected);
+	    }
+	    if(null != enabled)
+	    {
+	    	statelistDrawable.addState(new int[]{-android.R.attr.state_enabled}, enabled);
+	    }
+	    if(null != normal)
+	    {
+	    	statelistDrawable.addState(new int[]{}, normal);
+	    }
+	}
+	
+    
+    @Override
+    protected void drawableStateChanged()
+    {
+        Drawable d = mBackground;
+        if (d != null && d.isStateful())
+        {
+        	//获取新状态下的Drawable
+            d.setState(getDrawableState());
+        }
+        super.drawableStateChanged();
+        this.setBackground(d);
+    }
+    /**
+     * 验证图片是否相等 ,在invalidateDrawable()会调用此方法，我们需要重写该方法
+     */
+    @Override
+    protected boolean verifyDrawable(Drawable who)
+    {
+        return who == mBackground || super.verifyDrawable(who);
+    }
+    
+    /**
+     * 背景的状态变化会调用此方
+     */
+    @Override
+    public void refreshDrawableState() 
+    {
+    	super.refreshDrawableState();
+    	drawableStateChanged();
+    }
+}
Index: app/src/main/res/layout/custom_dialog_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/custom_dialog_layout.xml	(revision )
+++ app/src/main/res/layout/custom_dialog_layout.xml	(revision )
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:minWidth="280dip"
+    android:orientation="vertical"
+    android:background="#00ffffff">
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/bg_title_custom_dialog"
+        android:paddingTop="10dip"
+        android:paddingBottom="10dip"
+        android:orientation="horizontal" >
+        <ImageView
+            android:layout_width="32dp"
+            android:layout_height="32dp"
+            android:layout_gravity="center_vertical"
+            android:layout_marginLeft="10dip"
+            android:src="@drawable/aa"
+            android:contentDescription="string/line"/>
+        <TextView
+            android:id="@+id/title"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical"
+            android:layout_marginLeft="8dip"
+            android:textSize="16sp"
+            />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/content"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:minHeight="100dip"
+        android:background="@drawable/bg_middle_custom_dialog"
+        android:orientation="vertical"
+        android:gravity="center">
+
+        <TextView
+            android:id="@+id/message"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dip"
+            android:textSize="16sp"
+            android:textColor="#FF000000"/>
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="5dip"
+        android:paddingBottom="5dip"
+        android:paddingLeft="5dip"
+        android:paddingRight="5dip"
+        android:background="@drawable/bg_bottom_custom_dialog"
+        android:orientation="horizontal" >
+
+        <Button
+            android:id="@+id/positiveButton"
+            android:layout_width="0dip"
+            android:layout_height="wrap_content"
+            android:background="@drawable/bbuton_info_rounded"
+            android:textColor="@color/white"
+            android:layout_weight="1"
+            android:singleLine="true" />
+
+        <Button
+            android:id="@+id/negativeButton"
+            android:layout_width="0dip"
+            android:layout_height="wrap_content"
+            android:background="@drawable/bbuton_danger_rounded"
+            android:layout_marginLeft="3dip"
+            android:textColor="@color/white"
+            android:layout_weight="1"
+            android:singleLine="true" />
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/DateDiolog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/DateDiolog.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/DateDiolog.java	(revision )
@@ -0,0 +1,73 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+
+import com.cn.seymour.androidjack.demos.widget.ProvinceLayout.OnSelectListeners;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.graphics.Color;
+import android.widget.LinearLayout.LayoutParams;
+
+public class DateDiolog extends Dialog
+{
+	private Context		context;
+	private ProvinceLayout	dateDiolog;
+
+	public DateDiolog(Context context, int theme)
+	{
+
+		super(context, theme);
+		this.context = context;
+		initView();
+	}
+
+	public DateDiolog(Context context)
+	{
+		super(context);
+		initView();
+	}
+
+	private void initView()
+	{
+		//创建对象时可以指定是否显示时分
+		dateDiolog = new ProvinceLayout(context, DateLayout.DATE_TYPE_STATE_TIME_NOT);
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
+		// 配置样式
+//		dateDiolog.setNormalFont(20);
+//		dateDiolog.setNormalColor(Color.parseColor("#ff00ff"));
+//		dateDiolog.setSelectedColor(Color.parseColor("#00ff00"));
+//		dateDiolog.setSelectedFont(25);
+//		dateDiolog.setUnitHeight(40);
+//		dateDiolog.setLineColor(Color.parseColor("#ff0000"));
+//		dateDiolog.setLineHeight(8);
+//		dateDiolog.setLineWidth(2);
+//		dateDiolog.setItemNumber(3);
+//		// 配置完一定要刷新
+//		dateDiolog.refresh();
+
+		dateDiolog.setItemNumber(21);
+		
+		//dateDiolog.changeFutureAgeAndAgelength(0, 100);
+//		params.leftMargin = dip2px(context, 30);
+//		params.rightMargin = dip2px(context, 30);
+		this.setContentView(dateDiolog, params);
+	}
+
+	public void setOnSelectListeners(OnSelectListeners onSelectListeners)
+	{
+		dateDiolog.setOnSelectListeners(onSelectListeners);
+	}
+
+	protected DateDiolog(Context context, boolean cancelable, OnCancelListener cancelListener)
+	{
+		super(context, cancelable, cancelListener);
+		// TODO Auto-generated constructor stub
+	}
+
+	private int dip2px(Context context, float dipValue)
+	{
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int) (dipValue * scale + 0.5f);
+	}
+
+}
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/ReflectView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/ReflectView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/ReflectView.java	(revision )
@@ -0,0 +1,101 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.ColorMatrixColorFilter;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.RadialGradient;
+import android.graphics.Shader;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.view.View;
+
+import com.cn.seymour.androidjack.R;
+
+public class ReflectView extends View {
+
+	Paint mBitmapPaint,mShaderPaint;
+
+	Bitmap mBitmap;
+
+	PorterDuffXfermode mXfermode;
+
+	// 位图起点坐标
+	int x, y;
+
+	int screenW, screenH;
+
+	public ReflectView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+
+		initRes(context);
+
+		initPaint();
+	}
+
+	private void initPaint() {
+
+		mBitmapPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+
+		// 去饱和，色彩矫正，提亮
+		mBitmapPaint.setColorFilter(new ColorMatrixColorFilter(new float[] {
+				0.8587F, 0.2940F, -0.0927F, 0, 6.79F, 0.0821F, 0.9145F,
+				0.0634F, 0, 6.79F, 0.2019F, 0.1097F, 0.7483F, 0, 6.79F, 0, 0,
+				0, 1, 0 }));
+
+		mShaderPaint = new Paint();
+
+		// 暗淡效果
+		mShaderPaint.setShader(new RadialGradient(screenW/2, mBitmap.getHeight()/2, mBitmap
+				.getHeight() * 7 / 8, Color.TRANSPARENT, Color.BLACK,
+				Shader.TileMode.CLAMP));
+	}
+
+	private void initRes(Context context) {
+		mBitmap = BitmapFactory.decodeResource(
+				this.getContext().getResources(), R.drawable.scenery);
+
+		mXfermode = new PorterDuffXfermode(PorterDuff.Mode.SCREEN);
+
+		DisplayMetrics dm = context.getResources().getDisplayMetrics();
+		screenW = dm.widthPixels;
+		screenH = dm.heightPixels;
+
+		x = screenW / 2 - mBitmap.getWidth() / 2;
+		y = screenH / 2 - mBitmap.getHeight() / 2;
+
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		canvas.drawColor(Color.BLACK);
+
+		// 新建图层
+		int sc = canvas.saveLayer(x, y, x + mBitmap.getWidth(), 0, null,
+				canvas.ALL_SAVE_FLAG);
+
+		canvas.drawColor(0xcc1c093e);
+
+		mBitmapPaint.setXfermode(mXfermode);
+
+		canvas.drawBitmap(mBitmap, x, 0, mBitmapPaint);
+
+		// 还原混合模式
+		mBitmapPaint.setXfermode(null);
+
+		// 还原画布
+		canvas.restoreToCount(sc);
+
+		canvas.drawBitmap(mBitmap, x, mBitmap.getHeight(), null);
+
+//		canvas.drawRect(0, 0, mBitmap.getWidth(), mBitmap.getHeight(),mShaderPaint);
+		canvas.drawRect(x, 0, x + mBitmap.getWidth(),mBitmap.getHeight(),mShaderPaint);
+	}
+
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/LEditTextWithClear.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/LEditTextWithClear.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/LEditTextWithClear.java	(revision )
@@ -0,0 +1,156 @@
+package com.cn.seymour.androidjack.demos;
+
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.View.OnFocusChangeListener;
+import android.view.animation.Animation;
+import android.view.animation.CycleInterpolator;
+import android.view.animation.TranslateAnimation;
+import android.widget.EditText;
+
+import com.cn.seymour.androidjack.R;
+
+public class LEditTextWithClear extends EditText implements OnFocusChangeListener,
+		TextWatcher
+{
+	/**
+	 * 鍒犻櫎鎸夐挳鐨勫紩鐢�鍥剧墖瀵硅�?
+	 */
+	private Drawable mClearDrawable;
+
+	/** 鏋勯�鏂规硶 */
+	public LEditTextWithClear(Context context)
+	{
+		this(context, null);
+	}
+
+	public LEditTextWithClear(Context context, AttributeSet attrs)
+	{
+		// 杩欓噷鏋勯�鏂规硶涔熷緢閲嶈锛屼笉鍔犺繖涓緢澶氬睘鎬т笉鑳藉啀XML閲岄潰�?氫箟
+		this(context, attrs, android.R.attr.editTextStyle);
+	}
+
+	public LEditTextWithClear(Context context, AttributeSet attrs, int defStyle)
+	{
+		super(context, attrs, defStyle);
+		init();
+	}
+
+	/**
+	 * 
+	 * 鍒濆鍖栨柟娉�
+	 * 
+	 */
+	private void init()
+	{
+		// 鑾峰彇EditText鐨凞rawableRight,鍋囧娌℃湁璁剧疆鎴戜滑灏变娇鐢ㄩ粯璁ょ殑鍥剧墖
+		mClearDrawable = getCompoundDrawables()[2];
+		if (mClearDrawable == null)
+		{
+			// 璁剧疆鍥剧墖
+			mClearDrawable = getResources().getDrawable(R.drawable.ledittext_with_clear_icon);
+		}
+		//璁剧疆鍥剧墖鐨勮寖鍥�?		mClearDrawable.setBounds(0, 0, mClearDrawable.getIntrinsicWidth(),mClearDrawable.getIntrinsicHeight());
+		setClearIconVisible(false);
+		setOnFocusChangeListener(this);
+		addTextChangedListener(this);
+	}
+
+	/**
+	 * 鍥犱负鎴戜滑涓嶈兘鐩存帴缁橢ditText璁剧疆鐐瑰嚮浜嬩欢锛屾墍浠ユ垜浠敤璁颁綇鎴戜滑鎸変笅鐨勪綅缃潵妯℃嫙鐐瑰嚮浜嬩欢 褰撴垜浠寜涓嬬殑浣嶇疆 鍦�EditText鐨勫搴�?
+	 * 鍥炬爣鍒版帶浠跺彸杈圭殑闂磋�?- 鍥炬爣鐨勫搴�鍜�EditText鐨勫搴�? 鍥炬爣鍒版帶浠跺彸杈圭殑闂磋窛涔嬮棿鎴戜滑灏辩畻鐐瑰嚮浜嗗浘鏍囷紝绔栫洿鏂瑰悜娌℃湁鑰冭�?
+	 */
+	@Override
+	public boolean onTouchEvent(MotionEvent event)
+	{
+		if (getCompoundDrawables()[2] != null)
+		{
+			if (event.getAction() == MotionEvent.ACTION_UP)
+			{
+				boolean touchable = event.getX() > (getWidth() - getPaddingRight() - mClearDrawable.getIntrinsicWidth()) && (event.getX() < ((getWidth() - getPaddingRight())));
+				if (touchable)
+				{
+					this.setText("");
+				}
+			}
+		}
+
+		return super.onTouchEvent(event);
+	}
+
+	/**
+	 * 褰揅learEditText鐒︾偣鍙戠敓鍙樺寲鐨勬椂鍊欙紝鍒ゆ柇閲岄潰�?楃涓查暱搴﹁缃竻闄ゅ浘鏍囩殑鏄剧ず涓庨殣钘�?	 */
+	@Override
+	public void onFocusChange(View v, boolean hasFocus)
+	{
+		if (hasFocus)
+		{
+			setClearIconVisible(getText().length() > 0);
+		}
+		else
+		{
+			setClearIconVisible(false);
+		}
+	}
+
+	/**
+	 * 璁剧疆娓呴櫎鍥炬爣鐨勬樉�?��笌闅愯棌锛岃皟鐢╯etCompoundDrawables涓篍ditText缁樺埗涓婂幓
+	 * 
+	 * @param visible
+	 */
+	protected void setClearIconVisible(boolean visible)
+	{
+		Drawable right = visible ? mClearDrawable : null;
+		setCompoundDrawables(getCompoundDrawables()[0],getCompoundDrawables()[1], right, getCompoundDrawables()[3]);
+	}
+
+	/**
+	 * 褰撹緭鍏ユ閲岄潰鍐呭鍙戠敓鍙樺寲鐨勬椂鍊欏洖璋冪殑鏂规硶
+	 */
+	@Override
+	public void onTextChanged(CharSequence s, int start, int count, int after)
+	{
+		setClearIconVisible(s.length() > 0);
+	}
+
+	@Override
+	public void beforeTextChanged(CharSequence s, int start, int count,int after)
+	{
+		
+	}
+
+	@Override
+	public void afterTextChanged(Editable s)
+	{
+
+	}
+
+	/**
+	 * 璁剧疆鏅冨姩鍔ㄧ�?
+	 */
+	public void setShakeAnimation()
+	{
+		this.setAnimation(shakeAnimation(5));
+	}
+
+	/**
+	 * 鏅冨姩鍔ㄧ敾
+	 * 
+	 * @param counts
+	 *            1绉掗挓鏅冨姩澶氬皯涓�?	 * @return
+	 */
+	public static Animation shakeAnimation(int counts)
+	{
+		Animation translateAnimation = new TranslateAnimation(0, 10, 0, 0);
+		translateAnimation.setInterpolator(new CycleInterpolator(counts));
+		translateAnimation.setDuration(1000);
+		return translateAnimation;
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageView.java	(revision )
@@ -0,0 +1,198 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.RectF;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.view.View;
+
+public class CustomImageView extends View {
+	private int type;
+	private static final int TYPE_CIRCLE = 0;
+	private static final int TYPE_ROUND = 1;
+
+	private Bitmap mSrc;
+	private int mRadius;
+	private int mWidth;
+	private int mHeight;
+
+	public CustomImageView(Context context, AttributeSet attrs, int defStyleAttr) {
+		super(context, attrs, defStyleAttr);
+		
+		TypedArray a = this.getContext().obtainStyledAttributes(attrs, R.styleable.CustomImageView, defStyleAttr, 0);
+		
+		int n = a.getIndexCount();  
+	    for (int i = 0; i < n; i++)  
+	    {  
+	        int attr = a.getIndex(i);  
+	        switch (attr)  
+	        {  
+	        case R.styleable.CustomImageView_src:  
+	            mSrc = BitmapFactory.decodeResource(getResources(), a.getResourceId(attr, 0));
+                System.out.println("seymour : " + mSrc == null);
+                break;
+	        case R.styleable.CustomImageView_type:  
+	            type = a.getInt(attr, 0);// Ĭ��ΪCircle  
+	            break;  
+	        case R.styleable.CustomImageView_boderRadius:
+	            mRadius= a.getDimensionPixelSize(attr, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10f,  
+	                    getResources().getDisplayMetrics()));// 默认为10DP
+	            break;  
+	        }  
+	    }  
+	    a.recycle();  
+	}
+
+	//连环调用
+	public CustomImageView(Context context, AttributeSet attrs) {
+		this(context,attrs,0);
+	}
+
+	public CustomImageView(Context context) {
+		this(context,null);
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		// super.onMeasure(widthMeasureSpec, heightMeasureSpec);  
+        /** 
+         * �设置宽度
+         */  
+        int specMode = MeasureSpec.getMode(widthMeasureSpec);  
+        int specSize = MeasureSpec.getSize(widthMeasureSpec);  
+  
+        if (specMode == MeasureSpec.EXACTLY)// match_parent , accurate  
+        {  
+            mWidth = specSize;
+        } else  
+        {  
+            // 由图片决定的宽
+            int desireByImg = getPaddingLeft() + getPaddingRight()  
+                    + mSrc.getWidth();  
+            if (specMode == MeasureSpec.AT_MOST)// wrap_content  
+            {  
+                mWidth = Math.min(desireByImg, specSize);  
+            } else  
+  
+                mWidth = desireByImg;  
+            
+            	
+        }  
+  
+        /*** 
+         * 设置高度
+         */  
+  
+        specMode = MeasureSpec.getMode(heightMeasureSpec);  
+        specSize = MeasureSpec.getSize(heightMeasureSpec);  
+        if (specMode == MeasureSpec.EXACTLY)// match_parent , accurate  
+        {  
+            mHeight = specSize; 
+        } else  
+        {  
+            int desire = getPaddingTop() + getPaddingBottom()  
+                    + mSrc.getHeight();  
+  
+            if (specMode == MeasureSpec.AT_MOST)// wrap_content  
+            {  
+                mHeight = Math.min(desire, specSize);  
+            } else  
+                mHeight = desire;  
+            	
+        }  
+        
+//        mWidth = 100;
+//        mHeight = 200;
+        setMeasuredDimension(mWidth, mHeight);
+		
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		 switch (type)  
+	        {  
+	        // 如果是TYPE_CIRCLE绘制圆形
+	        case TYPE_CIRCLE:  
+	  
+	            int min = Math.min(mWidth, mHeight);  
+	            /** 
+	             * �长度如果不一致，按小的值进行压缩
+	             */  
+	            mSrc = Bitmap.createScaledBitmap(mSrc, min, min, false);  
+	  
+	            canvas.drawBitmap(createCircleImage(mSrc, min), 0, 0, null);  
+	            break;  
+	        case TYPE_ROUND:  
+	            canvas.drawBitmap(createRoundConerImage(mSrc), 0, 0, null);  
+	            break;  
+	  
+	        }  
+	}
+
+	/** 
+     * �长度如果不一致，按小的值进行压缩
+     *  
+     * @param source 
+     * @param min 
+     * @return 
+     */  
+    private Bitmap createCircleImage(Bitmap source, int min)  
+    {  
+        final Paint paint = new Paint();  
+        paint.setAntiAlias(true);  
+        Bitmap target = Bitmap.createBitmap(mWidth, mHeight, Config.ARGB_8888);  
+        /** 
+         * �产生一个同样大小的画布 ���
+         */  
+        Canvas canvas = new Canvas(target);  
+        /** 
+         * �首先绘制圆形
+         */  
+        canvas.drawCircle(min / 2, min / 2, min / 2, paint);  
+        /** 
+         * 使用SRC_IN，参考上面的说明
+         */  
+        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));  
+        /** 
+         * �绘制图片
+         */  
+        canvas.drawBitmap(source, 0, 0, paint);  
+        return target;  
+    }  
+  
+    /** 
+     * �根据原图添加圆角
+     *  
+     * @param source 
+     * @return 
+     */  
+    private Bitmap createRoundConerImage(Bitmap source)  
+    {  
+    	//改变大小
+    	Matrix matrix = new Matrix();
+        matrix.postScale(mWidth/(float)source.getWidth(), mWidth/(float)source.getWidth());
+        source = Bitmap.createBitmap(source, 0, 0, source.getWidth(), source.getHeight(), matrix, true);
+
+        final Paint paint = new Paint();  
+        paint.setAntiAlias(true);
+        Bitmap target = Bitmap.createBitmap(mWidth, mHeight, Config.ARGB_8888);  
+        Canvas canvas = new Canvas(target);  
+        RectF rect = new RectF(0, 0, source.getWidth(), source.getHeight());  
+        canvas.drawRoundRect(rect, mRadius, mRadius, paint);  
+        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));  
+        canvas.drawBitmap(source, 0, 0, paint);  
+        return target;  
+    } 
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity13_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity13_1.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity13_1.java	(revision )
@@ -0,0 +1,25 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * 滤镜 ReflectView,暗淡效果
+ * @author Administrator
+ *
+ */
+public class MainActivity13_1 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main13_1);
+	}
+
+	
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/view/RoundImageView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/view/RoundImageView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/view/RoundImageView.java	(revision )
@@ -0,0 +1,269 @@
+package com.cn.seymour.androidjack.view;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.Shader.TileMode;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Parcelable;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.util.TypedValue;
+import android.widget.ImageView;
+
+import com.cn.seymour.androidjack.R;
+
+
+/**
+ * http://blog.csdn.net/lmj623565791/article/details/41967509
+ * 
+ * @author zhy
+ * 
+ */
+public class RoundImageView extends ImageView
+{
+	/**
+	 * 图片的类型，圆形or圆角
+	 */
+	private int type;
+	public static final int TYPE_CIRCLE = 0;
+	public static final int TYPE_ROUND = 1;
+	/**
+	 * 圆角大小的默认值�
+	 */
+	private static final int BODER_RADIUS_DEFAULT = 10;
+	/**
+	 * 圆角的大小�
+	 *
+	 */
+	private int mBorderRadius;
+
+	/**
+	 * 绘图的Paint
+	 */
+	private Paint mBitmapPaint;
+	/**
+	 * 圆角的半径�
+	 *
+	 * */
+	private int mRadius;
+	/**
+	 * 3x3 矩阵，主要用于缩小放大�	 */
+	private Matrix mMatrix;
+	/**
+	 * 渲染图像，使用图像为绘制图形着色
+	 */
+	private BitmapShader mBitmapShader;
+	/**
+	 * view的宽度
+	 * */
+	private int mWidth;
+	private RectF mRoundRect;
+
+	public RoundImageView(Context context, AttributeSet attrs)
+	{
+
+		super(context, attrs);
+		mMatrix = new Matrix();
+		mBitmapPaint = new Paint();
+		mBitmapPaint.setAntiAlias(true);
+
+		TypedArray a = context.obtainStyledAttributes(attrs,
+				R.styleable.RoundImageView);
+
+		mBorderRadius = a.getDimensionPixelSize(
+				R.styleable.RoundImageView_boderRadius, (int) TypedValue
+						.applyDimension(TypedValue.COMPLEX_UNIT_DIP,
+								BODER_RADIUS_DEFAULT, getResources()
+										.getDisplayMetrics()));// 榛樿涓�0dp
+		type = a.getInt(R.styleable.RoundImageView_type, TYPE_CIRCLE);// 榛樿涓篊ircle
+
+		a.recycle();
+	}
+
+	public RoundImageView(Context context)
+	{
+		this(context, null);
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
+	{
+		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+
+		/**
+		 * 如果类型是圆形，则强制改变view的宽高一致，以小值为准�		 */
+		if (type == TYPE_CIRCLE)
+		{
+			mWidth = Math.min(getMeasuredWidth(), getMeasuredHeight());
+			mRadius = mWidth / 2;
+			setMeasuredDimension(mWidth, mWidth);
+		}
+
+	}
+
+	/**
+	 * 初始化BitmapShader
+	 */
+	private void setUpShader()
+	{
+		Drawable drawable = getDrawable();
+		if (drawable == null)
+		{
+			return;
+		}
+
+		Bitmap bmp = drawableToBitamp(drawable);
+		// 将bmp作为着色器，就是在指定区域内绘制bmp
+		mBitmapShader = new BitmapShader(bmp, TileMode.CLAMP, TileMode.CLAMP);
+		float scale = 1.0f;
+		if (type == TYPE_CIRCLE)
+		{
+			// 拿到bitmap宽或高的小值
+			int bSize = Math.min(bmp.getWidth(), bmp.getHeight());
+			scale = mWidth * 1.0f / bSize;
+			System.out.println(scale);
+
+		} else if (type == TYPE_ROUND)
+		{
+			Log.e("TAG",
+					"b'w = " + bmp.getWidth() + " , " + "b'h = "
+							+ bmp.getHeight());
+			if (!(bmp.getWidth() == getWidth() && bmp.getHeight() == getHeight()))
+			{
+				// 如果图片的宽或者高与view的宽高不匹配，计算出需要缩放的比例；缩放后的图片的宽高，一定要大于我们view的宽高；所以我们这里取大
+				scale = Math.max(getWidth() * 1.0f / bmp.getWidth(),
+						getHeight() * 1.0f / bmp.getHeight());
+			}
+
+		}
+		// shader的变换矩阵，我们这里主要用于放大或者缩小
+		mMatrix.setScale(scale, scale);
+		// 设置变换矩阵
+		mBitmapShader.setLocalMatrix(mMatrix);
+		// 设置shader
+		mBitmapPaint.setShader(mBitmapShader);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas)
+	{
+		Log.e("TAG", "onDraw");
+		if (getDrawable() == null)
+		{
+			return;
+		}
+		setUpShader();
+
+		if (type == TYPE_ROUND)
+		{
+			canvas.drawRoundRect(mRoundRect, mBorderRadius, mBorderRadius,
+					mBitmapPaint);
+		} else
+		{
+			canvas.drawCircle(mRadius, mRadius, mRadius, mBitmapPaint);
+			// drawSomeThing(canvas);
+		}
+	}
+
+	@Override
+	protected void onSizeChanged(int w, int h, int oldw, int oldh)
+	{
+		super.onSizeChanged(w, h, oldw, oldh);
+
+		// 圆角图片的范围
+				if (type == TYPE_ROUND)
+			mRoundRect = new RectF(0, 0, w, h);
+	}
+
+	/**
+	 * drawable杞琤itmap
+	 * 
+	 * @param drawable
+	 * @return
+	 */
+	private Bitmap drawableToBitamp(Drawable drawable)
+	{
+		if (drawable instanceof BitmapDrawable)
+		{
+			BitmapDrawable bd = (BitmapDrawable) drawable;
+			return bd.getBitmap();
+		}
+		int w = drawable.getIntrinsicWidth();
+		int h = drawable.getIntrinsicHeight();
+		Bitmap bitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
+		Canvas canvas = new Canvas(bitmap);
+		drawable.setBounds(0, 0, w, h);
+		drawable.draw(canvas);
+		return bitmap;
+	}
+
+	private static final String STATE_INSTANCE = "state_instance";
+	private static final String STATE_TYPE = "state_type";
+	private static final String STATE_BORDER_RADIUS = "state_border_radius";
+
+	@Override
+	protected Parcelable onSaveInstanceState()
+	{
+		Bundle bundle = new Bundle();
+		bundle.putParcelable(STATE_INSTANCE, super.onSaveInstanceState());
+		bundle.putInt(STATE_TYPE, type);
+		bundle.putInt(STATE_BORDER_RADIUS, mBorderRadius);
+		return bundle;
+	}
+
+	@Override
+	protected void onRestoreInstanceState(Parcelable state)
+	{
+		if (state instanceof Bundle)
+		{
+			Bundle bundle = (Bundle) state;
+			super.onRestoreInstanceState(((Bundle) state)
+					.getParcelable(STATE_INSTANCE));
+			this.type = bundle.getInt(STATE_TYPE);
+			this.mBorderRadius = bundle.getInt(STATE_BORDER_RADIUS);
+		} else
+		{
+			super.onRestoreInstanceState(state);
+		}
+
+	}
+
+	public void setBorderRadius(int borderRadius)
+	{
+		int pxVal = dp2px(borderRadius);
+		if (this.mBorderRadius != pxVal)
+		{
+			this.mBorderRadius = pxVal;
+			invalidate();
+		}
+	}
+
+	public void setType(int type)
+	{
+		if (this.type != type)
+		{
+			this.type = type;
+			if (this.type != TYPE_ROUND && this.type != TYPE_CIRCLE)
+			{
+				this.type = TYPE_CIRCLE;
+			}
+			requestLayout();
+		}
+
+	}
+
+	public int dp2px(int dpVal)
+	{
+		return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,
+				dpVal, getResources().getDisplayMetrics());
+	}
+
+}
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity22.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity22.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity22.java	(revision )
@@ -0,0 +1,42 @@
+package com.cn.seymour.androidjack.demos;
+
+import com.cn.seymour.androidjack.R;
+import com.cn.seymour.androidjack.demos.widget.MAlertDialog;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+
+public class MainActivity22 extends Activity {
+	Context context = this ;
+	MAlertDialog dialog;
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main22);
+		Button button = (Button)findViewById(R.id.button);
+		button.setOnClickListener(new OnClickListener() {
+
+			@Override
+			public void onClick(View v) {
+				MAlertDialog.Builder mAlertDialog =new  MAlertDialog.Builder(context);
+                mAlertDialog.setTitle("提示")
+                        .setMessage("消毒未完成")
+                        .setPositiveButton("确定",
+                                new DialogInterface.OnClickListener() {
+                                    public void onClick(DialogInterface dialog, int which) {
+                                        dialog.dismiss();
+                                    }
+                                });
+                dialog = mAlertDialog.create();
+            dialog.show();
+			}
+		});
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity.java	(revision )
@@ -0,0 +1,46 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.graphics.Color;
+import android.os.Bundle;
+import android.support.v7.app.ActionBarActivity;
+import android.view.Menu;
+import android.view.MenuItem;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * Lgbutton
+ * @author Administrator
+ *
+ */
+public class MainActivity extends ActionBarActivity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main1_1);
+		LButtonBg bt = (LButtonBg)findViewById(R.id.btn);
+		if (bt != null) {
+			bt.setBackgroundColor(Color.BLUE, Color.CYAN, -10, -10, -10, 4, 2, Color.RED);
+		}
+	}
+
+	@Override
+	public boolean onCreateOptionsMenu(Menu menu) {
+		// Inflate the menu; this adds items to the action bar if it is present.
+		getMenuInflater().inflate(R.menu.menu_main, menu);
+		return true;
+	}
+
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item) {
+		// Handle action bar item clicks here. The action bar will
+		// automatically handle clicks on the Home/Up button, so long
+		// as you specify a parent activity in AndroidManifest.xml.
+		int id = item.getItemId();
+		if (id == R.id.action_settings) {
+			return true;
+		}
+		return super.onOptionsItemSelected(item);
+	}
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/activity.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/activity.java	(revision )
@@ -0,0 +1,294 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.text.Html;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.ScrollView;
+
+public class activity extends Activity{
+
+		@Override
+		protected void onCreate(Bundle savedInstanceState) {
+			super.onCreate(savedInstanceState);
+			LinearLayout ll = new LinearLayout(this);
+			ll.setOrientation(LinearLayout.VERTICAL);
+
+			ScrollView scrollView = new ScrollView(this);
+			scrollView.addView(ll);
+
+			Button btn1 = new Button(this);
+			btn1.setOnClickListener(new OnClickListener() {
+
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity.class);
+					startActivity(intent);
+				}
+			});
+			btn1.setText("Lgbutton,点击变色");
+			btn1.setId(1);
+			ll.addView(btn1);
+
+			Button btn2 = new Button(this);
+			btn2.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity1.class);
+					startActivity(intent);
+				}
+			});
+			btn2.setText("linearlayotu布局，字体对齐，alertdialog");
+			ll.addView(btn2);
+
+			Button btn3 = new Button(this);
+			btn3.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity2.class);
+					startActivity(intent);
+				}
+			});
+			btn3.setText("自定义控件  * 涉及到activity_textbutton.xml attr.xml textbutton.xml以及自定义控件的类");
+			ll.addView(btn3);
+
+			Button btn4 = new Button(this);
+			btn4.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity3.class);
+					startActivity(intent);
+				}
+			});
+			btn4.setText("自定义控件2 * attr里面定义的控件参数的“name”  Meter关联到类名Meter，用到时在layoutxml中才能自动提示属性");
+			ll.addView(btn4);
+
+			Button btn5 = new Button(this);
+			btn5.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity4.class);
+					startActivity(intent);
+				}
+			});
+			btn5.setText(Html.fromHtml("<font color='red'>PorterDuffXfermode</font> 自定义控件，圆角图片，CustomImageView"));
+			ll.addView(btn5);
+
+			Button btn6 = new Button(this);
+			btn6.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity5.class);
+					startActivity(intent);
+				}
+			});
+			btn6.setText("java代码控制图片");
+			ll.addView(btn6);
+
+			Button btn7 = new Button(this);
+			btn7.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity6.class);
+					startActivity(intent);
+				}
+			});
+			btn7.setText("ScrollView");
+			ll.addView(btn7);
+
+			Button btn8 = new Button(this);
+			btn8.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity7.class);
+					startActivity(intent);
+				}
+			});
+			btn8.setText(Html.fromHtml("<font color='red'>BitmapShader</font> 实战 实现圆形、圆角图片"));
+			ll.addView(btn8);
+
+			Button btn9 = new Button(this);
+			btn9.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity8.class);
+					startActivity(intent);
+				}
+			});
+			btn9.setText("转菊花");
+			ll.addView(btn9);
+
+			Button btn10 = new Button(this);
+			btn10.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity9.class);
+					startActivity(intent);
+				}
+			});
+			btn10.setText("垂直排列居中对齐");
+			ll.addView(btn10);
+
+			Button btn11 = new Button(this);
+			btn11.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity10.class);
+					startActivity(intent);
+				}
+			});
+			btn11.setText("时钟");
+			ll.addView(btn11);
+
+			Button btn12 = new Button(this);
+			btn12.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity10_1.class);
+					startActivity(intent);
+				}
+			});
+			btn12.setText("透明悬浮activity");
+			ll.addView(btn12);
+
+			Button btn13 = new Button(this);
+			btn13.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity11.class);
+					startActivity(intent);
+				}
+			});
+			btn13.setText("listview");
+			ll.addView(btn13);
+
+			Button btn14 = new Button(this);
+			btn14.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity12.class);
+					startActivity(intent);
+				}
+			});
+			btn14.setText("shader");
+			ll.addView(btn14);
+
+			Button btn15 = new Button(this);
+			btn15.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity13.class);
+					startActivity(intent);
+				}
+			});
+			btn15.setText("shader做出移动瞄准镜的效果");
+			ll.addView(btn15);
+
+			Button btn16 = new Button(this);
+			btn16.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity13_1.class);
+					startActivity(intent);
+				}
+			});
+			btn16.setText("滤镜 ReflectView,暗淡效果");
+			ll.addView(btn16);
+
+			Button btn17 = new Button(this);
+			btn17.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity14.class);
+					startActivity(intent);
+				}
+			});
+			btn17.setText("shader做出湖面倒影的效果");
+			ll.addView(btn17);
+
+			Button btn18 = new Button(this);
+			btn18.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity15.class);
+					startActivity(intent);
+				}
+			});
+			btn18.setText("ondraw列子,1.rotato旋转坐标 2.lay图层");
+			ll.addView(btn18);
+
+			Button btn19 = new Button(this);
+			btn19.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity16.class);
+					startActivity(intent);
+				}
+			});
+			btn19.setText("日期控件 * 弹出多个dialog，透明");
+			ll.addView(btn19);
+
+			Button btn20 = new Button(this);
+			btn20.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity17.class);
+					startActivity(intent);
+				}
+			});
+			btn20.setText("关于layoutparams嵌套的bug问题,SDK版本");
+			ll.addView(btn20);
+
+			Button btn21 = new Button(this);
+			btn21.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity18.class);
+					startActivity(intent);
+				}
+			});
+			btn21.setText("任意改变图片，* MatrixImageView");
+			ll.addView(btn21);
+
+			Button btn22 = new Button(this);
+			btn22.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity19.class);
+					startActivity(intent);
+				}
+			});
+			btn22.setText("触摸操作");
+			ll.addView(btn22);
+
+			Button btn23 = new Button(this);
+			btn23.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity20.class);
+					startActivity(intent);
+				}
+			});
+			btn23.setText("自定义控件画复杂图像");
+			ll.addView(btn23);
+
+			Button btn24 = new Button(this);
+			btn24.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View arg0) {
+					Intent intent = new Intent(activity.this, MainActivity22.class);
+					startActivity(intent);
+				}
+			});
+			btn24.setText("自定义AlertDialog");
+			ll.addView(btn24);
+
+			setContentView(scrollView);
+		}
+
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity7.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity7.java	(revision )
@@ -0,0 +1,54 @@
+/**
+ * 
+ */
+package com.cn.seymour.androidjack.demos;
+
+
+import com.cn.seymour.androidjack.R;
+import com.cn.seymour.androidjack.demos.widget.RoundImageView;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+
+/**
+ * BitmapShader ʵս ʵ��Բ�Ρ�Բ��ͼƬ
+ * @author Administrator
+ *
+ */
+
+public class MainActivity7 extends Activity {
+	private RoundImageView mQiQiu;
+	private RoundImageView mMeiNv ; 
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState)
+	{
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main7);
+		
+		mQiQiu = (RoundImageView) findViewById(R.id.id_qiqiu);
+		mMeiNv = (RoundImageView) findViewById(R.id.id_meinv);
+		
+		mQiQiu.setOnClickListener(new OnClickListener()
+		{
+			@Override
+			public void onClick(View v)
+			{
+				mQiQiu.setType(RoundImageView.TYPE_ROUND);
+			}
+		});
+		
+		mMeiNv.setOnClickListener(new OnClickListener()
+		{
+			
+			@Override
+			public void onClick(View v)
+			{
+				mMeiNv.setBorderRadius(90);
+			}
+		});
+	}
+
+}
Index: app/src/main/res/layout/activity_main1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main1.xml	(revision )
+++ app/src/main/res/layout/activity_main1.xml	(revision )
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical"
+    android:gravity="bottom">
+    
+    <LinearLayout 
+        android:layout_height="60dip"
+        android:layout_width="fill_parent"
+       	android:orientation="horizontal"
+       	android:gravity="right">
+        
+        <TextView 
+        android:text="hello world"
+        android:layout_height="40dip"
+        android:layout_width="100dip"
+        android:layout_marginRight="5dp"
+        android:background="#458926"/>
+        
+        
+         <TextView 
+        android:text="xxxxxxxxxxxx"
+        android:layout_height="40dip"
+        android:layout_width="100dip"
+        android:layout_marginLeft="145dp"
+        android:background="#458926"/>
+    </LinearLayout>
+    
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity4.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity4.java	(revision )
@@ -0,0 +1,28 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.app.AlertDialog.Builder;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * �自定义控件，圆角图片，CustomImageView
+ * @author Administrator
+ *
+ */
+public class MainActivity4 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		setContentView(R.layout.activity_main4);
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt2.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt2.java	(revision )
@@ -0,0 +1,136 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.drawable.BitmapDrawable;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.view.View;
+
+public class CustomImageViewt2 extends View {
+
+	final static int TYPE_CIRCLE = 0;
+	final static int TYPE_ROUND = 1;
+
+	Bitmap mbitmap;
+
+	int type;
+
+	int rounds;
+
+	int mWidth;
+	int mHieth;
+
+	public CustomImageViewt2(Context context, AttributeSet attrs,
+							 int defStyleAttr) {
+		super(context, attrs, defStyleAttr);
+
+		TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.CustomImageView, defStyleAttr, 0);
+
+		for(int i = 0; i < a.getIndexCount(); i++)
+		{
+			switch (a.getIndex(i)) {
+				case R.styleable.CustomImageView_src:
+					mbitmap = ((BitmapDrawable)getResources().getDrawable(a.getResourceId(a.getIndex(i), 0))).getBitmap();
+//					mbitmap = BitmapFactory.decodeResource(getResources(),a.getResourceId(a.getIndex(i),0));
+					break;
+				case R.styleable.CustomImageView_type:
+					type = a.getInt(a.getIndex(i), 0);
+					break;
+				case R.styleable.CustomImageView_boderRadius:
+					rounds = a.getDimensionPixelSize(a.getInt(i, 0), (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10f, getResources().getDisplayMetrics()));
+					break;
+				default:
+					break;
+			}
+		}
+	}
+
+	public CustomImageViewt2(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public CustomImageViewt2(Context context) {
+		this(context, null);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		super.onDraw(canvas);
+		switch (type) {
+			case TYPE_CIRCLE:
+				int min = Math.min(mHieth, mHieth);
+				mbitmap = Bitmap.createScaledBitmap(mbitmap, min, min, false);
+				canvas.drawBitmap(createCirCle(mbitmap,min), 0, 0, null);
+				break;
+
+			default:
+				break;
+		}
+	}
+
+	private Bitmap createCirCle(Bitmap source, int min) {
+		Paint paint = new Paint();
+		paint.setAntiAlias(true);
+		Bitmap target = Bitmap.createBitmap(mWidth, mHieth, Config.ARGB_8888);
+		Canvas canvs = new Canvas(target);
+		canvs.drawCircle(min/2, min/2, min/2, paint);
+		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
+		canvs.drawBitmap(source, 0, 0, paint);
+		return target;
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		int mode = MeasureSpec.getMode(widthMeasureSpec);
+		int size = MeasureSpec.getSize(widthMeasureSpec);
+
+		if(mode == MeasureSpec.EXACTLY)
+		{
+			mWidth = size;
+		}
+		else
+		{
+			int desireWidth = mbitmap.getWidth() + getPaddingLeft() + getPaddingRight();
+			if(mode == MeasureSpec.AT_MOST)
+			{
+				mWidth = Math.min(desireWidth, size);
+			}
+			else
+			{
+				mWidth = desireWidth;
+			}
+		}
+
+		mode = MeasureSpec.getMode(heightMeasureSpec);
+		size = MeasureSpec.getSize(heightMeasureSpec);
+		if(mode == MeasureSpec.EXACTLY)
+		{
+			mHieth = size;
+		}
+		else
+		{
+			int desireHeigh = mbitmap.getHeight() + getPaddingBottom() + getPaddingTop();
+			if(mode == MeasureSpec.AT_MOST)
+			{
+				mHieth = Math.min(desireHeigh, size);
+			}
+			else
+			{
+				mHieth = desireHeigh;
+			}
+		}
+
+		setMeasuredDimension(mWidth, mHieth);
+	}
+
+}
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/DateLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/DateLayout.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/DateLayout.java	(revision )
@@ -0,0 +1,557 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.List;
+
+import com.cn.seymour.androidjack.demos.LButtonBg;
+import com.cn.seymour.androidjack.demos.widget.WheelView.OnSelectListener;
+
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Handler;
+import android.view.Gravity;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+public class DateLayout extends LRelativeLayoutView implements OnClickListener, OnSelectListener
+{
+	private static int[] DAYS = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
+	private final int tv_demo_title = 1001;
+	private final int ll_demo_content = 1002;
+	private final int ll_demo_line = 1003;
+	private List[] lists;
+	private Context context;
+	/**
+	 * 有时间
+	 */
+	public static final int DATE_TYPE_STATE_TIME = 0;
+	/**
+	 * 没有时间
+	 */
+	public static final int DATE_TYPE_STATE_TIME_NOT = 1;
+	private int dateType = DATE_TYPE_STATE_TIME_NOT;
+	private Handler handler;
+	private OnSelectListeners onSelectListeners;
+
+	/**
+	 *
+	 * @param mFutureAge
+	 *            更改显示未来多少年
+	 * @param mAgelength
+	 *            更改显示年限长度 及时刷新�
+	 */
+	public void changeFutureAgeAndAgelength(int mFutureAge, int mAgelength)
+	{
+		List list = lists[0];
+		list.clear();
+		int k = getDate()[0] + mFutureAge;
+		if (k - mAgelength > 0)
+		{
+			for (int j = mAgelength; j >= 0; j--)
+			{
+				list.add(k - j + "");
+			}
+		}
+		WheelView view = (WheelView) findViewById(100);
+		view.resetData((ArrayList<String>) list);
+	}
+
+	public DateLayout(Context context, int state)
+	{
+
+		this(context);
+		handler = new Handler();
+		this.context = context;
+		dateType = state;
+		initData();
+		initView(lists.length);
+	}
+
+	private void initData()
+	{
+		if (lists == null)
+		{
+			lists = new ArrayList[3];
+			if (dateType == DATE_TYPE_STATE_TIME)
+			{
+				lists = new ArrayList[5];
+			}
+			for (int i = 0; i < lists.length; i++)
+			{
+				lists[i] = new ArrayList<String>();
+				int[] date = getDate();
+				switch (i)
+				{
+				// year
+				case 0:
+
+					for (int j = 150; j >= 0; j--)
+					{
+						List<String> arrlist = lists[i];
+						arrlist.add(date[i] - j + "");
+					}
+
+					break;
+				// month
+				case 1:
+					for (int j = 1; j <= 12; j++)
+					{
+						List<String> arrlist = lists[i];
+						arrlist.add(j + "");
+					}
+					break;
+				// day
+				case 2:
+					for (int j = 1; j <= 31; j++)
+					{
+						List<String> arrlist = lists[i];
+						arrlist.add(j + "");
+					}
+					break;
+				case 3:
+					for (int j = 0; j < 24; j++)
+					{
+						List<String> arrlist = lists[i];
+						arrlist.add(j + "");
+					}
+					break;
+				case 4:
+					for (int j = 0; j < 60; j++)
+					{
+						List<String> arrlist = lists[i];
+						arrlist.add(j + "");
+					}
+					break;
+				}
+			}
+		}
+	}
+
+	private static int[] getDate()
+	{
+		int[] dates = new int[5];
+		Calendar c = Calendar.getInstance();// 可以对每个时间域单独修改
+		dates[0] = c.get(Calendar.YEAR);
+		dates[1] = (c.get(Calendar.MONTH) + 1);
+		dates[2] = c.get(Calendar.DATE);
+		dates[3] = c.get(Calendar.HOUR_OF_DAY) + 1;
+		dates[4] = c.get(Calendar.MINUTE) + 1;
+		return dates;
+	}
+
+	public DateLayout(Context context)
+	{
+		super(context);
+	}
+
+	private void initView(int length)
+	{
+		setBackgroundColor(Color.parseColor("#287AC4"), Color.parseColor("#287AC4"), Color.parseColor("#287AC4"), Color.parseColor("#287AC4"), Color.parseColor("#287AC4"), dip2px(10), 0, Color.parseColor("#287AC4"));
+		setTitle();
+		setContent(length);
+		setResBtn();
+	}
+
+	private void setResBtn()
+	{
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		LinearLayout layoutContent = new LinearLayout(context);
+		params.addRule(RelativeLayout.BELOW, ll_demo_line);
+		layoutContent.setOrientation(LinearLayout.HORIZONTAL);
+		addView(layoutContent, params);
+		LinearLayout.LayoutParams linParams = new LinearLayout.LayoutParams(0, LayoutParams.WRAP_CONTENT);
+		linParams.weight = 1;
+		LButtonBg setBtn = setBtn("取消");
+		layoutContent.addView(setBtn, linParams);
+		int w = MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED);
+		int h = MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED);
+		setBtn.measure(w, h);
+		int measuredHeight = setBtn.getMeasuredHeight();
+		View view = new View(context);
+		view.setBackgroundColor(Color.parseColor("#dddddd"));
+		LinearLayout.LayoutParams lineParams = new LinearLayout.LayoutParams(dip2px(1), measuredHeight);
+		layoutContent.addView(view, lineParams);
+		layoutContent.addView(setBtn("确认"), linParams);
+	}
+
+	private LButtonBg setBtn(String str)
+	{
+		float[] round = new float[8];
+		round[4] = dip2px(10);
+		round[5] = dip2px(10);
+		round[6] = dip2px(10);
+		round[7] = dip2px(10);
+		LButtonBg btn = new LButtonBg(context);
+		btn.setText(str);
+		btn.setOnClickListener(this);
+		if (str.equals("取消"))
+		{
+			round[4] = 0;
+			round[5] = 0;
+		} else
+		{
+			round[6] = 0;
+			round[7] = 0;
+		}
+		btn.setBackgroundColor2(Color.parseColor("#ffffff"), Color.parseColor("#eeeeee"), Color.parseColor("#ffffff"), Color.parseColor("#ffffff"), Color.parseColor("#ffffff"), round, 1, Color.parseColor("#ffffff"));
+		btn.setTextSize(18);
+		return btn;
+	}
+
+	/**
+	 * �如果更改了默认样式 ，需要更新View();
+	 */
+	public void refresh()
+	{
+		removeAllViews();
+		initView(lists.length);
+	}
+
+	private void setContent(int length)
+	{
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		LinearLayout layoutContent = new LinearLayout(context);
+		params.addRule(RelativeLayout.BELOW, tv_demo_title);
+		layoutContent.setOrientation(LinearLayout.HORIZONTAL);
+		layoutContent.setId(ll_demo_content);
+		addView(layoutContent, params);
+		View view = new View(context);
+		view.setId(ll_demo_line);
+		view.setBackgroundColor(Color.parseColor("#dddddd"));
+		LayoutParams paramsline = new LayoutParams(LayoutParams.MATCH_PARENT, dip2px(1));
+		paramsline.addRule(RelativeLayout.BELOW, ll_demo_content);
+		addView(view, paramsline);
+		LinearLayout.LayoutParams linParams = new LinearLayout.LayoutParams(0, LayoutParams.WRAP_CONTENT);
+		linParams.weight = 6;
+		String[] Strs = new String[] { "年", "月", "日", "时", "分"  };
+		for (int i = 0; i < length; i++)
+		{
+			if (i == 0)
+			{
+				linParams.weight = 6;
+			} else
+			{
+				linParams.weight = 5;
+			}
+			layoutContent.addView(setContentData(Strs[i], i), linParams);
+		}
+	}
+
+	public void setOnSelectListeners(OnSelectListeners onSelectListeners)
+	{
+		this.onSelectListeners = onSelectListeners;
+	}
+
+	private LinearLayout setContentData(String strs, int i)
+	{
+		LinearLayout layout = new LinearLayout(context);
+		layout.setOrientation(LinearLayout.VERTICAL);
+		layout.setBackgroundColor(Color.WHITE);
+		layout.addView(setContentTitle(strs));
+		layout.addView(setWheelViewData(i));
+		return layout;
+	}
+
+	/**
+	 * 设置默认字体大小
+	 *
+	 * @param normalFont
+	 */
+	public void setNormalFont(int normalFont)
+	{
+		this.normalFont = normalFont;
+	}
+
+	/**
+	 * �设置默认选中时字体大小
+	 *
+	 * @param selectedFont
+	 */
+	public void setSelectedFont(int selectedFont)
+	{
+		this.selectedFont = selectedFont;
+	}
+
+	/**
+	 * �设置默认字体颜色
+	 *
+	 * @param normalColor
+	 */
+	public void setNormalColor(int normalColor)
+	{
+		this.normalColor = normalColor;
+	}
+
+	/**
+	 * �设置选中时字体颜色
+	 *
+	 * @param selectedColor
+	 */
+	public void setSelectedColor(int selectedColor)
+	{
+		this.selectedColor = selectedColor;
+	}
+
+	/**
+	 * �设置单元格高度 注：为了保证自定义控件错乱 同时也是设置控件的高度 控件高度=单元格*显示内容个数��
+	 *
+	 * @param unitHeight
+	 */
+	public void setUnitHeight(int unitHeight)
+	{
+		this.unitHeight = unitHeight;
+	}
+
+	/**
+	 * �设置显示内容个数 建议2*n+1 个
+	 *
+	 * @param itemNumber
+	 */
+	public void setItemNumber(int itemNumber)
+	{
+		this.itemNumber = itemNumber;
+	}
+
+	/**
+	 * �设置线条粗细
+	 *
+	 * @param lineWidth
+	 */
+	public void setLineWidth(int lineWidth)
+	{
+		this.lineWidth = lineWidth;
+	}
+
+	/**
+	 * �设置线条的颜色
+	 *
+	 * @param lineColor
+	 */
+
+	public void setLineColor(int lineColor)
+	{
+		this.lineColor = lineColor;
+	}
+
+	/**
+	 * �设置两线条之间的距离
+	 *
+	 * @param lineColor
+	 */
+	public void setLineHeight(int lineHeight)
+	{
+		this.lineHeight = lineHeight;
+	}
+
+	private int normalFont = 18;
+	private int selectedFont = 20;
+	private int normalColor = Color.parseColor("#AEAEAE");
+	private int selectedColor = Color.parseColor("#088ACE");
+	private int unitHeight = 35;
+	private int lineWidth = 1;
+	private int lineColor = Color.parseColor("#CDE6EF");
+	private int lineHeight = 4;
+	private int itemNumber = 5;
+
+	private WheelView setWheelViewData(int i)
+	{
+		WheelView wva = new WheelView(context);
+		wva.setId(100 + i);
+		wva.setLineWidth(dip2px(lineWidth));
+		wva.setLineColor(lineColor);
+		wva.setControlHeight(dip2px(unitHeight * itemNumber));
+		wva.setNormalFont(dip2px(normalFont));
+		wva.setNormalColor(normalColor);
+		wva.setSelectedFont(dip2px(selectedFont));
+		wva.setSelectedColor(selectedColor);
+		wva.setUnitHeight(dip2px(unitHeight));
+		wva.setLineHeight(lineHeight);
+		wva.setItemNumber(itemNumber);
+		int[] date = getDate();
+		List<String> list = lists[i];
+		wva.setData((ArrayList<String>) list);
+		if (i == 0)
+		{
+			wva.setDefault(130);
+		} else
+		{
+			wva.setDefault(date[i] - 1);
+		}
+		wva.setOnSelectListener(this);
+		return wva;
+	}
+
+	private TextView setContentTitle(String strs)
+	{
+		LinearLayout.LayoutParams linParams = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		TextView view = new TextView(context);
+		view.setLayoutParams(linParams);
+		view.setPadding(dip2px(3), dip2px(5), dip2px(0), dip2px(5));
+		view.setText(strs);
+		view.setTextColor(Color.BLACK);
+		view.setTextSize(18);
+		view.setGravity(Gravity.CENTER_HORIZONTAL);
+		return view;
+	}
+
+	private void setTitle()
+	{
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		TextView textView = new TextView(context);
+		textView.setId(tv_demo_title);
+		textView.setPadding(0, dip2px(10), 0, dip2px(10));
+		textView.setGravity(Gravity.CENTER_HORIZONTAL);
+		textView.setText("日期");
+		textView.setTextSize(24);
+		textView.setTextColor(Color.parseColor("#ffffff"));
+		textView.setLayoutParams(params);
+		addView(textView);
+	}
+
+	private int dip2px(float dipValue)
+	{
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int) (dipValue * scale + 0.5f);
+	}
+
+	@Override
+	public void onClick(View v)
+	{
+
+		if (onSelectListeners != null)
+		{
+			if ("ȷ��".equals(((Button) v).getText()))
+			{
+				if (dateType == DATE_TYPE_STATE_TIME_NOT)
+				{
+					String[] str = new String[3];
+
+					for (int i = 0; i < str.length; i++)
+					{
+						WheelView view = (WheelView) findViewById(100 + i);
+						str[i] = view.getSelectedText();
+					}
+					onSelectListeners.setPositiveButton(str[0] + "-" + str[1] + "-" + str[2]);
+				} else
+				{
+					String[] str = new String[5];
+					for (int i = 0; i < str.length; i++)
+					{
+						WheelView view = (WheelView) findViewById(100 + i);
+						str[i] = view.getSelectedText();
+					}
+					onSelectListeners.setPositiveButton(str[0] + "-" + str[1] + "-" + str[2] + "  " + str[3] + ":" + str[4] + ":00");
+				}
+
+			} else
+			{
+				onSelectListeners.setNegativeButton();
+			}
+
+		}
+	}
+
+	private int yearDate = getDate()[0] - 20;
+	private int monthDate = getDate()[1];
+	private int dayDate = getDate()[2];
+
+	@Override
+	public void endSelect(View v, int id, String text)
+	{
+
+		switch (v.getId())
+		{
+		case 100:
+			yearDate = Integer.parseInt(text);
+			setWheelDay();
+			break;
+		case 101:
+			monthDate = Integer.parseInt(text);
+			setWheelDay();
+			break;
+		case 102:
+			dayDate = Integer.parseInt(text);
+			break;
+
+		}
+
+	}
+
+	private void setWheelDay()
+	{
+		int i;
+		if (yearDate % 400 == 0 || (yearDate % 4 == 0 && yearDate % 100 != 0) && monthDate == 2)
+		{
+			i = 29;
+		} else
+		{
+			i = DAYS[monthDate - 1];
+		}
+		handler.post(new resetDateRunnable(setDateWheelData(lists[2], i)));
+	}
+
+	private List<String> setDateWheelData(List<String> arrlist, int i)
+	{
+		if (arrlist.size() == i)
+		{
+			return arrlist;
+		}
+		if (arrlist.size() > i)
+		{
+			for (int j = arrlist.size() - 1; j >= i; j--)
+			{
+				arrlist.remove(j);
+			}
+			return arrlist;
+		} else
+		{
+			for (int j = arrlist.size() - 1; j <= i; j++)
+			{
+				arrlist.add("" + (Integer.parseInt(arrlist.get(arrlist.size() - 1)) + 1));
+			}
+			return arrlist;
+		}
+	}
+
+	private class resetDateRunnable implements Runnable
+	{
+		private List<String> list;
+
+		public resetDateRunnable(List<String> list)
+		{
+			this.list = list;
+		}
+
+		@Override
+		public void run()
+		{
+			WheelView view = (WheelView) findViewById(102);
+			view.resetData((ArrayList<String>) list);
+			if (dayDate > list.size() - 1)
+			{
+				view.setDefault(list.size() - 1);
+			} else
+			{
+				view.setDefault(dayDate - 1);
+			}
+
+		}
+	}
+
+	@Override
+	public void selecting(View v, int id, String text)
+	{
+	}
+
+	public interface OnSelectListeners
+	{
+		public void setPositiveButton(String date);
+
+		public void setNegativeButton();
+	}
+}
Index: app/src/main/res/layout/activity_main12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main12.xml	(revision )
+++ app/src/main/res/layout/activity_main12.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <com.cn.seymour.androidjack.demos.widget.ShaderView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView2.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/ShaderView2.java	(revision )
@@ -0,0 +1,115 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.LinearGradient;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.Shader;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.view.View;
+
+/**
+ * shader镜面图像
+ * 
+ * @author Administrator
+ * 
+ */
+public class ShaderView2 extends View {
+	Bitmap mSrcBitmap, mRefBitmap;
+
+	Paint mPaint;
+
+	int x, y;// 位图起点坐标
+
+	PorterDuffXfermode mXfermode;// 混合模式
+
+	public ShaderView2(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		initRes(context);
+	}
+
+	private void initRes(Context context) {
+		mSrcBitmap = BitmapFactory.decodeResource(context.getResources(),
+				R.drawable.qiqiu1);
+
+		Matrix matrix = new Matrix();
+		// matrix.setScale(1f, -1f);f
+		// matrix.setTranslate(1.5f, 1f);
+
+//		float[] floats = new float[] {
+//				(float) Math.cos(Math.toRadians(10)),(float) Math.sin(Math.toRadians(10)), 130f,
+//				-(float) Math.sin(Math.toRadians(10)),(float) Math.cos(Math.toRadians(10)), 150f,
+//				0f, 0f, 1f };
+//		matrix.setValues(floats);
+
+//		matrix.postRotate(10);
+//		matrix.setTranslate(50, 50);
+
+		/*float[] floats1 = new float[]{
+				1.0F,0.0F,0.0F,
+				0.0F,-1.0F,(float)mSrcBitmap.getHeight(),
+				0.0F,0.0F,1.0F};
+		matrix.setValues(floats1);*/
+
+//		float[] floats1 = new float[]{
+//			0.866F,-0.5F,0F,
+//			0.5F,0.866F,0F,
+//			0.0F,0.0F,1.0F};
+//		matrix.setValues(floats1);
+
+		matrix.setSkew(0.0f, 0.5f);
+
+		mRefBitmap = Bitmap.createBitmap(mSrcBitmap, 0, 0,
+				mSrcBitmap.getWidth(), mSrcBitmap.getHeight(), matrix, true);
+
+		DisplayMetrics dm = context.getResources().getDisplayMetrics();
+		int screenW = dm.widthPixels;
+		int screenH = dm.heightPixels;
+
+		x = screenW / 2 - mSrcBitmap.getWidth() / 2;
+		y = screenH / 2 - mSrcBitmap.getHeight() / 2;
+
+		mPaint = new Paint();
+
+		mPaint.setShader(new LinearGradient(x, y + mSrcBitmap.getHeight(), x, y
+				+ mSrcBitmap.getHeight() + mSrcBitmap.getHeight() / 2,
+				0xAA000000, Color.TRANSPARENT, Shader.TileMode.CLAMP));
+
+		mXfermode = new PorterDuffXfermode(PorterDuff.Mode.DST_IN);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		canvas.drawColor(Color.DKGRAY);
+		canvas.drawBitmap(mSrcBitmap, x, y, null);
+		canvas.drawBitmap(mRefBitmap, x, y + mSrcBitmap.getHeight() + 10, null);
+
+		int sc = canvas.saveLayer(x, y + mSrcBitmap.getHeight(),
+				x + mRefBitmap.getWidth(), y + mSrcBitmap.getHeight() * 2,
+				null, Canvas.ALL_SAVE_FLAG);
+
+		// canvas.drawBitmap(mRefBitmap, x, y + mSrcBitmap.getHeight(), null);
+		//
+		// mPaint.setXfermode(mXfermode);
+		//
+		// canvas.drawRect(x, y + mSrcBitmap.getHeight(),
+		// x + mSrcBitmap.getWidth(), y + mSrcBitmap.getHeight() * 4,
+		// mPaint);
+
+		// mPaint.setXfermode(null);
+
+		// canvas.restoreToCount(sc);
+	}
+
+
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity1.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity1.java	(revision )
@@ -0,0 +1,185 @@
+package com.cn.seymour.androidjack.demos;
+
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.text.InputType;
+import android.view.Gravity;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.LinearLayout.LayoutParams;
+import android.widget.TextView;
+
+import com.cn.seymour.androidjack.R;
+import com.cn.seymour.androidjack.demos.LEditTextWithBtn.LEditTextWithBtnQueryLintener;
+
+/**
+ * linearlayotu布局，字体对齐，alertdialog
+ * @author Administrator
+ *
+ */
+public class MainActivity1 extends Activity {
+
+	Context context = this;
+	Button btn= null;
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main2);
+
+		btn = (Button)findViewById(R.id.btn);
+		btn.setOnClickListener(new OnClickListener() {
+
+			@Override
+			public void onClick(View arg0) {
+//				new Thread(run).start();
+				System.out.println(Util.dip2px(context, 2));
+				new Thread(new Runnable() {
+
+					@Override
+					public void run() {
+						handler.sendEmptyMessage(0);
+//						Instrumentation ins = new Instrumentation();
+//						ins.sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);
+					}
+				}).start();
+			}
+		});
+	}
+
+	Handler handler = new Handler(){
+		@Override
+		public void handleMessage(Message msg) {
+			super.handleMessage(msg);
+			switch (msg.what) {
+				case 0:
+					showDialog();
+					break;
+
+				default:
+					break;
+			}
+		}
+	};
+
+	public Runnable run = new Runnable() {
+
+		@Override
+		public void run() {
+			showDialog();
+//			Instrumentation ins = new Instrumentation();
+//			ins.sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);
+		}
+	};
+
+
+	/**
+	 * 鐐瑰嚮璺宠浆鏄剧ず寮瑰嚭妗�
+	 * @param res 褰撳墠椤甸潰鐨勫垪琛ㄧ粨鏋�
+	 */
+	private void showDialog(){
+		Dialog dialog = new Dialog(context, R.style.dialog_style);
+		dialog.setCanceledOnTouchOutside(true);
+		dialog.setCancelable(true);
+
+		LLinearLayoutView layout = new LLinearLayoutView(context);
+		int pad = 10;
+		layout.setOrientation(LinearLayout.VERTICAL);
+		layout.setBackgroundColor(Color.parseColor("#287AC4"),
+				Color.parseColor("#287AC4"),
+				Color.parseColor("#287AC4"),
+				Color.parseColor("#287AC4"),
+				Color.parseColor("#287AC4"),
+				pad,
+				0,
+				Color.parseColor("#287AC4"));
+
+		TextView textView = new TextView(context);
+		textView.setGravity(Gravity.CENTER);
+		textView.setPadding(0, pad, 0, pad);
+		textView.setText("椤甸潰璺宠浆");
+		textView.setTextSize(20);
+		textView.setTextColor(Color.WHITE);
+		layout.addView(textView,LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT);
+
+		LLinearLayoutView layout2 = new LLinearLayoutView(context);
+		layout2.setBackgroundColor2(Color.WHITE,
+				Color.WHITE,
+				Color.WHITE,
+				Color.WHITE,
+				Color.WHITE,
+				new float[]{0,0,0,0,pad,pad,pad,pad},
+				0,
+				Color.WHITE);
+		int padLayout2 = 30;
+		layout2.setPadding(pad, padLayout2, pad, padLayout2);
+		layout.addView(layout2, LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+
+		int roundRadius = 5;
+		LEditTextWithBtn editTextWithBtn = new LEditTextWithBtn(context);
+		editTextWithBtn.setBackgroundColor(Color.parseColor("#00000000"),
+				Color.parseColor("#00000000"),
+				Color.parseColor("#00000000"),
+				Color.parseColor("#00000000"),
+				Color.parseColor("#00000000"),
+				roundRadius,
+				1,
+				Color.parseColor("#000000"));
+		editTextWithBtn.setQueryBtnBackColor2(Color.parseColor("#E0E0E0"),
+				Color.parseColor("#AAE0E0E0"),
+				Color.parseColor("#AAE0E0E0"),
+				-10,
+				Color.parseColor("#AAE0E0E0"),
+				new float[]{0,0,roundRadius,roundRadius,roundRadius,roundRadius,0,0},
+				1,
+				Color.parseColor("#CBCBCB"));
+		LayoutParams editTextWithBtnLP = new LayoutParams(400, 40);
+		editTextWithBtn.setInPutType(InputType.TYPE_CLASS_NUMBER);
+		editTextWithBtn.setHintString("璇疯緭鍏ラ�?鐮�1-)");
+		editTextWithBtn.setShowQuerybtn(false);
+		layout2.addView(editTextWithBtn, editTextWithBtnLP);
+		editTextWithBtnLP = null;
+
+		editTextWithBtn.setEditTextWithBtnQueryLintener(new LEditTextWithBtnQueryLintener() {
+
+			@Override
+			public void onClickQuery(LEditTextWithBtn editTextWithBtn, String keyString)
+			{
+				int num = -1;
+				try
+				{
+					num = Integer.parseInt(keyString);
+				}
+				catch (Exception e)
+				{
+					num = -1;
+				}
+
+//				if(num > 0)
+//				{
+//					getData();
+//					dialog.cancel();
+//				}
+//				else
+//				{
+//					editTextWithBtn.setText("");
+//					editTextWithBtn.startAnimal();
+//				}
+
+			}
+		});
+
+		dialog.setContentView(layout);
+
+		dialog.show();
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity12.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity12.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity12.java	(revision )
@@ -0,0 +1,23 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * shader
+ * @author Administrator
+ *
+ */
+public class MainActivity12 extends Activity{
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main12);
+	}
+
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity18.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity18.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity18.java	(revision )
@@ -0,0 +1,25 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * �任意改变图片
+ * 
+ * MatrixImageView
+ * 
+ * @author Administrator
+ *
+ */
+public class MainActivity18 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main18);
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity15.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity15.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity15.java	(revision )
@@ -0,0 +1,78 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.LinearLayout;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * ondraw����
+ * 
+ * @author Administrator
+ * 
+ */
+public class MainActivity15 extends Activity {
+	LinearLayout ll;
+	Context context = this;
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		setContentView(R.layout.activity_main15);
+		
+		ll = (LinearLayout)findViewById(R.id.ll);
+		ll.setOnClickListener(new OnClickListener() {
+			
+			@Override
+			public void onClick(View arg0) {
+				ll.addView(new Sample(context));
+				setContentView(new Sample(context));
+			}
+		});
+	
+	}
+
+	private static class Sample extends View {
+
+		private final int LAYER_FLAGS = Canvas.MATRIX_SAVE_FLAG
+				| Canvas.CLIP_SAVE_FLAG | Canvas.HAS_ALPHA_LAYER_SAVE_FLAG
+				| Canvas.FULL_COLOR_LAYER_SAVE_FLAG
+				| Canvas.CLIP_TO_LAYER_SAVE_FLAG;
+
+		private Paint mPaint;
+		
+		public Sample(Context context) {
+			super(context);
+			
+			setFocusable(true);
+			
+			mPaint = new Paint();
+			mPaint.setAntiAlias(true);
+		}
+
+		@Override
+		protected void onDraw(Canvas canvas) {
+			canvas.translate(10, 10);
+			canvas.drawColor(0xFFFFFFFF);
+			mPaint.setColor(0xFFFFFF00);
+			
+			canvas.drawCircle(200,700, 75, mPaint);
+			
+			canvas.saveLayerAlpha(0,0, 500, 1000, 0x11, LAYER_FLAGS);
+			
+			mPaint.setColor(0xFF00FF00);
+			
+			canvas.drawCircle(275, 775, 75, mPaint);
+			canvas.restore();
+		}
+
+		
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/MultiCricleView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/MultiCricleView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/MultiCricleView.java	(revision )
@@ -0,0 +1,235 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.text.TextPaint;
+import android.util.AttributeSet;
+import android.view.View;
+
+public class MultiCricleView extends View {
+
+	/**
+	 * 描边宽度占比
+	 * <br> Float
+	 */
+	private static final float STROKE_WIDTH = 1F / 256F; 
+	/**
+	 * 线段长度占比  �
+	 * <br> Float
+	 */
+	private static final float LINE_LENGTH = 3F / 32F;  
+	/**
+	 * 大圆半径
+	 * <br> Float
+	 */
+	private static final float CRICLE_LARGER_RADIU = 3F / 32F;   
+	/**
+	 * 小圆半径
+	 * <br> Float
+	 */
+	private static final float CRICLE_SMALL_RADIU = 5F / 64F; 
+	/**
+	 * 弧半径
+	 * <br> Float
+	 */
+	private static final float ARC_RADIU = 1F / 8F; 
+	/**
+	 * 弧围绕文字半径
+	 * <br> Float
+	 */
+	private static final float ARC_TEXT_RADIU = 5F / 32F;  
+	/**
+	 * 图像画笔�
+	 * <br> Paint
+	 */
+	Paint strokePaint;
+	
+	/**
+	 * 文字画笔
+	 * <br> Paint
+	 */
+	Paint textPaint;
+	
+	/**
+	 * � 控件边长ؼ��߳�
+	 * <br> Int
+	 */
+	int size;
+	
+	/**
+	 * ��描边宽度 ߿��
+	 * <br> Float
+	 */
+	private float strokeWidth; 
+	
+	/**
+	 * 中心圆圆心坐标����
+	 * <br> Float
+	 */
+    private float ccX, ccY; 
+    
+    /**
+	 * 大圆半径
+	 * <br> Float
+	 */
+    private float largeCricleRadiu;   
+    
+    /**
+     * 线段长度�
+     * <br> Float
+     */
+    private float lineLength;   
+    
+    /**
+     * 文本的Y轴偏移值
+     * <br> Float
+     */
+    private float textOffsetY;    
+	
+    /**
+     * 圆弧画笔��
+     * <br> Float
+     */
+    private Paint arcPaint;
+    
+	public MultiCricleView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		
+		initPaint(context);
+	}
+
+	private void initPaint(Context context) {
+		strokePaint = new Paint(Paint.ANTI_ALIAS_FLAG|Paint.DITHER_FLAG);
+		strokePaint.setStyle(Paint.Style.STROKE);
+		strokePaint.setStrokeCap(Paint.Cap.ROUND);
+		strokePaint.setColor(Color.WHITE);
+		
+		textPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG | Paint.SUBPIXEL_TEXT_FLAG);  
+        textPaint.setColor(Color.WHITE);  
+        textPaint.setTextSize(30);  
+        textPaint.setTextAlign(Paint.Align.CENTER);
+        
+        arcPaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG | Paint.SUBPIXEL_TEXT_FLAG);  
+        
+        textOffsetY = (textPaint.descent() + textPaint.ascent()) / 2;  
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		// TODO Auto-generated method stub
+		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+	}
+
+	@Override
+	protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+		size = w;
+		
+		calculation();
+	}
+
+	private void calculation() {
+
+		//计算描边宽度
+		strokeWidth = STROKE_WIDTH*size;
+
+		//计算大圆半径
+		largeCricleRadiu = size*CRICLE_LARGER_RADIU;
+
+		// 计算中心圆圆心坐标
+		ccX = size / 2;
+		ccY = size / 2 + size * CRICLE_LARGER_RADIU;
+
+		lineLength = size *  LINE_LENGTH;
+
+		// 设置参数
+		setPara();
+
+	}
+
+	private void setPara() {
+		// TODO Auto-generated method stub
+		strokePaint.setStrokeWidth(strokeWidth);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		canvas.drawColor(0xFFF29B76);
+		float cricleY = -lineLength * 3;  
+		
+		canvas.drawCircle(ccX, ccY, largeCricleRadiu, strokePaint);
+		
+		drawTopLeft(canvas);
+		drawTopRight(canvas);
+		drawTopRightArc(canvas, cricleY);
+	}
+
+	private void drawTopLeft(Canvas canvas) {
+		canvas.save();
+		
+		canvas.translate(ccX, ccY);
+		canvas.rotate(-30);
+		
+		canvas.drawLine(0, -largeCricleRadiu, 0, -largeCricleRadiu*2, strokePaint);
+		canvas.drawCircle(0, -lineLength*3, largeCricleRadiu, strokePaint);
+		canvas.drawText("Apple", 0, -lineLength * 3 - textOffsetY, textPaint); 
+		canvas.drawLine(0, -lineLength*4, 0, -lineLength*5, strokePaint);
+		canvas.drawCircle(0, -lineLength*6, largeCricleRadiu, strokePaint);
+		
+		canvas.restore();
+	}
+	
+	private void drawTopRight(Canvas canvas) {
+		canvas.save();
+		
+		canvas.translate(ccX, ccY);
+		canvas.rotate(-60);
+		
+		canvas.drawLine(largeCricleRadiu,0,  largeCricleRadiu*2,0, strokePaint);
+		canvas.drawCircle( largeCricleRadiu*3,0, largeCricleRadiu, strokePaint);
+		
+		canvas.restore();
+	}
+	
+	private void drawTopRightArc(Canvas canvas,float cricleY){
+		canvas.save();
+		
+		canvas.translate(0, cricleY);
+		canvas.rotate(-30);
+		
+		
+		float arcRadiu = size * ARC_RADIU;  
+	    RectF oval = new RectF(-arcRadiu, -arcRadiu, arcRadiu, arcRadiu);  
+	    arcPaint.setStyle(Paint.Style.FILL);  
+	    arcPaint.setColor(0x55EC6941);  
+	    canvas.drawArc(oval, -22.5F, -135, true, arcPaint);  
+	    arcPaint.setStyle(Paint.Style.STROKE);  
+	    arcPaint.setColor(Color.WHITE);  
+	    canvas.drawArc(oval, -22.5F, -135, false, arcPaint);  
+	  
+	    float arcTextRadiu = size * ARC_TEXT_RADIU;
+
+		canvas.save();
+		// 把画布旋转到扇形左端的方向
+		canvas.rotate(-135F / 2F);
+
+	    /*
+	     * 每隔33.75度角画一次文本
+	     */
+		for (float i = 0; i < 5 * 33.75F; i += 33.75F) {
+	        canvas.save();  
+	        canvas.rotate(i);  
+	  
+	        canvas.drawText("Aige", 0, -arcTextRadiu, textPaint);  
+	  
+	        canvas.restore();  
+	    }  
+	  
+	    canvas.restore();  
+	  
+	    canvas.restore();
+	}
+	
+}
Index: app/src/main/res/layout/activity_main14.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main14.xml	(revision )
+++ app/src/main/res/layout/activity_main14.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+	<com.cn.seymour.androidjack.demos.widget.ShaderView2
+	    android:layout_width="wrap_content"
+	    android:layout_height="wrap_content"/>
+    
+</LinearLayout>
+
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity16.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity16.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity16.java	(revision )
@@ -0,0 +1,75 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.LinearLayout;
+
+import com.cn.seymour.androidjack.R;
+import com.cn.seymour.androidjack.demos.widget.DateDiolog;
+import com.cn.seymour.androidjack.demos.widget.ProvinceLayout.OnSelectListeners;
+
+/**
+ * ��日期控件
+ *
+ * 弹出多个dialog，透明
+ * @author Administrator
+ *
+ */
+public class MainActivity16 extends Activity implements OnSelectListeners{
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		
+		LinearLayout ll = new LinearLayout(this);
+		ll.setBackgroundColor(Color.YELLOW);
+		
+		view ll1 = new view(this);
+		ll1.setBackgroundColor(Color.GRAY);
+		
+		final DateDiolog d = new DateDiolog(this, R.style.dialog_style);
+		d.setOnSelectListeners(this);
+		
+		Button b = new Button(this);
+		ll1.addView(b);
+		b.setOnClickListener(new OnClickListener() {
+			
+			@Override
+			public void onClick(View arg0) {
+				d.show();
+			}
+		});
+		
+		setContentView(ll1);
+	}
+
+	class view extends LinearLayout{
+
+		public view(Context context) {
+			super(context);
+		}
+		
+	}
+
+	@Override
+	public void setPositiveButton(String date) {
+		System.out.println("s");
+		Intent intent = new Intent(MainActivity16.this,MainActivity10_1.class);
+		startActivity(intent);
+	}
+
+	@Override
+	public void setNegativeButton() {
+		// TODO Auto-generated method stub
+		
+	}
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity3.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity3.java	(revision )
@@ -0,0 +1,23 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * 自定义控件2
+ * attr里面定义的控件参数的“name”  Meter关联到类名Meter，用到时在layoutxml中才能自动提示属性��
+ * @author Administrator
+ *
+ */
+public class MainActivity3 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main3);
+	}
+
+}
Index: app/src/main/res/drawable/bg_bottom_custom_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_bottom_custom_dialog.xml	(revision )
+++ app/src/main/res/drawable/bg_bottom_custom_dialog.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item><shape>
+            <gradient android:angle="270" android:endColor="#e1e1e1" android:startColor="#e1e1e1" />
+            <corners android:bottomLeftRadius="15dp" android:bottomRightRadius="15dp" />
+    </shape></item>
+</selector>
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt.java	(revision )
@@ -0,0 +1,151 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.Xfermode;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.view.View;
+import android.widget.GridLayout.Spec;
+
+public class CustomImageViewt extends View {
+	int type;
+	private static final int TYPE_CIRCLE = 0;
+	private static final int TYPE_ROUND = 1;
+
+	private Bitmap mBitmap;
+	private int mRadius;
+	private int mWidth;
+	private int mHeigh;
+
+	public CustomImageViewt(Context context, AttributeSet attrs,
+			int defStyleAttr) {
+		super(context, attrs, defStyleAttr);
+
+		TypedArray a = this.getContext().obtainStyledAttributes(attrs,
+				R.styleable.CustomImageViewt, defStyleAttr, 0);
+
+		for (int i = 0; i < a.getIndexCount(); i++) {
+			int index = a.getIndex(i);
+			switch (index) {
+			case R.styleable.CustomImageViewt_src:
+				mBitmap = BitmapFactory.decodeResource(getResources(),
+						a.getResourceId(index, 0));
+				break;
+			case R.styleable.CustomImageViewt_type:
+				type = a.getInt(index, 0);
+				break;
+			case R.styleable.CustomImageViewt_boderRadius:
+				mRadius = a.getDimensionPixelSize(index, (int) TypedValue
+						.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10f,
+								getResources().getDisplayMetrics()));
+				break;
+
+			default:
+				break;
+			}
+		}
+		a.recycle();
+	}
+
+	public CustomImageViewt(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public CustomImageViewt(Context context) {
+		this(context, null);
+		// TODO Auto-generated constructor stub
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		switch (type) {
+		case TYPE_CIRCLE:
+			int min = Math.min(mWidth,mHeigh);
+			mBitmap = Bitmap.createScaledBitmap(mBitmap, min, min, false);
+			canvas.drawBitmap(createCircleImage(mBitmap,min), 0, 0, null);
+			break;
+		case TYPE_ROUND:
+			canvas.drawBitmap(createRoundImage(), 0, 0, null);
+			break;
+		}
+	}
+
+	private Bitmap createRoundImage() {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	private Bitmap createCircleImage(Bitmap bitmap,int size) {
+		Paint paint = new Paint();
+		paint.setAntiAlias(true);
+		Bitmap target = Bitmap.createBitmap(mWidth, mHeigh, Config.ARGB_8888);
+		Canvas canvas = new Canvas(target);
+		canvas.drawCircle(size/2, size/2, size/2, paint);
+		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
+		canvas.drawBitmap(bitmap, 0, 0, paint);
+		return target;
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		//=======================width=========================
+		int mode = MeasureSpec.getMode(widthMeasureSpec);
+		int size = MeasureSpec.getSize(widthMeasureSpec);
+		
+		if(mode == MeasureSpec.EXACTLY)
+		{
+			mWidth = size;
+		}
+		else
+		{
+			int desireWidth = getPaddingLeft() + getPaddingRight()+mBitmap.getWidth();
+			if(mode == MeasureSpec.AT_MOST)
+			{
+				mWidth = Math.min(desireWidth, size);
+			}
+			else
+			{
+				mWidth = desireWidth;
+			}
+		}
+		//=======================width=========================
+		
+		//=======================heigh=========================
+		mode = MeasureSpec.getMode(heightMeasureSpec);
+		size = MeasureSpec.getSize(heightMeasureSpec);
+		if(mode == MeasureSpec.EXACTLY)
+		{
+			mHeigh = size;
+			System.out.println("heightMeasureSpec : " +heightMeasureSpec);
+			System.out.println("size : " +size);
+		}
+		else
+		{
+			int desireHeigh = getPaddingBottom() + getPaddingTop() + mBitmap.getHeight();
+			if(mode == MeasureSpec.AT_MOST)
+			{
+				mHeigh = Math.min(desireHeigh,size);
+			}
+			else
+			{
+				mHeigh = desireHeigh;
+			}
+		}
+		//=======================heigh=========================
+		
+		setMeasuredDimension(mWidth, mHeigh);
+	}
+	
+	
+
+}
Index: app/src/main/res/layout/activity_main22.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main22.xml	(revision )
+++ app/src/main/res/layout/activity_main22.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <Button 
+        android:id="@+id/button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        />
+
+</LinearLayout>
Index: app/src/main/res/layout/activity_main3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main3.xml	(revision )
+++ app/src/main/res/layout/activity_main3.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+	<com.cn.seymour.androidjack.demos.widget.Meter
+	    android:id="@+id/meter"
+	    android:layout_width="fill_parent"
+	    android:layout_height="wrap_content"
+	    app:max="100"
+	    app:incr="5"
+	    app:decr="-5"></com.cn.seymour.androidjack.demos.widget.Meter>
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity17.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity17.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity17.java	(revision )
@@ -0,0 +1,62 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.view.ViewGroup.MarginLayoutParams;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.LinearLayout.LayoutParams;
+
+
+/**
+ * 关于layoutparams嵌套的bug问题,SDK版本
+ * @author Administrator
+ *
+ */
+public class  MainActivity17 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+
+		LinearLayout ll = new LinearLayout(this);
+		ll.setBackgroundColor(Color.GRAY);
+
+		Button btn = new Button(this);
+
+		LayoutParams newParams = null;
+		LayoutParams sourceParams = new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);
+		System.out.println("sdk :" + Integer.valueOf(android.os.Build.VERSION.SDK_INT));
+		System.out.println(android.os.Build.VERSION_CODES.JELLY_BEAN);
+		if(Integer.valueOf(android.os.Build.VERSION.SDK_INT) < 19) {
+			MarginLayoutParams p = sourceParams;
+			newParams = new LayoutParams(p);
+			newParams.width = sourceParams.width;
+			newParams.height = sourceParams.height;
+		} else {
+			newParams = new LayoutParams(sourceParams);
+		}
+
+		//正规写法
+//		LayoutParams cyyListParams = new LayoutParams(Util.dip2px(this,50), Util.dip2px(this,200));
+
+//		//错误示范
+//		LayoutParams cyyListParams1 = new LayoutParams((LinearLayout.LayoutParams)new LayoutParams(Util.dip2px(this,50), Util.dip2px(this,200)));
+
+		LayoutParams c = new LayoutParams((MarginLayoutParams)(new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT)));
+
+		c.setMargins(200,2,2,2);
+		btn.setLayoutParams(c);
+		ll.addView(btn);
+
+		setContentView(ll);
+	}
+
+
+
+
+
+
+}
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/profiles_settings.xml	(revision )
+++ .idea/inspectionProfiles/profiles_settings.xml	(revision )
@@ -0,0 +1,7 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="PROJECT_PROFILE" value="Project Default" />
+    <option name="USE_PROJECT_PROFILE" value="true" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main20.xml	(revision )
+++ app/src/main/res/layout/activity_main20.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <com.cn.seymour.androidjack.demos.widget.MultiCricleView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity14.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity14.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity14.java	(revision )
@@ -0,0 +1,23 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * shader做出湖面倒影的效果
+ * @author Administrator
+ *
+ */
+public class MainActivity14 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main14);
+	}
+
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/tcpudp/UdpServerSocket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/tcpudp/UdpServerSocket.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/tcpudp/UdpServerSocket.java	(revision )
@@ -0,0 +1,48 @@
+package com.cn.seymour.androidjack.tcpudp;
+
+import java.io.IOException;
+import java.net.DatagramPacket;
+import java.net.DatagramSocket;
+import java.net.InetSocketAddress;
+import java.net.SocketException;
+
+/**
+ * ...
+ * <br>Created by seyMour on 2016/4/22.</br>
+ * <br>☞120465271@qq.com☜</br>
+ */
+public class UdpServerSocket {
+    private InetSocketAddress socketAddress;
+
+    private DatagramSocket datagramSocket;
+
+    private DatagramPacket datagramPacket;
+
+    private byte[] buffer = new byte[1024];
+
+    public UdpServerSocket(String host,int port) throws SocketException{
+        socketAddress = new InetSocketAddress(host, port);
+        datagramSocket = new DatagramSocket(socketAddress);
+    }
+
+    public String receive() throws IOException {
+        datagramPacket = new DatagramPacket(buffer, buffer.length);
+        datagramSocket.receive(datagramPacket);
+        String info = new String(datagramPacket.getData(),0,datagramPacket.getLength());
+        return info;
+    }
+
+    public void response(String info) throws IOException {
+        datagramPacket = new DatagramPacket(info.getBytes(), info.getBytes().length, new InetSocketAddress("", 0));
+        datagramPacket.setData(info.getBytes());
+        datagramSocket.send(datagramPacket);
+    }
+
+    public static void main(String args[]) throws Exception {
+        UdpServerSocket u = new UdpServerSocket("", 0);
+        while(true) {
+            u.receive();
+            u.response("hello");
+        }
+    }
+}
Index: app/src/main/res/drawable/lcontainerview_anim_loading.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/lcontainerview_anim_loading.xml	(revision )
+++ app/src/main/res/drawable/lcontainerview_anim_loading.xml	(revision )
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<animation-list xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_0"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_1"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_2"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_3"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_4"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_5"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_6"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_7"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_8"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_9"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_10"
+        android:duration="100"/>
+    <item
+        android:drawable="@drawable/lcontainerview_common_loading3_11"
+        android:duration="100"/>
+
+</animation-list>
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/LButtonBg.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/LButtonBg.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/LButtonBg.java	(revision )
@@ -0,0 +1,364 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
+import android.graphics.drawable.StateListDrawable;
+import android.util.AttributeSet;
+import android.widget.Button;
+/**
+ * 可以设置点击背景效果的线性布
+ */
+public class LButtonBg extends Button
+{
+	private Context mContext = null;
+	private Drawable mBackground = null;
+    private StateListDrawable statelistDrawable = null;
+    
+	public LButtonBg(Context context) 
+	{
+		super(context);
+		mContext = context;
+	}
+	public LButtonBg(Context context, AttributeSet attrs) 
+	{
+		super(context, attrs);
+		mContext = context;
+	}
+	
+    /**
+     * 设置点击效果,图片ID为负值时表示不设置该
+     * 
+     * @param normalImgId
+     * 					正常情况下的ID
+     * @param pressedImgId
+     * 					点击时的ID
+     * @param foucesdImgId
+     * 					获取焦点时的ID
+     * @param selectedImgId
+     * 					选中时的ID
+     * @param enabledImgId
+     * 					不可用时的ID
+     */
+	public void setBackgroundImg(int normalImgId,
+			int pressedImgId,
+			int foucesdImgId,
+			int selectedImgId,
+			int enabledImgId)
+	{
+		if(null == statelistDrawable)
+		{
+			statelistDrawable = new StateListDrawable();
+			this.setBackgroundDrawable(null);
+			 mBackground = statelistDrawable;
+		     //必须设置回调，当改变状时，会回掉该View进行invalidate()刷新操作.
+		     mBackground.setCallback(this);  
+		}
+		
+		Drawable normal = normalImgId > 0 ? mContext.getResources().getDrawable(normalImgId) : null;
+	    Drawable pressed = pressedImgId > 0 ? mContext.getResources().getDrawable(pressedImgId) : null;
+	    Drawable focus = foucesdImgId > 0 ? mContext.getResources().getDrawable(foucesdImgId) : null;
+	    Drawable enabled = enabledImgId > 0 ? mContext.getResources().getDrawable(enabledImgId) : null;
+	    Drawable selected = selectedImgId > 0 ? mContext.getResources().getDrawable(selectedImgId) : null;
+
+	    //注意该处的顺序，只要有一个状态与之相配，背景就会被换
+	    //不要把大范围放在前面了，如果sd.addState(new[]{},normal)放在第一个的话，就没有什么效果了
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+		    statelistDrawable.addState(new int[]{android.R.attr.state_pressed, android.R.attr.state_enabled}, pressed);
+	    }
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, pressed);
+	    }
+	    if(null != selected)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, selected);
+	    }
+	    if(null != enabled)
+	    {
+	    	statelistDrawable.addState(new int[]{-android.R.attr.state_enabled}, enabled);
+	    }
+	    if(null != normal)
+	    {
+	    	statelistDrawable.addState(new int[]{}, normal);
+	    }
+	}
+	
+	/**
+	 * 设置按钮背景颜色，传入10时表示不设置
+	 * 
+	 * @param normalColor
+	 * 					正常的颜
+	 * @param pressedColor
+	 * 					点击的颜
+	 * @param foucesdColor
+	 * 					获取焦点时的颜色
+	 * @param enabledColor
+	 * 					不可选时的颜
+	 * @param roundRadius
+	 * 					圆角的半
+	 * @param stokeWidth
+	 * 					边框的宽
+	 * @param stokeColor
+	 * 					边框的颜
+	 */
+	public void setBackgroundColor(int normalColor,
+			int pressedColor,
+			int foucesdColor,
+			int enabledColor,
+			int selectedColor,
+			float roundRadius,
+			int stokeWidth,
+			int stokeColor)
+	{
+		if(null == statelistDrawable)
+		{
+			statelistDrawable = new StateListDrawable();
+			this.setBackgroundDrawable(null);
+			 mBackground = statelistDrawable;
+		     //必须设置回调，当改变状时，会回掉该View进行invalidate()刷新操作.
+		     mBackground.setCallback(this);  
+		}
+		
+		GradientDrawable gdNormal = null;
+		if(normalColor != -10)
+		{
+			gdNormal = new GradientDrawable();
+			gdNormal.setColor(normalColor);
+			gdNormal.setCornerRadius(roundRadius);
+			gdNormal.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdPressed = null;
+		if(pressedColor != -10)
+		{
+			gdPressed = new GradientDrawable();
+		    gdPressed.setColor(pressedColor);
+		    gdPressed.setCornerRadius(roundRadius);
+		    gdPressed.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdFocus = null;
+		if(foucesdColor != -10)
+		{
+			gdFocus = new GradientDrawable();
+		    gdFocus.setColor(foucesdColor);
+		    gdFocus.setCornerRadius(roundRadius);
+		    gdFocus.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdEnabled = null;
+		if(enabledColor != -10)
+		{
+			gdEnabled = new GradientDrawable();
+		    gdEnabled.setColor(enabledColor);
+		    gdEnabled.setCornerRadius(roundRadius);
+		    gdEnabled.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdSelected = null;
+		if(selectedColor != -10)
+		{
+			gdSelected = new GradientDrawable();
+		    gdSelected.setColor(selectedColor);
+		    gdSelected.setCornerRadius(roundRadius);
+		    gdSelected.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		Drawable normal = gdNormal;
+	    Drawable pressed = gdPressed;
+	    Drawable focus = gdFocus;
+	    Drawable enabled = gdEnabled;
+	    Drawable selected = gdSelected;
+
+	    //注意该处的顺序，只要有一个状态与之相配，背景就会被换
+	    //不要把大范围放在前面了，如果sd.addState(new[]{},normal)放在第一个的话，就没有什么效果了
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+		    statelistDrawable.addState(new int[]{android.R.attr.state_pressed, android.R.attr.state_enabled}, pressed);
+	    }
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, pressed);
+	    }
+	    if(null != selected)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, selected);
+	    }
+	    if(null != enabled)
+	    {
+	    	statelistDrawable.addState(new int[]{-android.R.attr.state_enabled}, enabled);
+	    }
+	    if(null != normal)
+	    {
+	    	statelistDrawable.addState(new int[]{}, normal);
+	    }
+	}
+	
+	/**
+	 * 设置按钮背景颜色，传入10时表示不设置
+	 * 
+	 * @param normalColor
+	 * 					正常的颜
+	 * @param pressedColor
+	 * 					点击的颜
+	 * @param foucesdColor
+	 * 					获取焦点时的颜色
+	 * @param enabledColor
+	 * 					不可选时的颜
+	 * @param roundRadius
+	 * 					四个角的圆角的半
+	 * @param stokeWidth
+	 * 					边框的宽
+	 * @param stokeColor
+	 * 					边框的颜
+	 */
+	public void setBackgroundColor2(int normalColor,
+			int pressedColor,
+			int foucesdColor,
+			int enabledColor,
+			int selectedColor,
+			float[] roundRadius,
+			int stokeWidth,
+			int stokeColor)
+	{
+		if(null == statelistDrawable)
+		{
+			statelistDrawable = new StateListDrawable();
+			this.setBackgroundDrawable(null);
+			 mBackground = statelistDrawable;
+		     //必须设置回调，当改变状时，会回掉该View进行invalidate()刷新操作.
+		     mBackground.setCallback(this);  
+		}
+		
+		GradientDrawable gdNormal = null;
+		if(normalColor != -10)
+		{
+			gdNormal = new GradientDrawable();
+			gdNormal.setColor(normalColor);
+			gdNormal.setCornerRadii(roundRadius);
+			gdNormal.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdPressed = null;
+		if(pressedColor != -10)
+		{
+			gdPressed = new GradientDrawable();
+		    gdPressed.setColor(pressedColor);
+		    gdPressed.setCornerRadii(roundRadius);
+		    gdPressed.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdFocus = null;
+		if(foucesdColor != -10)
+		{
+			gdFocus = new GradientDrawable();
+		    gdFocus.setColor(foucesdColor);
+		    gdFocus.setCornerRadii(roundRadius);
+		    gdFocus.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdEnabled = null;
+		if(enabledColor != -10)
+		{
+			gdEnabled = new GradientDrawable();
+		    gdEnabled.setColor(enabledColor);
+		    gdEnabled.setCornerRadii(roundRadius);
+		    gdEnabled.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		GradientDrawable gdSelected = null;
+		if(selectedColor != -10)
+		{
+			gdSelected = new GradientDrawable();
+		    gdSelected.setColor(selectedColor);
+		    gdSelected.setCornerRadii(roundRadius);
+		    gdSelected.setStroke(stokeWidth, stokeColor);
+		}
+	    
+		Drawable normal = gdNormal;
+	    Drawable pressed = gdPressed;
+	    Drawable focus = gdFocus;
+	    Drawable enabled = gdEnabled;
+	    Drawable selected = gdSelected;
+
+	    //注意该处的顺序，只要有一个状态与之相配，背景就会被换
+	    //不要把大范围放在前面了，如果sd.addState(new[]{},normal)放在第一个的话，就没有什么效果了
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+		    statelistDrawable.addState(new int[]{android.R.attr.state_pressed, android.R.attr.state_enabled}, pressed);
+	    }
+	    if(null != focus)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_focused}, focus);
+	    }
+	    if(null != pressed)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, pressed);
+	    }
+	    if(null != selected)
+	    {
+	    	statelistDrawable.addState(new int[]{android.R.attr.state_pressed}, selected);
+	    }
+	    if(null != enabled)
+	    {
+	    	statelistDrawable.addState(new int[]{-android.R.attr.state_enabled}, enabled);
+	    }
+	    if(null != normal)
+	    {
+	    	statelistDrawable.addState(new int[]{}, normal);
+	    }
+	}
+	
+    @Override
+    protected void drawableStateChanged()
+    {
+        Drawable d = mBackground;
+        if (d != null && d.isStateful())
+        {
+        	//获取新状态下的Drawable
+            d.setState(getDrawableState());
+        }
+        super.drawableStateChanged();
+        this.setBackground(d);
+    }
+    /**
+     * 验证图片是否相等 ,在invalidateDrawable()会调用此方法，我们需要重写该方法
+     */
+    @Override
+    protected boolean verifyDrawable(Drawable who)
+    {
+        return who == mBackground || super.verifyDrawable(who);
+    }
+    
+    /**
+     * 背景的状态变化会调用此方
+     */
+    @Override
+    public void refreshDrawableState() 
+    {
+    	super.refreshDrawableState();
+    	drawableStateChanged();
+    }
+}
Index: app/src/main/res/layout/meter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/meter.xml	(revision )
+++ app/src/main/res/layout/meter.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="horizontal" >
+    
+    <ImageButton android:id="@+id/decr"  
+            android:layout_height="wrap_content"  
+            android:layout_width="wrap_content"  
+            android:scaleType="fitCenter"  
+            android:src="@drawable/webview_back_img"  
+        />  
+        <ProgressBar android:id="@+id/bar"  
+            style="?android:attr/progressBarStyleHorizontal"  
+            android:layout_width="wrap_content"  
+            android:layout_height="wrap_content"  
+            android:layout_weight="1"  
+            android:layout_gravity="center_vertical"  
+        />  
+        <ImageButton android:id="@+id/incr"  
+            android:layout_height="wrap_content"  
+            android:layout_width="wrap_content"  
+            android:scaleType="fitCenter"  
+            android:src="@drawable/webview_before_img"  
+        />  
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/WheelView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/WheelView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/WheelView.java	(revision )
@@ -0,0 +1,1063 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import java.util.ArrayList;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.LinearGradient;
+import android.graphics.Paint;
+import android.graphics.Rect;
+import android.graphics.Shader.TileMode;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+
+/**
+ * WheelView滚轮
+ * 
+ * @author JiangPing
+ */
+public class WheelView extends View
+{
+	/**
+	 * 按下的坐标
+	 */
+	private int downY;
+	/**
+	 * 按下的时间
+	 */
+	private long downTime = 0;
+	/**
+	 * 短促移动
+	 */
+	private long goonTime = 200;
+	/**
+	 * 短促移动距离
+	 */
+	private int goonDistence = 100;
+	/**
+	 * 选择的内容
+	 */
+	private ArrayList<ItemObject> itemList = new ArrayList<ItemObject>();
+	/**
+	 * 设置数据
+	 */
+	private ArrayList<String> dataList = new ArrayList<String>();
+
+	/**
+	 * 控件宽度
+	 */
+	private float controlWidth;
+
+	/**
+	 * 控件高度
+	 */
+	private float controlHeight;
+	/**
+	 * 是否滑动中
+	 */
+	private boolean isScrolling = false;
+
+	/**
+	 * 画线画笔
+	 */
+	private Paint linePaint;
+	/**
+	 * 线的默认颜色
+	 */
+	private int lineColor = 0xffeeeeee;
+	/**
+	 * 线的默认宽度
+	 */
+	private float lineWidth = 2f;
+	/**
+	 * 默认字体
+	 */
+	private float normalFont = 14.0f;
+	/**
+	 * 选中的时候字体
+	 */
+	private float selectedFont = 22.0f;
+	/**
+	 * 单元格高度
+	 */
+	private int unitHeight = 50;
+	/**
+	 * 显示多少个内容
+	 */
+	private int itemNumber = 5;
+	/**
+	 * 默认字体颜色
+	 */
+	private int normalColor = 0xff000000;
+	/**
+	 * 选中时候的字体颜色
+	 */
+	private int selectedColor = 0xffff0000;
+	/**
+	 * 蒙板高度
+	 */
+	private float maskHight = unitHeight;
+	/**
+	 * 选择监听
+	 */
+	private OnSelectListener onSelectListener;
+	/**
+	 * 是否可用
+	 */
+	private boolean isEnable = true;
+	/**
+	 * 刷新界面
+	 */
+	private static final int REFRESH_VIEW = 0x001;
+	/**
+	 * 移动距离
+	 */
+	private static final int MOVE_NUMBER = 10;
+	/**
+	 * 是否允许选空
+	 */
+	private boolean noEmpty = true;
+
+	/**
+	 * 正在修改数据，避免ConcurrentModificationException异常
+	 */
+	private boolean isClearing = false;
+	private Context context;
+
+	public WheelView(Context context, AttributeSet attrs, int defStyle)
+	{
+		super(context, attrs, defStyle);
+		this.context = context;
+		init(context, attrs);
+		initData();
+	}
+
+	public WheelView(Context context, AttributeSet attrs)
+	{
+		super(context, attrs);
+		this.context = context;
+		init(context, attrs);
+		initData();
+	}
+
+	public WheelView(Context context)
+	{
+		super(context);
+		this.context = context;
+		initData();
+	}
+
+	@Override
+	public boolean onTouchEvent(MotionEvent event)
+	{
+
+		if (!isEnable)
+			return true;
+		int y = (int) event.getY();
+		switch (event.getAction())
+		{
+			case MotionEvent.ACTION_DOWN:
+				isScrolling = true;
+				downY = (int) event.getY();
+				downTime = System.currentTimeMillis();
+				break;
+			case MotionEvent.ACTION_MOVE:
+				actionMove(y - downY);
+				onSelectListener();
+				break;
+			case MotionEvent.ACTION_UP:
+				int move = Math.abs(y - downY);
+				// 判断段时间移动的距离
+				if (System.currentTimeMillis() - downTime < goonTime && move > goonDistence)
+				{
+					goonMove(y - downY);
+				} else
+				{
+					actionUp(y - downY);
+				}
+				noEmpty();
+				isScrolling = false;
+				break;
+			default:
+				break;
+		}
+		return true;
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas)
+	{
+		super.onDraw(canvas);
+
+		drawLine(canvas);
+		drawList(canvas);
+		drawMask(canvas);
+	}
+
+	private synchronized void drawList(Canvas canvas)
+	{
+		if (isClearing)
+			return;
+		try
+		{
+
+			for (int i = 0; i < itemList.size(); i++)
+			{
+				itemList.get(i).drawSelf(canvas);
+			}
+
+		} catch (Exception e)
+		{
+		}
+
+	}
+
+	@Override
+	protected void onLayout(boolean changed, int left, int top, int right, int bottom)
+	{
+		super.onLayout(changed, left, top, right, bottom);
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
+	{
+		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+		controlWidth = getWidth();
+		if (controlWidth != 0)
+		{
+			setMeasuredDimension(getWidth(), itemNumber * unitHeight);
+			controlWidth = getWidth();
+		}
+
+	}
+
+	/**
+	 * 继续移动一定距离
+	 */
+	private synchronized void goonMove(final int move)
+	{
+		new Thread(new Runnable()
+		{
+
+			@Override
+			public void run()
+			{
+				int distence = 0;
+				while (distence < unitHeight * MOVE_NUMBER)
+				{
+					try
+					{
+						Thread.sleep(5);
+					} catch (InterruptedException e)
+					{
+						e.printStackTrace();
+					}
+					actionThreadMove(move > 0 ? distence : distence * (-1));
+					distence += 10;
+
+				}
+				actionUp(move > 0 ? distence - 10 : distence * (-1) + 10);
+				noEmpty();
+			}
+		}).start();
+	}
+
+	/**
+	 * 不能为空，必须有选项
+	 */
+	private void noEmpty()
+	{
+		if (!noEmpty)
+			return;
+		for (ItemObject item : itemList)
+		{
+			if (item.isSelected())
+				return;
+		}
+		int move = (int) itemList.get(0).moveToSelected();
+		if (move < 0)
+		{
+			defaultMove(move);
+		} else
+		{
+			defaultMove((int) itemList.get(itemList.size() - 1).moveToSelected());
+		}
+		for (ItemObject item : itemList)
+		{
+			if (item.isSelected())
+			{
+				if (onSelectListener != null)
+					onSelectListener.endSelect(WheelView.this, item.id, item.itemText);
+				break;
+			}
+		}
+	}
+
+	/**
+	 * 初始化数据
+	 */
+	private void initData()
+	{
+		isClearing = true;
+		itemList.clear();
+		for (int i = 0; i < dataList.size(); i++)
+		{
+			ItemObject itmItemObject = new ItemObject();
+			itmItemObject.id = i;
+			itmItemObject.itemText = dataList.get(i);
+			itmItemObject.x = 0;
+			itmItemObject.y = i * unitHeight;
+			itemList.add(itmItemObject);
+		}
+		isClearing = false;
+	}
+
+	/**
+	 * 移动的时候
+	 *
+	 * @param move
+	 */
+	private void actionMove(int move)
+	{
+		for (ItemObject item : itemList)
+		{
+			item.move(move);
+		}
+		invalidate();
+	}
+
+	/**
+	 * 移动，线程中调用
+	 *
+	 * @param move
+	 */
+	private void actionThreadMove(int move)
+	{
+		for (ItemObject item : itemList)
+		{
+			item.move(move);
+		}
+		Message rMessage = new Message();
+		rMessage.what = REFRESH_VIEW;
+		handler.sendMessage(rMessage);
+	}
+
+	/**
+	 * 松开的时候
+	 *
+	 * @param move
+	 */
+	private void actionUp(int move)
+	{
+		int newMove = 0;
+		if (move > 0)
+		{
+			for (int i = 0; i < itemList.size(); i++)
+			{
+				if (itemList.get(i).isSelected())
+				{
+					newMove = (int) itemList.get(i).moveToSelected();
+					if (onSelectListener != null)
+						onSelectListener.endSelect(WheelView.this, itemList.get(i).id, itemList.get(i).itemText);
+					break;
+				}
+			}
+		} else
+		{
+			for (int i = itemList.size() - 1; i >= 0; i--)
+			{
+				if (itemList.get(i).isSelected())
+				{
+					newMove = (int) itemList.get(i).moveToSelected();
+					if (onSelectListener != null)
+						onSelectListener.endSelect(WheelView.this, itemList.get(i).id, itemList.get(i).itemText);
+					break;
+				}
+			}
+		}
+		for (ItemObject item : itemList)
+		{
+			item.newY(move + 0);
+		}
+		slowMove(newMove);
+		Message rMessage = new Message();
+		rMessage.what = REFRESH_VIEW;
+		handler.sendMessage(rMessage);
+
+	}
+
+	/**
+	 * 缓慢移动
+	 *
+	 * @param move
+	 */
+	private synchronized void slowMove(final int move)
+	{
+		new Thread(new Runnable()
+		{
+
+			@Override
+			public void run()
+			{
+				// 判断政府
+				int m = move > 0 ? move : move * (-1);
+				int i = move > 0 ? 1 : (-1);
+				// 移动速度
+				int speed = 1;
+				while (true)
+				{
+					m = m - speed;
+					if (m <= 0)
+					{
+						for (ItemObject item : itemList)
+						{
+							item.newY(m * i);
+						}
+						Message rMessage = new Message();
+						rMessage.what = REFRESH_VIEW;
+						handler.sendMessage(rMessage);
+						try
+						{
+							Thread.sleep(2);
+						} catch (InterruptedException e)
+						{
+							e.printStackTrace();
+						}
+						break;
+					}
+					for (ItemObject item : itemList)
+					{
+						item.newY(speed * i);
+					}
+					Message rMessage = new Message();
+					rMessage.what = REFRESH_VIEW;
+					handler.sendMessage(rMessage);
+					try
+					{
+						Thread.sleep(2);
+					} catch (InterruptedException e)
+					{
+						e.printStackTrace();
+					}
+				}
+				for (ItemObject item : itemList)
+				{
+					if (item.isSelected())
+					{
+						if (onSelectListener != null)
+							onSelectListener.endSelect(WheelView.this, item.id, item.itemText);
+						break;
+					}
+				}
+
+			}
+		}).start();
+	}
+
+	/**
+	 * 移动到默认位置
+	 *
+	 * @param move
+	 */
+	private void defaultMove(int move)
+	{
+		for (ItemObject item : itemList)
+		{
+			item.newY(move);
+		}
+		Message rMessage = new Message();
+		rMessage.what = REFRESH_VIEW;
+		handler.sendMessage(rMessage);
+	}
+
+	/**
+	 * 滑动监听
+	 */
+	private void onSelectListener()
+	{
+		if (onSelectListener == null)
+			return;
+		for (ItemObject item : itemList)
+		{
+			if (item.isSelected())
+			{
+				onSelectListener.selecting(WheelView.this, item.id, item.itemText);
+			}
+		}
+	}
+
+	private int canid;
+
+	/**
+	 * 绘制线条
+	 *
+	 * @param canvas
+	 */
+	private void drawLine(Canvas canvas)
+	{
+
+		if (linePaint == null)
+		{
+			linePaint = new Paint();
+			linePaint.setColor(lineColor);
+			linePaint.setAntiAlias(true);
+			linePaint.setStrokeWidth(lineWidth);
+		}
+
+		canvas.drawLine(0, controlHeight / 2 - unitHeight / 2 - dip2px(getLineHeight()), controlWidth, controlHeight / 2 - unitHeight / 2 - dip2px(getLineHeight()), linePaint);
+		canvas.drawLine(0, controlHeight / 2 + unitHeight / 2 + dip2px(getLineHeight()), controlWidth, controlHeight / 2 + unitHeight / 2 + dip2px(getLineHeight()), linePaint);
+	}
+
+	private int lineHeight = 4;
+
+	private int dip2px(float dipValue)
+	{
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int) (dipValue * scale + 0.5f);
+	}
+
+	/**
+	 * 绘制遮盖板
+	 *
+	 * @param canvas
+	 */
+	private void drawMask(Canvas canvas)
+	{
+		LinearGradient lg = new LinearGradient(0, 0, 0, maskHight, 0x00f2f2f2, 0x00f2f2f2, TileMode.MIRROR);
+		Paint paint = new Paint();
+		paint.setShader(lg);
+		canvas.drawRect(0, 0, controlWidth, maskHight, paint);
+
+		LinearGradient lg2 = new LinearGradient(0, controlHeight - maskHight, 0, controlHeight, 0x00f2f2f2, 0x00f2f2f2, TileMode.MIRROR);
+		Paint paint2 = new Paint();
+		paint2.setShader(lg2);
+		canvas.drawRect(0, controlHeight - maskHight, controlWidth, controlHeight, paint2);
+	}
+
+	/**
+	 * 初始化，获取设置的属性
+	 *
+	 * @param context
+	 * @param attrs
+	 */
+	private void init(Context context, AttributeSet attrs)
+	{
+
+		controlHeight = itemNumber * unitHeight;
+
+	}
+
+	/**
+	 * 设置数据 （第一次）
+	 *
+	 * @param data
+	 */
+	public void setData(ArrayList<String> data)
+	{
+		this.dataList = data;
+		initData();
+	}
+
+	/**
+	 * 重置数据
+	 *
+	 * @param data
+	 */
+	public void resetData(ArrayList<String> data)
+	{
+		setData(data);
+		invalidate();
+	}
+
+	/**
+	 * 获取返回项 id
+	 *
+	 * @return
+	 */
+	public int getSelected()
+	{
+		for (ItemObject item : itemList)
+		{
+			if (item.isSelected())
+				return item.id;
+		}
+		return -1;
+	}
+
+	/**
+	 * 获取返回的内容
+	 *
+	 * @return
+	 */
+	public String getSelectedText()
+	{
+		for (ItemObject item : itemList)
+		{
+			if (item.isSelected())
+			{
+				return item.itemText;
+			}
+		}
+
+		if (canid > (itemList.size() / 2))
+		{
+			return itemList.get(itemList.size() - 1).itemText;
+		} else
+		{
+			return itemList.get(0).itemText;
+		}
+	}
+
+	/**
+	 * 是否正在滑动
+	 *
+	 * @return
+	 */
+	public boolean isScrolling()
+	{
+		return isScrolling;
+	}
+
+	/**
+	 * 是否可用
+	 *
+	 * @return
+	 */
+	public boolean isEnable()
+	{
+		return isEnable;
+	}
+
+	/**
+	 * 设置是否可用
+	 *
+	 * @param isEnable
+	 */
+	public void setEnable(boolean isEnable)
+	{
+		this.isEnable = isEnable;
+	}
+
+	/**
+	 * 设置默认选项
+	 *
+	 * @param index
+	 */
+	public void setDefault(int index)
+	{
+		if (index > itemList.size() - 1)
+			return;
+		float move = itemList.get(index).moveToSelected();
+		defaultMove((int) move);
+	}
+
+	/**
+	 * 获取列表大小
+	 *
+	 * @return
+	 */
+	public int getListSize()
+	{
+		if (itemList == null)
+			return 0;
+		return itemList.size();
+	}
+
+	/**
+	 * 获取某项的内容
+	 *
+	 * @param index
+	 * @return
+	 */
+	public String getItemText(int index)
+	{
+		if (itemList == null)
+			return "";
+		return itemList.get(index).itemText;
+	}
+
+	/**
+	 * 监听
+	 *
+	 * @param onSelectListener
+	 */
+	public void setOnSelectListener(OnSelectListener onSelectListener)
+	{
+		this.onSelectListener = onSelectListener;
+	}
+
+	@SuppressLint("HandlerLeak")
+	Handler handler = new Handler()
+	{
+
+		@Override
+		public void handleMessage(Message msg)
+		{
+			super.handleMessage(msg);
+			switch (msg.what)
+			{
+				case REFRESH_VIEW:
+					invalidate();
+					break;
+				default:
+					break;
+			}
+		}
+
+	};
+
+	/**
+	 * 单条内容
+	 *
+	 * @author JiangPing
+	 */
+	private class ItemObject
+	{
+		/**
+		 * id
+		 */
+		public int id = 0;
+		/**
+		 * 内容
+		 */
+		public String itemText = "";
+		/**
+		 * x坐标
+		 */
+		public int x = 0;
+		/**
+		 * y坐标
+		 */
+		public int y = 0;
+		/**
+		 * 移动距离
+		 */
+		public int move = 0;
+		/**
+		 * 字体画笔
+		 */
+		private Paint textPaint;
+		/**
+		 * 字体范围矩形
+		 */
+		private Rect textRect;
+
+		public ItemObject()
+		{
+			super();
+		}
+
+		/**
+		 * 绘制自身
+		 *
+		 * @param canvas
+		 */
+		public void drawSelf(Canvas canvas)
+		{
+			if (textPaint == null)
+			{
+				textPaint = new Paint();
+				textPaint.setAntiAlias(true);
+			}
+
+			if (textRect == null)
+				textRect = new Rect();
+
+			// 判断是否被选择
+			if (isSelected())
+			{
+				textPaint.setColor(selectedColor);
+				// 获取距离标准位置的距离
+				float moveToSelect = moveToSelected();
+				moveToSelect = moveToSelect > 0 ? moveToSelect : moveToSelect * (-1);
+				// 计算当前字体大小
+				float textSize = (float) normalFont + ((float) (selectedFont - normalFont) * (1.0f - (float) moveToSelect / (float) unitHeight));
+				textPaint.setTextSize(textSize);
+			} else
+			{
+				textPaint.setColor(normalColor);
+				textPaint.setTextSize(normalFont);
+			}
+
+			// 返回包围整个字符串的最小的一个Rect区域
+			textPaint.getTextBounds(itemText, 0, itemText.length(), textRect);
+			// 判断是否可视
+			if (!isInView())
+				return;
+			// 绘制内容
+			canvas.drawText(itemText, x + controlWidth / 2 - textRect.width() / 2, y + move + unitHeight / 2 + textRect.height() / 2, textPaint);
+			// 记录最后一个绘制的id
+			canid = id;
+		}
+
+		/**
+		 * 是否在可视界面内
+		 *
+		 * @return
+		 */
+		public boolean isInView()
+		{
+			if (y + move > controlHeight || (y + move + unitHeight / 2 + textRect.height() / 2) < 0)
+				return false;
+			return true;
+		}
+
+		/**
+		 * 移动距离
+		 *
+		 * @param _move
+		 */
+		public void move(int _move)
+		{
+			this.move = _move;
+		}
+
+		/**
+		 * 设置新的坐标
+		 *
+		 * @param _move
+		 */
+		public void newY(int _move)
+		{
+			this.move = 0;
+			this.y = y + _move;
+		}
+
+		/**
+		 * 判断是否在选择区域内
+		 *
+		 * @return
+		 */
+		public boolean isSelected()
+		{
+			if ((y + move) >= controlHeight / 2 - unitHeight / 2 + dip2px(4) && (y + move) <= controlHeight / 2 + unitHeight / 2 - dip2px(4))
+			{
+				return true;
+			}
+			if ((y + move + unitHeight) >= controlHeight / 2 - unitHeight / 2 + dip2px(4) && (y + move + unitHeight) <= controlHeight / 2 + unitHeight / 2 - dip2px(4))
+			{
+				return true;
+			}
+
+			if ((y + move) <= controlHeight / 2 - unitHeight / 2 + dip2px(4) && (y + move + unitHeight) >= controlHeight / 2 + unitHeight / 2 - dip2px(4))
+			{
+				return true;
+			}
+			return false;
+		}
+
+		/**
+		 * 获取移动到标准位置需要的距离
+		 */
+		public float moveToSelected()
+		{
+			return (controlHeight / 2 - unitHeight / 2) - (y + move);
+		}
+	}
+
+	/**
+	 * 选择监听
+	 *
+	 * @author JiangPing
+	 */
+	public interface OnSelectListener
+	{
+		/**
+		 * 结束选择
+		 *
+		 * @param id
+		 * @param text
+		 */
+		public void endSelect(View v, int id, String text);
+
+		/**
+		 * 选中的内容
+		 *
+		 * @param id
+		 * @param text
+		 */
+		public void selecting(View v, int id, String text);
+
+	}
+
+	public long getGoonTime()
+	{
+		return goonTime;
+	}
+
+	public void setGoonTime(long goonTime)
+	{
+		this.goonTime = goonTime;
+	}
+
+	public int getGoonDistence()
+	{
+		return goonDistence;
+	}
+
+	public void setGoonDistence(int goonDistence)
+	{
+		this.goonDistence = goonDistence;
+	}
+
+	public float getControlWidth()
+	{
+		return controlWidth;
+	}
+
+	public void setControlWidth(float controlWidth)
+	{
+		this.controlWidth = controlWidth;
+	}
+
+	public float getControlHeight()
+	{
+		return controlHeight;
+	}
+
+	public void setControlHeight(float controlHeight)
+	{
+		this.controlHeight = controlHeight;
+	}
+
+	public Paint getLinePaint()
+	{
+		return linePaint;
+	}
+
+	public void setLinePaint(Paint linePaint)
+	{
+		this.linePaint = linePaint;
+	}
+
+	public int getLineColor()
+	{
+		return lineColor;
+	}
+
+	public void setLineColor(int lineColor)
+	{
+		this.lineColor = lineColor;
+	}
+
+	public float getLineWidth()
+	{
+		return lineWidth;
+	}
+
+	public void setLineWidth(float lineWidth)
+	{
+		this.lineWidth = lineWidth;
+	}
+
+	public float getNormalFont()
+	{
+		return normalFont;
+	}
+
+	public void setNormalFont(float normalFont)
+	{
+		this.normalFont = normalFont;
+	}
+
+	public float getSelectedFont()
+	{
+		return selectedFont;
+	}
+
+	public void setSelectedFont(float selectedFont)
+	{
+		this.selectedFont = selectedFont;
+	}
+
+	public int getUnitHeight()
+	{
+		return unitHeight;
+	}
+
+	public void setUnitHeight(int unitHeight)
+	{
+		this.unitHeight = unitHeight;
+	}
+
+	public int getItemNumber()
+	{
+		return itemNumber;
+	}
+
+	public void setItemNumber(int itemNumber)
+	{
+		this.itemNumber = itemNumber;
+	}
+
+	public int getNormalColor()
+	{
+		return normalColor;
+	}
+
+	public void setNormalColor(int normalColor)
+	{
+		this.normalColor = normalColor;
+	}
+
+	public int getSelectedColor()
+	{
+		return selectedColor;
+	}
+
+	public void setSelectedColor(int selectedColor)
+	{
+		this.selectedColor = selectedColor;
+	}
+
+	public float getMaskHight()
+	{
+		return maskHight;
+	}
+
+	public void setMaskHight(float maskHight)
+	{
+		this.maskHight = maskHight;
+	}
+
+	public boolean isClearing()
+	{
+		return isClearing;
+	}
+
+	public void setClearing(boolean isClearing)
+	{
+		this.isClearing = isClearing;
+	}
+
+	public OnSelectListener getOnSelectListener()
+	{
+		return onSelectListener;
+	}
+
+	public static int getMoveNumber()
+	{
+		return MOVE_NUMBER;
+	}
+
+	public void setScrolling(boolean isScrolling)
+	{
+		this.isScrolling = isScrolling;
+	}
+
+	public int getLineHeight()
+	{
+		return lineHeight;
+	}
+
+	public void setLineHeight(int lineHeight)
+	{
+		this.lineHeight = lineHeight;
+	}
+
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity101.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity101.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity101.java	(revision )
@@ -0,0 +1,110 @@
+package com.cn.seymour.androidjack.demos;
+
+import java.util.Calendar;
+import java.util.TimeZone;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.drawable.BitmapDrawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.cn.seymour.androidjack.R;
+
+public class MainActivity101 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		LinearLayout ll = new LinearLayout(this);
+		ll.addView(new myClock(this,"GMT+8:00"));
+		
+		setContentView(ll);
+	}
+
+	
+	class myClock extends View{
+		BitmapDrawable mbitmapbottom;
+		BitmapDrawable mbitmapHour;
+		BitmapDrawable mbitmapMintue;
+		BitmapDrawable mbitmapSecond;
+		
+		int Hour;
+		int Minute;
+		int Second;
+		float HourRatote;
+		float MinuteRatote;
+		float SecondRatote;
+		
+		String tiemZone;
+		
+		Handler handler;
+		
+		public myClock(Context context,String timezone) {
+			super(context);
+			this.tiemZone = timezone;
+			mbitmapbottom = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_dial);
+			mbitmapHour = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_hour);
+			mbitmapMintue = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_minute);
+			mbitmapSecond = (BitmapDrawable)getResources().getDrawable(R.drawable.android_clock_minute);
+			
+			
+			handler = new Handler();
+			handler.post(run);
+		}
+
+		Runnable run = new Runnable() {
+			
+			@Override
+			public void run() {
+				postInvalidate();
+				handler.postDelayed(run, 1000);
+			}
+		};
+		
+		@Override
+		protected void onDraw(Canvas canvas) {
+			super.onDraw(canvas);
+			
+			Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(tiemZone));
+			Hour = cal.get(Calendar.HOUR);
+			Minute = cal.get(Calendar.MINUTE);
+			Second = cal.get(Calendar.SECOND);
+			HourRatote = Hour*30f + Minute* 0.5f +180;
+			MinuteRatote = Minute * 6f + 180 ;
+			SecondRatote = Second * 6f  +180;
+			
+			System.out.println(Hour +"  " + Minute + "  " + Second);
+			System.out.println(HourRatote +"  " + MinuteRatote + "  " + SecondRatote);
+			canvas.save();
+			mbitmapbottom.setBounds(0, 0, mbitmapbottom.getIntrinsicWidth(), mbitmapbottom.getIntrinsicHeight());
+			mbitmapbottom.draw(canvas);
+			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(HourRatote, mbitmapbottom.getIntrinsicWidth()/2, mbitmapbottom.getIntrinsicHeight()/2);
+			mbitmapHour.setBounds(mbitmapbottom.getIntrinsicWidth()/2 - mbitmapHour.getIntrinsicWidth()/2, mbitmapbottom.getIntrinsicHeight()/2, mbitmapbottom.getIntrinsicWidth()/2 + mbitmapHour.getIntrinsicWidth()/2,mbitmapbottom.getIntrinsicHeight()/2+mbitmapHour.getIntrinsicHeight());
+			mbitmapHour.draw(canvas);
+			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(MinuteRatote, mbitmapbottom.getIntrinsicWidth()/2, mbitmapbottom.getIntrinsicHeight()/2);
+			mbitmapMintue.setBounds(mbitmapbottom.getIntrinsicWidth()/2 - mbitmapMintue.getIntrinsicWidth()/2, mbitmapbottom.getIntrinsicHeight()/2, mbitmapbottom.getIntrinsicWidth()/2 + mbitmapMintue.getIntrinsicWidth()/2,mbitmapbottom.getIntrinsicHeight()/2+mbitmapMintue.getIntrinsicHeight());
+			mbitmapMintue.draw(canvas);
+			canvas.restore();
+			
+			canvas.save();
+			canvas.rotate(SecondRatote, mbitmapbottom.getIntrinsicWidth()/2, mbitmapbottom.getIntrinsicHeight()/2);
+			mbitmapSecond.setBounds(mbitmapbottom.getIntrinsicWidth()/2 - mbitmapSecond.getIntrinsicWidth()/2, mbitmapbottom.getIntrinsicHeight()/2, mbitmapbottom.getIntrinsicWidth()/2 + mbitmapSecond.getIntrinsicWidth()/2,mbitmapbottom.getIntrinsicHeight()/2+mbitmapSecond.getIntrinsicHeight()+100);
+			mbitmapSecond.draw(canvas);
+			canvas.restore();
+
+		}
+		
+	}
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt1.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageViewt1.java	(revision )
@@ -0,0 +1,149 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.RectF;
+import android.graphics.drawable.BitmapDrawable;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.view.View;
+
+public class CustomImageViewt1 extends View {
+	private final static int TYPE_CIRCLE = 0;
+	private final static int TYPE_ROUND = 1;
+
+	Bitmap mbitmap;
+	int mtype;
+	int mRadius;
+	int mWidth;
+	int mHeidh;
+
+	public CustomImageViewt1(Context context, AttributeSet attrs,
+			int defStyleAttr) {
+		super(context, attrs, defStyleAttr);
+		
+		TypedArray a = this.getContext().obtainStyledAttributes(attrs, R.styleable.CustomImageView, defStyleAttr, 0);
+		
+		for(int i = 0; i < a.getIndexCount();i++)
+		{
+			int index = a.getIndex(i);
+			switch (index) {
+			case R.styleable.CustomImageView_src:
+				BitmapDrawable m = (BitmapDrawable)getResources().getDrawable(a.getResourceId(index, 0));
+//				mbitmap = BitmapFactory.decodeResource(getResources(), a.getResourceId(index, 0));
+				mbitmap = m.getBitmap();
+				break;
+			case R.styleable.CustomImageView_type:
+				mtype = a.getInt(index, 0);
+				break;
+			case R.styleable.CustomImageView_boderRadius:
+				mRadius = a.getDimensionPixelSize(index, (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10f, getResources().getDisplayMetrics()));
+				break;
+			default:
+				break;
+			}
+		}
+	}
+
+	public CustomImageViewt1(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public CustomImageViewt1(Context context) {
+		this(context, null);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		super.onDraw(canvas);
+		switch (mtype) {
+		case TYPE_CIRCLE:
+			int min = Math.min(mHeidh, mWidth);
+			mbitmap = Bitmap.createScaledBitmap(mbitmap, min, min, false);
+			canvas.drawBitmap(createCircle(mbitmap,min), 0, 0, null);
+			break;
+		case TYPE_ROUND:
+			canvas.drawBitmap(createRound(mbitmap), 0, 0, null);
+			break;
+		default:
+			break;
+		}
+	}
+
+	private Bitmap createRound(Bitmap mbitmap2) {
+		Paint paint = new Paint();
+		paint.setAntiAlias(true);
+		Matrix matrix = new Matrix();
+		matrix.postScale(mWidth/(float)mbitmap2.getWidth(), mHeidh/(float)mbitmap2.getHeight());
+		mbitmap2 = Bitmap.createBitmap(mbitmap2, 0, 0, mbitmap2.getWidth(),mbitmap2.getHeight(), matrix, false);
+		Bitmap target = Bitmap.createBitmap(mWidth, mHeidh, Config.ARGB_8888);
+		Canvas canvas = new Canvas(target);
+		RectF rect = new RectF(0, 0, mbitmap2.getWidth(), mbitmap2.getHeight());
+		canvas.drawRoundRect(rect, mRadius, mRadius, paint);
+		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
+		canvas.drawBitmap(mbitmap2, 0, 0, paint);
+		return target;
+	}
+
+	private Bitmap createCircle(Bitmap mbitmap2,int min) {
+		Paint paint = new Paint();
+		paint.setAntiAlias(true);
+		Bitmap target = Bitmap.createBitmap(min, min, Config.ARGB_8888);
+		Canvas canvas = new Canvas(target);
+		canvas.drawCircle(min/2, min/2, min/2, paint);
+		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
+		canvas.drawBitmap(mbitmap2, 0, 0, paint);
+		return target;
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+		int size = MeasureSpec.getSize(widthMeasureSpec);
+		int mode = MeasureSpec.getMode(widthMeasureSpec);
+		if(mode == MeasureSpec.EXACTLY)
+		{
+			mWidth = size;
+		}
+		else{
+			if(mode == MeasureSpec.AT_MOST)
+			{
+				mWidth = Math.min(mbitmap.getWidth() + getPaddingLeft() + getPaddingRight(), mbitmap.getWidth());
+				
+			}
+			else
+			{
+				mWidth = mbitmap.getWidth() + getPaddingLeft() + getPaddingRight();
+			}
+		}
+		
+		size = MeasureSpec.getSize(heightMeasureSpec);
+		mode = MeasureSpec.getMode(heightMeasureSpec);
+		if(mode == MeasureSpec.EXACTLY)
+		{
+			mHeidh = size;
+		}
+		else
+		{
+			if(mode == MeasureSpec.AT_MOST)
+			{
+				mHeidh = Math.min(mbitmap.getHeight() + getPaddingTop() + getPaddingBottom(),mbitmap.getHeight());
+			}
+			else
+			{
+				mHeidh = mbitmap.getHeight() + getPaddingTop() + getPaddingBottom();
+			}
+		}
+		
+		setMeasuredDimension(mWidth, mHeidh);
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity5.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity5.java	(revision )
@@ -0,0 +1,54 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Color;
+import android.graphics.Matrix;
+import android.os.Bundle;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * java代码控制图片
+ * @author Administrator
+ *
+ */
+public class MainActivity5 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		LayoutInflater layoutInFlater = LayoutInflater.from(this);
+		LinearLayout view = (LinearLayout)layoutInFlater.inflate(R.layout.activity_main5, null);
+		view.setOrientation(LinearLayout.VERTICAL);
+		
+		TextView t = new TextView(this);
+		t.setText("d");
+		view.addView(t);
+		
+		Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.icon);
+		Matrix matrix = new Matrix();
+		matrix.postScale(0.5f, 0.5f);
+		bitmap = Bitmap.createBitmap(bitmap,0,0,bitmap.getWidth(),bitmap.getHeight(),matrix,true);
+		ImageView imageView = new ImageView(this);
+		imageView.setImageBitmap(bitmap);
+		view.addView(imageView);
+
+		TextView t1 = new TextView(this);
+		t1.setText("dxxxxxxxxxxxxxxxxxx");
+		view.addView(t1);
+		
+		
+		view.setBackgroundColor(Color.parseColor("#125678"));
+		setContentView(view);
+	}
+
+	
+}
Index: app/src/main/res/layout/activity_main5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main5.xml	(revision )
+++ app/src/main/res/layout/activity_main5.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/linearlayout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+
+    <ImageView 
+        android:id="@+id/img"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:src="@drawable/icon"/>
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity2.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity2.java	(revision )
@@ -0,0 +1,30 @@
+package com.cn.seymour.androidjack.demos;
+
+import com.cn.seymour.androidjack.R;
+import com.cn.seymour.androidjack.demos.widget.ImageBtnWithText;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.LinearLayout;
+
+/**
+ * �自定义控件
+ * 涉及到activity_textbutton.xml attr.xml textbutton.xml以及自定义控件的类
+ * @author Administrator
+ *
+ */
+public class MainActivity2 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_textbutton);
+		View view = (LinearLayout)findViewById(R.layout.activity_textbutton);
+		ImageBtnWithText widget = (ImageBtnWithText)findViewById(R.id.widget);
+		
+		widget.setTextViewValue("cccccccccccccccccccc");
+	}
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/tcpudp/TcpServerSocket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/tcpudp/TcpServerSocket.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/tcpudp/TcpServerSocket.java	(revision )
@@ -0,0 +1,40 @@
+package com.cn.seymour.androidjack.tcpudp;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+/**
+ * ...
+ * <br>Created by seyMour on 2016/4/22.</br>
+ * <br>☞120465271@qq.com☜</br>
+ */
+public class TcpServerSocket {
+
+    public static void main(String[] args) {
+
+        try {
+            ServerSocket serverSocket = new ServerSocket(8888);
+            Socket socket = serverSocket.accept();
+            //读取客户端数据
+            InputStream info = socket.getInputStream();
+            DataInputStream dis = new DataInputStream(info);
+            System.out.println(dis.readUTF());
+
+            //向客户端输出数据
+            OutputStream os = socket.getOutputStream();
+            DataOutputStream dos = new DataOutputStream(os);
+            dos.writeUTF("Hello!");
+            dos.flush();
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+
+    }
+
+}
Index: app/src/main/res/layout/activity_main_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main_1.xml	(revision )
+++ app/src/main/res/layout/activity_main_1.xml	(revision )
@@ -0,0 +1,21 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.example.demoss.MainActivity" >
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/hello_world"/>
+    
+    <com.example.demoss.LButtonBg 
+        android:id="@+id/btn"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="点击"/>
+</RelativeLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity13.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity13.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity13.java	(revision )
@@ -0,0 +1,23 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * shader做出移动瞄准镜的效果
+ * @author Administrator
+ *
+ */
+public class MainActivity13 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main13);
+	}
+
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity6.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity6.java	(revision )
@@ -0,0 +1,23 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+/**
+ * ScrollView
+ * @author Administrator
+ *
+ */
+public class MainActivity6 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main6);
+	}
+
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10_1.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity10_1.java	(revision )
@@ -0,0 +1,27 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+import android.widget.LinearLayout.LayoutParams;
+
+public class MainActivity10_1 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		LinearLayout view = new LinearLayout(this);
+		view.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+		
+		TextView t  =new TextView(this);
+		t.setText("sdfsdf");
+		
+		view.addView(t);
+		
+		setContentView(view);
+	}
+
+	
+}
Index: app/src/main/res/layout/activity_main13_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main13_1.xml	(revision )
+++ app/src/main/res/layout/activity_main13_1.xml	(revision )
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+
+    
+         <com.cn.seymour.androidjack.demos.widget.ReflectView
+	    android:layout_width="wrap_content"
+	    android:layout_height="wrap_content"/>
+   
+
+    <!-- <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" >
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical" >
+
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/scenery" />
+
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/scenery" />
+
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/scenery" />
+        </LinearLayout>
+    </ScrollView> -->
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main18.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main18.xml	(revision )
+++ app/src/main/res/layout/activity_main18.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <com.cn.seymour.androidjack.demos.widget.MatrixImageView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scaleType="matrix"/>
+
+</LinearLayout>
Index: app/src/main/res/drawable/bg_middle_custom_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_middle_custom_dialog.xml	(revision )
+++ app/src/main/res/drawable/bg_middle_custom_dialog.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item><shape>
+            <gradient android:angle="270" android:endColor="#f5f5f5" android:startColor="#f5f5f5" />
+    </shape></item>
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/layout_main10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_main10.xml	(revision )
+++ app/src/main/res/layout/layout_main10.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/saveSaveLayerRestore.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/saveSaveLayerRestore.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/saveSaveLayerRestore.java	(revision )
@@ -0,0 +1,57 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.util.AttributeSet;
+import android.view.View;
+
+public class saveSaveLayerRestore extends View {
+	Paint mPaint;
+	
+	public saveSaveLayerRestore(Context context) {
+		super(context);
+		mPaint = new Paint();
+	}
+
+	public saveSaveLayerRestore(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		super.onDraw(canvas);
+		
+		Paint background = new Paint();
+		Paint line = new Paint();
+		
+		line.setColor(0xFFFF0000);
+		line.setStrokeWidth(4);
+		background.setColor(Color.GRAY);
+		
+		int x = 500;
+		int y = 500;
+		
+		canvas.drawRect(0,0, x, y, background);
+		/**
+		 * ��һ���Ǳ������꣬���걣��󣬻�Բ�������ϵ����ת��
+		 */
+		canvas.save();
+		canvas.rotate(90,x/2, y/2);
+		
+		canvas.drawLine(x/2, 0, 0, y/2, line);
+		canvas.drawLine(x/2, 0, x, y/2, line);
+		canvas.drawLine(x/2, 0, x/2, y, line);
+	
+		/**
+		 * ��һ����ȡ���������꣬���걣��󣬻�Բ�������ϵ����ת��
+		 */
+//		canvas.restore();
+		canvas.drawCircle(x-100, y-100, 50, line);
+	}
+
+	
+}
Index: app/src/main/res/layout/activity_main7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main7.xml	(revision )
+++ app/src/main/res/layout/activity_main7.xml	(revision )
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:bf="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+	<LinearLayout 
+	    android:layout_width="match_parent"
+	    android:layout_height="match_parent"
+	    android:orientation="vertical">
+	    
+	    <ImageView 
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/qiqiu"/>
+	    
+	    
+	    <com.cn.seymour.androidjack.view.RoundImageView
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/qiqiu"/>
+	    
+	    <com.cn.seymour.androidjack.demos.widget.RoundImageView
+	       android:id="@+id/id_qiqiu"
+	       android:layout_width="wrap_content"
+	       android:layout_height="wrap_content"
+	       android:layout_margin="10dp"
+	       android:src="@drawable/qiqiu" />
+	    
+	    <com.cn.seymour.androidjack.demos.widget.RoundImageView
+	        android:layout_width="200dp"
+	        android:layout_height="200dp"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/aa"/>
+	    
+	    <com.cn.seymour.androidjack.demos.widget.RoundImageView
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/icon"/>
+	    
+	    <com.cn.seymour.androidjack.demos.widget.RoundImageView
+	        android:id="@+id/id_meinv"
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/aa"
+	        bf:boderRadius="20dp"
+	        bf:type="round"/>
+	    
+	    <com.cn.seymour.androidjack.demos.widget.RoundImageView
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/icon"
+	        bf:boderRadius="40dp"
+	        bf:type="round"/>
+	    
+	    <com.cn.seymour.androidjack.demos.widget.RoundImageView
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:layout_margin="10dp"
+	        android:src="@drawable/qiqiu"
+	        bf:boderRadius="60dp"
+	        bf:type="round"/>
+	</LinearLayout>
+    
+</ScrollView>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/MAlertDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/MAlertDialog.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/MAlertDialog.java	(revision )
@@ -0,0 +1,200 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup.LayoutParams;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+public class MAlertDialog extends Dialog {
+ 
+   public MAlertDialog(Context context, int theme) {
+       super(context, theme);
+   }
+ 
+   public MAlertDialog(Context context) {
+       super(context);
+   }
+ 
+   /**
+    * Helper class for creating a custom dialog
+    */
+   public static class Builder {
+ 
+       private Context context;
+       private String title;
+       private String message;
+       private String positiveButtonText;
+       private String negativeButtonText;
+       private View contentView;
+ 
+       private OnClickListener positiveButtonClickListener, negativeButtonClickListener;
+ 
+       public Builder(Context context) {
+           this.context = context;
+       }
+ 
+       /**
+        * Set the Dialog message from String
+        * @param message
+        * @return
+        */
+       public Builder setMessage(String message) {
+           this.message = message;
+           return this;
+       }
+ 
+       /**
+        * Set the Dialog message from resource
+        * @param message
+        * @return
+        */
+       public Builder setMessage(int message) {
+           this.message = (String) context.getText(message);
+           return this;
+       }
+ 
+       /**
+        * Set the Dialog title from resource
+        * @param title
+        * @return
+        */
+       public Builder setTitle(int title) {
+           this.title = (String) context.getText(title);
+           return this;
+       }
+ 
+       /**
+        * Set the Dialog title from String
+        * @param title
+        * @return
+        */
+       public Builder setTitle(String title) {
+           this.title = title;
+           return this;
+       }
+ 
+       /**
+        * Set a custom content view for the Dialog.
+        * If a message is set, the contentView is not
+        * added to the Dialog...
+        * @param v
+        * @return
+        */
+       public Builder setContentView(View v) {
+           this.contentView = v;
+           return this;
+       }
+ 
+       /**
+        * Set the positive button resource and it's listener
+        * @param positiveButtonText
+        * @param listener
+        * @return
+        */
+       public Builder setPositiveButton(int positiveButtonText, OnClickListener listener) {
+           this.positiveButtonText = (String) context.getText(positiveButtonText);
+           this.positiveButtonClickListener = listener;
+           return this;
+       }
+ 
+       /**
+        * Set the positive button text and it's listener
+        * @param positiveButtonText
+        * @param listener
+        * @return
+        */
+       public Builder setPositiveButton(String positiveButtonText, OnClickListener listener) {
+           this.positiveButtonText = positiveButtonText;
+           this.positiveButtonClickListener = listener;
+           return this;
+       }
+ 
+       /**
+        * Set the negative button resource and it's listener
+        * @param negativeButtonText
+        * @param listener
+        * @return
+        */
+       public Builder setNegativeButton(int negativeButtonText, OnClickListener listener) {
+           this.negativeButtonText = (String) context.getText(negativeButtonText);
+           this.negativeButtonClickListener = listener;
+           return this;
+       }
+ 
+       /**
+        * Set the negative button text and it's listener
+        * @param negativeButtonText
+        * @param listener
+        * @return
+        */
+       public Builder setNegativeButton(String negativeButtonText, OnClickListener listener) {
+           this.negativeButtonText = negativeButtonText;
+           this.negativeButtonClickListener = listener;
+           return this;
+       }
+ 
+       /**
+        * Create the custom dialog
+        */
+       public MAlertDialog create() {
+           LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+           // instantiate the dialog with the custom Theme
+           final MAlertDialog dialog = new MAlertDialog(context,R.style.MAlertDialog);
+           dialog.setCanceledOnTouchOutside(false);
+           View layout = inflater.inflate(R.layout.custom_dialog_layout, null);
+           dialog.addContentView(layout, new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));
+           // set the dialog title
+           ((TextView) layout.findViewById(R.id.title)).setText(title);
+           // set the confirm button
+           if (positiveButtonText != null) {
+               ((Button) layout.findViewById(R.id.positiveButton)).setText(positiveButtonText);
+               if (positiveButtonClickListener != null) {
+                   ((Button) layout.findViewById(R.id.positiveButton)).setOnClickListener(new View.OnClickListener() {
+                               public void onClick(View v) {
+                                   positiveButtonClickListener.onClick(dialog, DialogInterface.BUTTON_POSITIVE);
+                               }
+                           });
+               }
+           } else {
+               // if no confirm button just set the visibility to GONE
+               layout.findViewById(R.id.positiveButton).setVisibility(View.GONE);
+           }
+            
+           // set the cancel button
+           if (negativeButtonText != null) {
+               ((Button) layout.findViewById(R.id.negativeButton)).setText(negativeButtonText);
+               if (negativeButtonClickListener != null) {
+                   ((Button) layout.findViewById(R.id.negativeButton)).setOnClickListener(new View.OnClickListener() {
+                               public void onClick(View v) {
+                                   negativeButtonClickListener.onClick(dialog, DialogInterface.BUTTON_NEGATIVE);
+                               }
+                           });
+               }
+           } else {
+               // if no confirm button just set the visibility to GONE
+               layout.findViewById(R.id.negativeButton).setVisibility(View.GONE);
+           }
+            
+           // set the content message
+           if (message != null) {
+               ((TextView) layout.findViewById(R.id.message)).setText(message);
+           } else if (contentView != null) {
+               // if no message set
+               // add the contentView to the dialog body
+               ((LinearLayout) layout.findViewById(R.id.content)).removeAllViews();
+               ((LinearLayout) layout.findViewById(R.id.content)).addView(contentView, new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+           }
+           dialog.setContentView(layout);
+           return dialog;
+       }
+ 
+   }
+ 
+}
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/MatrixImageView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/MatrixImageView.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/MatrixImageView.java	(revision )
@@ -0,0 +1,207 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Matrix;
+import android.graphics.PointF;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.view.MotionEvent;
+import android.widget.ImageView;
+
+import com.cn.seymour.androidjack.R;
+
+public class MatrixImageView extends ImageView {
+	private static final int MODE_NONE = 0x00123;//Ĭ�ϵĲ���ģʽ
+	private static final int MODE_DRAG = 0x00321;//��קģʽ
+	private static final int MODE_ZOOM = 0x00132;//��ת����
+	
+	/**
+	 * �当前触摸模式
+	 * <br>int
+	 */
+	private int mode;
+	
+	/**
+	 * 上次手指移动的距离
+	 * <br>float
+	 */
+	private float preMove = 1F;
+	/**
+	 * 保存的手指移动的距离
+	 * <br>float
+	 */
+	private float saveRotate = 0F;
+
+	/**
+	 * �旋转的角度
+	 * <br>float
+	 */
+	private float rotate = 0F;
+	
+	/**
+	 * 上一次触摸点的坐标距离��������
+	 * <br>float[]
+	 */
+	private float[] preEventCoor;
+	
+	/**
+	 * �起点，中点对象�
+	 * <br>PointF
+	 */
+	private PointF start,mid;
+	
+	/**
+	 * 当前的Matrix对象
+	 * <br>Matrix
+	 */
+	private Matrix currentMatrix; 
+	
+	/**
+	 * �保存的Matrix对象�
+	 * <br>Matrix
+	 */
+	private Matrix savedMatrix;
+	
+	private Context context;
+	
+	private Bitmap mBitmap;
+	
+	public MatrixImageView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		this.context = context;
+		
+		init();
+	}
+
+	private void init() {
+		// TODO Auto-generated method stub
+		currentMatrix = new Matrix();
+		savedMatrix = new Matrix();
+		start = new PointF();
+		mid = new PointF();
+		
+		mode = MODE_NONE;
+		
+		Bitmap bitmap = BitmapFactory.decodeResource(context.getResources(), R.drawable.scenery);
+
+		DisplayMetrics dm = context.getResources().getDisplayMetrics();
+		mBitmap = Bitmap.createScaledBitmap(bitmap, dm.widthPixels, dm.heightPixels, true);
+		
+		setImageBitmap(bitmap);  
+	}
+
+	@Override
+	public boolean onTouchEvent(MotionEvent event) {
+		switch (event.getAction() & MotionEvent.ACTION_MASK) {  
+        case MotionEvent.ACTION_DOWN://单点接触屏幕时
+        	System.out.println("单点接触屏幕");
+            savedMatrix.set(currentMatrix);  
+            start.set(event.getX(), event.getY());  
+            mode = MODE_DRAG;  
+            preEventCoor = null;  
+            break;  
+        case MotionEvent.ACTION_POINTER_DOWN:// 第二个点接触屏幕时
+        	System.out.println("第二个点接触屏幕");
+            preMove = calSpacing(event);  
+            if (preMove > 10F) {  
+                savedMatrix.set(currentMatrix);  
+                calMidPoint(mid, event);  
+                mode = MODE_ZOOM;  
+            }  
+            preEventCoor = new float[4];  
+            preEventCoor[0] = event.getX(0);  
+            preEventCoor[1] = event.getX(1);  
+            preEventCoor[2] = event.getY(0);  
+            preEventCoor[3] = event.getY(1);  
+            saveRotate = calRotation(event);  
+            break;  
+        case MotionEvent.ACTION_UP:// 单点离开屏幕时
+        	System.out.println("单点离开屏幕时");
+        case MotionEvent.ACTION_POINTER_UP:// 第二个点离开屏幕时
+        	System.out.println("第二个点离开屏幕时");
+            mode = MODE_NONE;  
+            preEventCoor = null;  
+            break;  
+        case MotionEvent.ACTION_MOVE:// 触摸点移动时
+            /* 
+             * 单点触控拖拽平移
+             */  
+            if (mode == MODE_DRAG) {  
+                currentMatrix.set(savedMatrix);  
+                float dx = event.getX() - start.x;  
+                float dy = event.getY() - start.y;  
+                /*System.out.println("==============================================");
+                float[] s2 = new float[9];
+                currentMatrix.getValues(s2);
+                System.out.println("开始：" + Arrays.toString(s2));*/
+                
+                currentMatrix.postTranslate(dx, dy);
+                /*float[] s1 = new float[9];
+                currentMatrix.getValues(s1);
+                System.out.println("dx dy " + dx + "  "  +dy );
+                System.out.println("结束： " +Arrays.toString(s1));
+                System.out.println("==============================================");*/
+            }  
+            /* 
+             * 两点触控拖放旋转
+             */  
+            else if (mode == MODE_ZOOM && event.getPointerCount() == 2) {  
+                float currentMove = calSpacing(event);  
+                currentMatrix.set(savedMatrix);  
+                /* 
+                 * 指尖移动距离大于10F缩放
+                 */  
+                if (currentMove > 10F) {  
+                    float scale = currentMove / preMove;  
+                    currentMatrix.postScale(scale, scale, mid.x, mid.y);  
+                }  
+                /* 
+                 * 保持两点时旋转
+                 */  
+                if (preEventCoor != null) {  
+                    rotate = calRotation(event);  
+                    float r = rotate - saveRotate;  
+                    currentMatrix.postRotate(r, getMeasuredWidth() / 2, getMeasuredHeight() / 2);  
+                }  
+            }  
+            break;  
+        }  
+  
+        setImageMatrix(currentMatrix);  
+        return true;  
+	}
+
+	/** 
+     * �计算两个触摸点间的距离
+     */  
+    private float calSpacing(MotionEvent event) {  
+        float x = event.getX(0) - event.getX(1);  
+        float y = event.getY(0) - event.getY(1);  
+        return (float) Math.sqrt(x * x + y * y);  
+    }  
+  
+    /** 
+     * �计算两个触摸点的中点坐标 ����
+     */  
+    private void calMidPoint(PointF point, MotionEvent event) {  
+        float x = event.getX(0) + event.getX(1);  
+        float y = event.getY(0) + event.getY(1);  
+        point.set(x / 2, y / 2);  
+    }  
+  
+    /** 
+     * �计算旋转角度
+     *
+     * @param event 事件对象
+     * @return 角度值
+     */  
+    private float calRotation(MotionEvent event) {  
+        double deltaX = (event.getX(0) - event.getX(1));  
+        double deltaY = (event.getY(0) - event.getY(1));  
+        double radius = Math.atan2(deltaY, deltaX);  
+        return (float) Math.toDegrees(radius);  
+    }
+
+}
Index: app/src/main/java/com/cn/seymour/androidjack/tcpudp/UdpClientSocket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/tcpudp/UdpClientSocket.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/tcpudp/UdpClientSocket.java	(revision )
@@ -0,0 +1,41 @@
+package com.cn.seymour.androidjack.tcpudp;
+
+import java.io.IOException;
+import java.net.DatagramPacket;
+import java.net.DatagramSocket;
+import java.net.InetAddress;
+import java.net.SocketException;
+import java.net.UnknownHostException;
+
+/**
+ * ...
+ * <br>Created by seyMour on 2016/4/22.</br>
+ * <br>☞120465271@qq.com☜</br>
+ */
+public class UdpClientSocket {
+    private DatagramSocket datagramSocket = null;
+
+    private byte[] buffer = new byte[1024];
+
+    public UdpClientSocket() throws SocketException {
+        datagramSocket = new DatagramSocket();
+    }
+
+    public DatagramPacket send() throws Exception{
+        DatagramPacket dp = new DatagramPacket("info".getBytes(), "info".getBytes().length, InetAddress.getByName("host"),8080);
+        datagramSocket.send(dp);
+        return dp;
+    }
+
+    public String receive() throws Exception{
+        DatagramPacket dp = new DatagramPacket(buffer, buffer.length);
+        datagramSocket.receive(dp);
+        return new String(dp.getData(), 0, dp.getLength());
+    }
+
+    public static void main(String[] args) throws Exception {
+        UdpClientSocket u = new UdpClientSocket();
+        u.send();
+        u.receive();
+    }
+}
Index: app/src/main/res/layout/list_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_items.xml	(revision )
+++ app/src/main/res/layout/list_items.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>  
+<RelativeLayout   
+    android:id="@+id/RelativeLayout01"   
+    android:layout_width="fill_parent"   
+    xmlns:android="http://schemas.android.com/apk/res/android"   
+    android:layout_height="wrap_content"   
+    android:paddingBottom="4dip"   
+    android:paddingLeft="12dip"  
+    android:paddingRight="12dip">  
+
+<TextView   
+    android:text="TextView01"   
+    android:layout_height="wrap_content"   
+    android:textSize="20dip"   
+    android:layout_width="fill_parent"   
+    android:id="@+id/ItemTitle"  
+    />  
+
+</RelativeLayout>  
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/reflect/fruit.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/reflect/fruit.properties	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/reflect/fruit.properties	(revision )
@@ -0,0 +1,2 @@
+apple=Reflect.Apple
+orange=Reflect.Orange
\ No newline at end of file
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageView2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageView2.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/CustomImageView2.java	(revision )
@@ -0,0 +1,134 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.RectF;
+import android.graphics.Xfermode;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.view.View;
+
+public class CustomImageView2 extends View{
+	private int type;
+	private static final int TYPE_CIRCLE = 0;
+	private static final int TYPE_ROUND = 1;
+	
+	private Bitmap mSrc;
+	private int mRadius;
+	private int mWeidth;
+	private int mHeidth;
+	
+	public CustomImageView2(Context context, AttributeSet attrs,
+			int defStyleAttr) {
+		super(context, attrs, defStyleAttr);
+		
+		TypedArray a = this.getContext().obtainStyledAttributes(attrs, R.styleable.CustomImageView, defStyleAttr, 0);
+		
+		int index = a.getIndexCount();
+		for (int i = 0 ;i < index;i++){
+			int as = a.getIndex(i);
+			switch (as) {
+			case R.styleable.CustomImageView_src:
+				mSrc = BitmapFactory.decodeResource(this.getResources(),a.getResourceId(as, 0));
+				break;
+			case R.styleable.CustomImageView_type:
+				type = a.getInt(as, 0);
+				break;
+			case R.styleable.CustomImageView_boderRadius:
+				mRadius = a.getDimensionPixelSize(as, (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,10f, getResources().getDisplayMetrics()));
+				break;
+			default:
+				break;
+			}
+		}
+		
+		a.recycle();
+	}
+
+	public CustomImageView2(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public CustomImageView2(Context context) {
+		this(context, null);
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		switch (type) {
+		case TYPE_CIRCLE:
+			int min = Math.min(mWeidth, mHeidth);
+			mSrc = Bitmap.createScaledBitmap(mSrc, min, min, true);
+			canvas.drawBitmap(createCircleImage(mSrc,min), 0, 0, null);
+			break;
+		case TYPE_ROUND:
+			canvas.drawBitmap(createRoundImage(mSrc), 0, 0, null);
+			break;
+		}
+	}
+
+	private Bitmap createRoundImage(Bitmap mSrc2) {
+		Paint paint = new Paint();
+		paint.setAntiAlias(true);
+		Bitmap target = Bitmap.createBitmap(mWeidth, mHeidth, Config.ARGB_8888);
+		Canvas canvas = new Canvas(target);
+		RectF rect = new RectF(0, 0, mSrc2.getWidth(), mSrc2.getHeight());
+		canvas.drawRoundRect(rect, 0, 0, paint);
+		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));
+		canvas.drawBitmap(mSrc2, 0, 0, paint);
+		return target;
+	}
+
+	private Bitmap createCircleImage(Bitmap mSrc2, int min) {
+		Paint paint = new Paint();
+		paint.setAntiAlias(true);
+		Bitmap target = Bitmap.createBitmap(mWeidth, mHeidth, Config.ARGB_8888);
+		Canvas canvas = new Canvas(target);
+		canvas.drawCircle(min/2, min/2, min/2, paint);
+		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));
+		canvas.drawBitmap(mSrc2, 0, 0, paint);
+		return target;
+	}
+
+	@Override
+	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+//		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+		int specMode = MeasureSpec.getMode(widthMeasureSpec);
+		int specSize = MeasureSpec.getSize(widthMeasureSpec);		
+		if(specMode == MeasureSpec.EXACTLY){
+			mWeidth = specSize;
+		}else{
+			int desireImg = getPaddingLeft() + getPaddingRight() + mSrc.getWidth();
+			if(specMode == MeasureSpec.AT_MOST){
+				mWeidth = Math.min(specSize, desireImg);
+			}else{
+				mWeidth = desireImg;
+			}
+		}
+		
+		specMode = MeasureSpec.getMode(heightMeasureSpec);
+		specSize = MeasureSpec.getSize(heightMeasureSpec);
+		if(specMode == MeasureSpec.EXACTLY){
+			mHeidth = specSize;
+		}else{
+			int desireImg = getPaddingBottom()+getPaddingTop()+mSrc.getHeight();
+			if(specMode == MeasureSpec.AT_MOST){
+				mWeidth=Math.min(specSize, desireImg);
+			}else
+				mHeidth = desireImg;
+		}
+		
+		setMeasuredDimension(mWeidth, mHeidth);
+	}
+
+
+}
Index: app/src/main/res/layout/activity_main9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main9.xml	(revision )
+++ app/src/main/res/layout/activity_main9.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+>
+    
+    
+    <LinearLayout 
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+       >
+        
+          <Button 
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        />
+    </LinearLayout>
+    
+</LinearLayout>
Index: app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity20.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity20.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/MainActivity20.java	(revision )
@@ -0,0 +1,18 @@
+package com.cn.seymour.androidjack.demos;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+import com.cn.seymour.androidjack.R;
+
+public class MainActivity20 extends Activity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		
+		setContentView(R.layout.activity_main20);
+	}
+
+	
+}
Index: app/src/main/java/com/cn/seymour/androidjack/demos/widget/Meter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cn/seymour/androidjack/demos/widget/Meter.java	(revision )
+++ app/src/main/java/com/cn/seymour/androidjack/demos/widget/Meter.java	(revision )
@@ -0,0 +1,62 @@
+package com.cn.seymour.androidjack.demos.widget;
+
+import com.cn.seymour.androidjack.R;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.ImageButton;
+import android.widget.LinearLayout;
+import android.widget.ProgressBar;
+
+public class Meter extends LinearLayout {
+	int max = 100;
+	int incrAmount =1;
+	int decrAmount =-1;
+	ProgressBar bar = null;
+	public Meter(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		this.setOrientation(HORIZONTAL);
+		
+		TypedArray a = this.getContext().obtainStyledAttributes(attrs, R.styleable.Meter);
+		
+		max = a.getInt(R.styleable.Meter_max, 100);
+		incrAmount = a.getInt(R.styleable.Meter_incr, 1);
+		decrAmount = a.getInt(R.styleable.Meter_decr, 1);
+		
+		a.recycle();
+	}
+	
+	@Override
+	protected void onFinishInflate() {
+		super.onFinishInflate();
+		
+		LayoutInflater.from(this.getContext()).inflate(R.layout.meter, this);
+		
+		bar = (ProgressBar)findViewById(R.id.bar);
+		
+		bar.setMax(max);
+		
+		ImageButton btn=(ImageButton)findViewById(R.id.incr);
+		btn.setOnClickListener(new OnClickListener() {
+			
+			@Override
+			public void onClick(View arg0) {
+				System.out.println(incrAmount);
+				bar.incrementProgressBy(incrAmount);
+			}
+		});
+		
+		btn=(ImageButton)findViewById(R.id.decr);  
+        btn.setOnClickListener(new OnClickListener() {
+            public void onClick(View v) {  
+            	System.out.println(decrAmount);
+                bar.incrementProgressBy(decrAmount);  
+            }  
+        });  
+	}
+
+	
+}
